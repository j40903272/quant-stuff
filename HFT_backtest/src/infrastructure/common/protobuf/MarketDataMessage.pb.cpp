// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketDataMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MarketDataMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {
class MarketDataMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage>
     _instance;
  const ::protobuf::MarketDataMessage_MBP* mbp_;
  const ::protobuf::MarketDataMessage_MBO* mbo_;
  const ::protobuf::MarketDataMessage_TRADE* trade_;
  const ::protobuf::MarketDataMessage_IMPLIED* implied_;
  const ::protobuf::MarketDataMessage_TPRICE* tprice_;
  const ::protobuf::MarketDataMessage_TMPR02_t* r02_;
} _MarketDataMessage_default_instance_;
class MarketDataMessage_MBPDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage_MBP>
     _instance;
} _MarketDataMessage_MBP_default_instance_;
class MarketDataMessage_MBODefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage_MBO>
     _instance;
} _MarketDataMessage_MBO_default_instance_;
class MarketDataMessage_TRADEDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage_TRADE>
     _instance;
} _MarketDataMessage_TRADE_default_instance_;
class MarketDataMessage_IMPLIEDDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage_IMPLIED>
     _instance;
} _MarketDataMessage_IMPLIED_default_instance_;
class MarketDataMessage_TPRICEDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage_TPRICE>
     _instance;
} _MarketDataMessage_TPRICE_default_instance_;
class TMPMsgTime_tDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TMPMsgTime_t>
     _instance;
} _TMPMsgTime_t_default_instance_;
class TMPHdr_tDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TMPHdr_t>
     _instance;
} _TMPHdr_t_default_instance_;
class MarketDataMessage_TMPR02_tDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarketDataMessage_TMPR02_t>
     _instance;
} _MarketDataMessage_TMPR02_t_default_instance_;

namespace protobuf_MarketDataMessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(MarketDataMessageDefaultTypeInternal, mbp_),
  offsetof(MarketDataMessageDefaultTypeInternal, mbo_),
  offsetof(MarketDataMessageDefaultTypeInternal, trade_),
  offsetof(MarketDataMessageDefaultTypeInternal, implied_),
  offsetof(MarketDataMessageDefaultTypeInternal, tprice_),
  offsetof(MarketDataMessageDefaultTypeInternal, r02_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, providertime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, exchangetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, sequencenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, calculatedflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, ask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, bidqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, askqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBP, ispacketend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, numberoforders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_MBO, ispacketend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, counterpartyorderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TRADE, ispacketend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, ask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, bidqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, askqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_IMPLIED, ispacketend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TPRICE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TPRICE, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TPRICE, bscode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TPRICE, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TPRICE, ispacketend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPMsgTime_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPMsgTime_t, epoch_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPMsgTime_t, ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, msg_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, msgseqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, msg_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, fcm_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TMPHdr_t, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, hdr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, exectype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, cm_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, fcm_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, order_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, ord_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, user_define_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, symbol_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, sym_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, investor_acno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, investor_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, ordtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, timeinforce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, positioneffect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, lastpx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, lastqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, px_subtotal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, cumqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leavesqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, before_qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leg_side_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leg_side_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leg_px_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leg_px_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leg_qty_1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, leg_qty_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, org_trans_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, transacttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, target_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, uniq_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, rpt_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, protocol_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarketDataMessage_TMPR02_t, checksum_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MarketDataMessage)},
  { 18, -1, sizeof(MarketDataMessage_MBP)},
  { 29, -1, sizeof(MarketDataMessage_MBO)},
  { 41, -1, sizeof(MarketDataMessage_TRADE)},
  { 52, -1, sizeof(MarketDataMessage_IMPLIED)},
  { 63, -1, sizeof(MarketDataMessage_TPRICE)},
  { 72, -1, sizeof(TMPMsgTime_t)},
  { 79, -1, sizeof(TMPHdr_t)},
  { 90, -1, sizeof(MarketDataMessage_TMPR02_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_MBP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_MBO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_TRADE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_IMPLIED_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_TPRICE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TMPMsgTime_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TMPHdr_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarketDataMessage_TMPR02_t_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MarketDataMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _MarketDataMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_default_instance_);_MarketDataMessage_MBP_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_MBP_default_instance_);_MarketDataMessage_MBO_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_MBO_default_instance_);_MarketDataMessage_TRADE_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_TRADE_default_instance_);_MarketDataMessage_IMPLIED_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_IMPLIED_default_instance_);_MarketDataMessage_TPRICE_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_TPRICE_default_instance_);_TMPMsgTime_t_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TMPMsgTime_t_default_instance_);_TMPHdr_t_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TMPHdr_t_default_instance_);_MarketDataMessage_TMPR02_t_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarketDataMessage_TMPR02_t_default_instance_);_MarketDataMessage_default_instance_.mbp_ = const_cast< ::protobuf::MarketDataMessage_MBP*>(
      ::protobuf::MarketDataMessage_MBP::internal_default_instance());
  _MarketDataMessage_default_instance_.mbo_ = const_cast< ::protobuf::MarketDataMessage_MBO*>(
      ::protobuf::MarketDataMessage_MBO::internal_default_instance());
  _MarketDataMessage_default_instance_.trade_ = const_cast< ::protobuf::MarketDataMessage_TRADE*>(
      ::protobuf::MarketDataMessage_TRADE::internal_default_instance());
  _MarketDataMessage_default_instance_.implied_ = const_cast< ::protobuf::MarketDataMessage_IMPLIED*>(
      ::protobuf::MarketDataMessage_IMPLIED::internal_default_instance());
  _MarketDataMessage_default_instance_.tprice_ = const_cast< ::protobuf::MarketDataMessage_TPRICE*>(
      ::protobuf::MarketDataMessage_TPRICE::internal_default_instance());
  _MarketDataMessage_default_instance_.r02_ = const_cast< ::protobuf::MarketDataMessage_TMPR02_t*>(
      ::protobuf::MarketDataMessage_TMPR02_t::internal_default_instance());
  _MarketDataMessage_MBP_default_instance_._instance.get_mutable()->ispacketend_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _MarketDataMessage_MBO_default_instance_._instance.get_mutable()->ispacketend_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _MarketDataMessage_TRADE_default_instance_._instance.get_mutable()->ispacketend_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _MarketDataMessage_IMPLIED_default_instance_._instance.get_mutable()->ispacketend_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _MarketDataMessage_TPRICE_default_instance_._instance.get_mutable()->ispacketend_ = const_cast< ::google::protobuf::BoolValue*>(
      ::google::protobuf::BoolValue::internal_default_instance());
  _TMPHdr_t_default_instance_._instance.get_mutable()->msg_time_ = const_cast< ::protobuf::TMPMsgTime_t*>(
      ::protobuf::TMPMsgTime_t::internal_default_instance());
  _MarketDataMessage_TMPR02_t_default_instance_._instance.get_mutable()->hdr_ = const_cast< ::protobuf::TMPHdr_t*>(
      ::protobuf::TMPHdr_t::internal_default_instance());
  _MarketDataMessage_TMPR02_t_default_instance_._instance.get_mutable()->org_trans_time_ = const_cast< ::protobuf::TMPMsgTime_t*>(
      ::protobuf::TMPMsgTime_t::internal_default_instance());
  _MarketDataMessage_TMPR02_t_default_instance_._instance.get_mutable()->transacttime_ = const_cast< ::protobuf::TMPMsgTime_t*>(
      ::protobuf::TMPMsgTime_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027MarketDataMessage.proto\022\010protobuf\032\036goo"
      "gle/protobuf/wrappers.proto\"\206\010\n\021MarketDa"
      "taMessage\022.\n\003MBP\030\001 \001(\0132\037.protobuf.Market"
      "DataMessage_MBPH\000\022.\n\003MBO\030\002 \001(\0132\037.protobu"
      "f.MarketDataMessage_MBOH\000\0222\n\005TRADE\030\003 \001(\013"
      "2!.protobuf.MarketDataMessage_TRADEH\000\0226\n"
      "\007IMPLIED\030\t \001(\0132#.protobuf.MarketDataMess"
      "age_IMPLIEDH\000\0224\n\006TPrice\030\n \001(\0132\".protobuf"
      ".MarketDataMessage_TPRICEH\000\0223\n\003R02\030\013 \001(\013"
      "2$.protobuf.MarketDataMessage_TMPR02_tH\000"
      "\022F\n\013MessageType\030\004 \001(\01621.protobuf.MarketD"
      "ataMessage.MarketDataMessageType\022\013\n\003Pid\030"
      "\005 \001(\t\022\024\n\014ProviderTime\030\006 \001(\003\022\024\n\014ExchangeT"
      "ime\030\007 \001(\003\022\026\n\016SequenceNumber\030\010 \001(\003\022B\n\016Cal"
      "culatedflag\030\014 \001(\0162*.protobuf.MarketDataM"
      "essage.CalculatedFlag\"\244\003\n\025MarketDataMess"
      "ageType\022!\n\035MarketDataMessageType_Invalid"
      "\020\000\022\"\n\036MarketDataMessageType_Snapshot\020\001\022\035"
      "\n\031MarketDataMessageType_Add\020\002\022 \n\034MarketD"
      "ataMessageType_Delete\020\003\022)\n%MarketDataMes"
      "sageType_ModifyWithPrice\020\004\022\'\n#MarketData"
      "MessageType_ModifyWithQty\020\005\022\037\n\033MarketDat"
      "aMessageType_Trade\020\006\022#\n\037MarketDataMessag"
      "eType_PacketEnd\020\007\022!\n\035MarketDataMessageTy"
      "pe_Implied\020\010\022 \n\034MarketDataMessageType_TP"
      "rice\020\t\022$\n MarketDataMessageType_TPrice_R"
      "02\020\n\"+\n\016CalculatedFlag\022\n\n\006Normal\020\000\022\r\n\tPr"
      "eMarket\020\001B\t\n\007message\"\221\001\n\025MarketDataMessa"
      "ge_MBP\022\r\n\005Count\030\001 \001(\005\022\013\n\003Bid\030\002 \003(\003\022\013\n\003As"
      "k\030\003 \003(\003\022\016\n\006BidQty\030\004 \003(\003\022\016\n\006AskQty\030\005 \003(\003\022"
      "/\n\013IsPacketEnd\030\006 \001(\0132\032.google.protobuf.B"
      "oolValue\"\252\001\n\025MarketDataMessage_MBO\022\017\n\007Or"
      "derID\030\001 \001(\003\022\r\n\005Price\030\002 \001(\003\022\013\n\003Qty\030\003 \001(\003\022"
      "\r\n\005Level\030\004 \001(\005\022\014\n\004Side\030\005 \001(\005\022\026\n\016NumberOf"
      "Orders\030\006 \001(\005\022/\n\013IsPacketEnd\030\007 \001(\0132\032.goog"
      "le.protobuf.BoolValue\"\242\001\n\027MarketDataMess"
      "age_TRADE\022\017\n\007OrderID\030\001 \001(\003\022\r\n\005Price\030\002 \001("
      "\003\022\013\n\003Qty\030\003 \001(\003\022\014\n\004Side\030\004 \001(\005\022\033\n\023Counterp"
      "artyOrderID\030\005 \001(\003\022/\n\013IsPacketEnd\030\006 \001(\0132\032"
      ".google.protobuf.BoolValue\"\225\001\n\031MarketDat"
      "aMessage_IMPLIED\022\r\n\005Count\030\001 \001(\005\022\013\n\003Bid\030\002"
      " \003(\003\022\013\n\003Ask\030\003 \003(\003\022\016\n\006BidQty\030\004 \003(\003\022\016\n\006Ask"
      "Qty\030\005 \003(\003\022/\n\013IsPacketEnd\030\006 \001(\0132\032.google."
      "protobuf.BoolValue\"x\n\030MarketDataMessage_"
      "TPRICE\022\r\n\005Price\030\001 \001(\003\022\016\n\006BSCode\030\002 \001(\003\022\014\n"
      "\004Type\030\003 \001(\003\022/\n\013IsPacketEnd\030\004 \001(\0132\032.googl"
      "e.protobuf.BoolValue\"+\n\014TMPMsgTime_t\022\017\n\007"
      "epoch_s\030\001 \001(\005\022\n\n\002ms\030\002 \001(\r\"\224\001\n\010TMPHdr_t\022\022"
      "\n\nmsg_length\030\001 \001(\r\022\021\n\tMsgSeqNum\030\002 \001(\r\022(\n"
      "\010msg_time\030\003 \001(\0132\026.protobuf.TMPMsgTime_t\022"
      "\023\n\013MessageType\030\004 \001(\r\022\016\n\006fcm_id\030\005 \001(\r\022\022\n\n"
      "session_id\030\006 \001(\r\"\215\006\n\032MarketDataMessage_T"
      "MPR02_t\022\037\n\003hdr\030\001 \001(\0132\022.protobuf.TMPHdr_t"
      "\022\023\n\013status_code\030\002 \001(\r\022\020\n\010ExecType\030\003 \001(\005\022"
      "\r\n\005cm_id\030\004 \001(\r\022\016\n\006fcm_id\030\005 \001(\r\022\020\n\010order_"
      "no\030\006 \001(\t\022\016\n\006ord_id\030\007 \001(\r\022\023\n\013user_define\030"
      "\010 \001(\t\022\023\n\013symbol_type\030\t \001(\r\022\013\n\003sym\030\n \001(\t\022"
      "\r\n\005Price\030\013 \001(\005\022\013\n\003qty\030\014 \001(\r\022\025\n\rinvestor_"
      "acno\030\r \001(\r\022\025\n\rinvestor_flag\030\016 \001(\005\022\014\n\004Sid"
      "e\030\017 \001(\r\022\017\n\007OrdType\030\020 \001(\r\022\023\n\013TimeInForce\030"
      "\021 \001(\r\022\026\n\016PositionEffect\030\022 \001(\005\022\016\n\006LastPx\030"
      "\023 \001(\005\022\017\n\007LastQty\030\024 \001(\r\022\023\n\013px_subtotal\030\025 "
      "\001(\003\022\016\n\006CumQty\030\026 \001(\r\022\021\n\tLeavesQty\030\027 \001(\r\022\022"
      "\n\nbefore_qty\030\030 \001(\r\022\022\n\nleg_side_1\030\031 \001(\r\022\022"
      "\n\nleg_side_2\030\032 \001(\r\022\020\n\010leg_px_1\030\033 \001(\005\022\020\n\010"
      "leg_px_2\030\034 \001(\005\022\021\n\tleg_qty_1\030\035 \001(\r\022\021\n\tleg"
      "_qty_2\030\036 \001(\r\022.\n\016org_trans_time\030\037 \001(\0132\026.p"
      "rotobuf.TMPMsgTime_t\022,\n\014TransactTime\030  \001"
      "(\0132\026.protobuf.TMPMsgTime_t\022\021\n\ttarget_id\030"
      "! \001(\r\022\017\n\007uniq_id\030\" \001(\r\022\017\n\007rpt_seq\030# \001(\r\022"
      "\025\n\rprotocol_type\030$ \001(\r\022\020\n\010CheckSum\030% \001(\r"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2848);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MarketDataMessage.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MarketDataMessage_2eproto

const ::google::protobuf::EnumDescriptor* MarketDataMessage_MarketDataMessageType_descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_enum_descriptors[0];
}
bool MarketDataMessage_MarketDataMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_Invalid;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_Snapshot;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_Add;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_Delete;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_ModifyWithPrice;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_ModifyWithQty;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_Trade;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_PacketEnd;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_Implied;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_TPrice;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_TPrice_R02;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_MIN;
const MarketDataMessage_MarketDataMessageType MarketDataMessage::MarketDataMessageType_MAX;
const int MarketDataMessage::MarketDataMessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MarketDataMessage_CalculatedFlag_descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_enum_descriptors[1];
}
bool MarketDataMessage_CalculatedFlag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarketDataMessage_CalculatedFlag MarketDataMessage::Normal;
const MarketDataMessage_CalculatedFlag MarketDataMessage::PreMarket;
const MarketDataMessage_CalculatedFlag MarketDataMessage::CalculatedFlag_MIN;
const MarketDataMessage_CalculatedFlag MarketDataMessage::CalculatedFlag_MAX;
const int MarketDataMessage::CalculatedFlag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage::kMBPFieldNumber;
const int MarketDataMessage::kMBOFieldNumber;
const int MarketDataMessage::kTRADEFieldNumber;
const int MarketDataMessage::kIMPLIEDFieldNumber;
const int MarketDataMessage::kTPriceFieldNumber;
const int MarketDataMessage::kR02FieldNumber;
const int MarketDataMessage::kMessageTypeFieldNumber;
const int MarketDataMessage::kPidFieldNumber;
const int MarketDataMessage::kProviderTimeFieldNumber;
const int MarketDataMessage::kExchangeTimeFieldNumber;
const int MarketDataMessage::kSequenceNumberFieldNumber;
const int MarketDataMessage::kCalculatedflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage::MarketDataMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage)
}
MarketDataMessage::MarketDataMessage(const MarketDataMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pid().size() > 0) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  ::memcpy(&providertime_, &from.providertime_,
    static_cast<size_t>(reinterpret_cast<char*>(&calculatedflag_) -
    reinterpret_cast<char*>(&providertime_)) + sizeof(calculatedflag_));
  clear_has_message();
  switch (from.message_case()) {
    case kMBP: {
      mutable_mbp()->::protobuf::MarketDataMessage_MBP::MergeFrom(from.mbp());
      break;
    }
    case kMBO: {
      mutable_mbo()->::protobuf::MarketDataMessage_MBO::MergeFrom(from.mbo());
      break;
    }
    case kTRADE: {
      mutable_trade()->::protobuf::MarketDataMessage_TRADE::MergeFrom(from.trade());
      break;
    }
    case kIMPLIED: {
      mutable_implied()->::protobuf::MarketDataMessage_IMPLIED::MergeFrom(from.implied());
      break;
    }
    case kTPrice: {
      mutable_tprice()->::protobuf::MarketDataMessage_TPRICE::MergeFrom(from.tprice());
      break;
    }
    case kR02: {
      mutable_r02()->::protobuf::MarketDataMessage_TMPR02_t::MergeFrom(from.r02());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage)
}

void MarketDataMessage::SharedCtor() {
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&providertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calculatedflag_) -
      reinterpret_cast<char*>(&providertime_)) + sizeof(calculatedflag_));
  clear_has_message();
  _cached_size_ = 0;
}

MarketDataMessage::~MarketDataMessage() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage)
  SharedDtor();
}

void MarketDataMessage::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_message()) {
    clear_message();
  }
}

void MarketDataMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage& MarketDataMessage::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage* MarketDataMessage::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage* n = new MarketDataMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:protobuf.MarketDataMessage)
  switch (message_case()) {
    case kMBP: {
      delete message_.mbp_;
      break;
    }
    case kMBO: {
      delete message_.mbo_;
      break;
    }
    case kTRADE: {
      delete message_.trade_;
      break;
    }
    case kIMPLIED: {
      delete message_.implied_;
      break;
    }
    case kTPrice: {
      delete message_.tprice_;
      break;
    }
    case kR02: {
      delete message_.r02_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void MarketDataMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&providertime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&calculatedflag_) -
      reinterpret_cast<char*>(&providertime_)) + sizeof(calculatedflag_));
  clear_message();
  _internal_metadata_.Clear();
}

bool MarketDataMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protobuf.MarketDataMessage_MBP MBP = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mbp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage_MBO MBO = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mbo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage_TRADE TRADE = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trade()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_messagetype(static_cast< ::protobuf::MarketDataMessage_MarketDataMessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Pid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf.MarketDataMessage.Pid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ProviderTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &providertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ExchangeTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exchangetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 SequenceNumber = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequencenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_implied()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage_TPRICE TPrice = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tprice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r02()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_calculatedflag(static_cast< ::protobuf::MarketDataMessage_CalculatedFlag >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage)
  return false;
#undef DO_
}

void MarketDataMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protobuf.MarketDataMessage_MBP MBP = 1;
  if (has_mbp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_.mbp_, output);
  }

  // .protobuf.MarketDataMessage_MBO MBO = 2;
  if (has_mbo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *message_.mbo_, output);
  }

  // .protobuf.MarketDataMessage_TRADE TRADE = 3;
  if (has_trade()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *message_.trade_, output);
  }

  // .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
  if (this->messagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->messagetype(), output);
  }

  // string Pid = 5;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage.Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pid(), output);
  }

  // int64 ProviderTime = 6;
  if (this->providertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->providertime(), output);
  }

  // int64 ExchangeTime = 7;
  if (this->exchangetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->exchangetime(), output);
  }

  // int64 SequenceNumber = 8;
  if (this->sequencenumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->sequencenumber(), output);
  }

  // .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
  if (has_implied()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *message_.implied_, output);
  }

  // .protobuf.MarketDataMessage_TPRICE TPrice = 10;
  if (has_tprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *message_.tprice_, output);
  }

  // .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
  if (has_r02()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *message_.r02_, output);
  }

  // .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
  if (this->calculatedflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->calculatedflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage)
}

::google::protobuf::uint8* MarketDataMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protobuf.MarketDataMessage_MBP MBP = 1;
  if (has_mbp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *message_.mbp_, deterministic, target);
  }

  // .protobuf.MarketDataMessage_MBO MBO = 2;
  if (has_mbo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *message_.mbo_, deterministic, target);
  }

  // .protobuf.MarketDataMessage_TRADE TRADE = 3;
  if (has_trade()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *message_.trade_, deterministic, target);
  }

  // .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
  if (this->messagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->messagetype(), target);
  }

  // string Pid = 5;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage.Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pid(), target);
  }

  // int64 ProviderTime = 6;
  if (this->providertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->providertime(), target);
  }

  // int64 ExchangeTime = 7;
  if (this->exchangetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->exchangetime(), target);
  }

  // int64 SequenceNumber = 8;
  if (this->sequencenumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->sequencenumber(), target);
  }

  // .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
  if (has_implied()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *message_.implied_, deterministic, target);
  }

  // .protobuf.MarketDataMessage_TPRICE TPrice = 10;
  if (has_tprice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *message_.tprice_, deterministic, target);
  }

  // .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
  if (has_r02()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *message_.r02_, deterministic, target);
  }

  // .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
  if (this->calculatedflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->calculatedflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage)
  return target;
}

size_t MarketDataMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Pid = 5;
  if (this->pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pid());
  }

  // int64 ProviderTime = 6;
  if (this->providertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->providertime());
  }

  // int64 ExchangeTime = 7;
  if (this->exchangetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exchangetime());
  }

  // int64 SequenceNumber = 8;
  if (this->sequencenumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequencenumber());
  }

  // .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
  }

  // .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
  if (this->calculatedflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->calculatedflag());
  }

  switch (message_case()) {
    // .protobuf.MarketDataMessage_MBP MBP = 1;
    case kMBP: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.mbp_);
      break;
    }
    // .protobuf.MarketDataMessage_MBO MBO = 2;
    case kMBO: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.mbo_);
      break;
    }
    // .protobuf.MarketDataMessage_TRADE TRADE = 3;
    case kTRADE: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.trade_);
      break;
    }
    // .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
    case kIMPLIED: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.implied_);
      break;
    }
    // .protobuf.MarketDataMessage_TPRICE TPrice = 10;
    case kTPrice: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.tprice_);
      break;
    }
    // .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
    case kR02: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *message_.r02_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage)
    MergeFrom(*source);
  }
}

void MarketDataMessage::MergeFrom(const MarketDataMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pid().size() > 0) {

    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.providertime() != 0) {
    set_providertime(from.providertime());
  }
  if (from.exchangetime() != 0) {
    set_exchangetime(from.exchangetime());
  }
  if (from.sequencenumber() != 0) {
    set_sequencenumber(from.sequencenumber());
  }
  if (from.messagetype() != 0) {
    set_messagetype(from.messagetype());
  }
  if (from.calculatedflag() != 0) {
    set_calculatedflag(from.calculatedflag());
  }
  switch (from.message_case()) {
    case kMBP: {
      mutable_mbp()->::protobuf::MarketDataMessage_MBP::MergeFrom(from.mbp());
      break;
    }
    case kMBO: {
      mutable_mbo()->::protobuf::MarketDataMessage_MBO::MergeFrom(from.mbo());
      break;
    }
    case kTRADE: {
      mutable_trade()->::protobuf::MarketDataMessage_TRADE::MergeFrom(from.trade());
      break;
    }
    case kIMPLIED: {
      mutable_implied()->::protobuf::MarketDataMessage_IMPLIED::MergeFrom(from.implied());
      break;
    }
    case kTPrice: {
      mutable_tprice()->::protobuf::MarketDataMessage_TPRICE::MergeFrom(from.tprice());
      break;
    }
    case kR02: {
      mutable_r02()->::protobuf::MarketDataMessage_TMPR02_t::MergeFrom(from.r02());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void MarketDataMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage::CopyFrom(const MarketDataMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage::IsInitialized() const {
  return true;
}

void MarketDataMessage::Swap(MarketDataMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage::InternalSwap(MarketDataMessage* other) {
  using std::swap;
  pid_.Swap(&other->pid_);
  swap(providertime_, other->providertime_);
  swap(exchangetime_, other->exchangetime_);
  swap(sequencenumber_, other->sequencenumber_);
  swap(messagetype_, other->messagetype_);
  swap(calculatedflag_, other->calculatedflag_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage

// .protobuf.MarketDataMessage_MBP MBP = 1;
bool MarketDataMessage::has_mbp() const {
  return message_case() == kMBP;
}
void MarketDataMessage::set_has_mbp() {
  _oneof_case_[0] = kMBP;
}
void MarketDataMessage::clear_mbp() {
  if (has_mbp()) {
    delete message_.mbp_;
    clear_has_message();
  }
}
 const ::protobuf::MarketDataMessage_MBP& MarketDataMessage::mbp() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.MBP)
  return has_mbp()
      ? *message_.mbp_
      : ::protobuf::MarketDataMessage_MBP::default_instance();
}
::protobuf::MarketDataMessage_MBP* MarketDataMessage::mutable_mbp() {
  if (!has_mbp()) {
    clear_message();
    set_has_mbp();
    message_.mbp_ = new ::protobuf::MarketDataMessage_MBP;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.MBP)
  return message_.mbp_;
}
::protobuf::MarketDataMessage_MBP* MarketDataMessage::release_mbp() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.MBP)
  if (has_mbp()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_MBP* temp = message_.mbp_;
    message_.mbp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MarketDataMessage::set_allocated_mbp(::protobuf::MarketDataMessage_MBP* mbp) {
  clear_message();
  if (mbp) {
    set_has_mbp();
    message_.mbp_ = mbp;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.MBP)
}

// .protobuf.MarketDataMessage_MBO MBO = 2;
bool MarketDataMessage::has_mbo() const {
  return message_case() == kMBO;
}
void MarketDataMessage::set_has_mbo() {
  _oneof_case_[0] = kMBO;
}
void MarketDataMessage::clear_mbo() {
  if (has_mbo()) {
    delete message_.mbo_;
    clear_has_message();
  }
}
 const ::protobuf::MarketDataMessage_MBO& MarketDataMessage::mbo() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.MBO)
  return has_mbo()
      ? *message_.mbo_
      : ::protobuf::MarketDataMessage_MBO::default_instance();
}
::protobuf::MarketDataMessage_MBO* MarketDataMessage::mutable_mbo() {
  if (!has_mbo()) {
    clear_message();
    set_has_mbo();
    message_.mbo_ = new ::protobuf::MarketDataMessage_MBO;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.MBO)
  return message_.mbo_;
}
::protobuf::MarketDataMessage_MBO* MarketDataMessage::release_mbo() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.MBO)
  if (has_mbo()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_MBO* temp = message_.mbo_;
    message_.mbo_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MarketDataMessage::set_allocated_mbo(::protobuf::MarketDataMessage_MBO* mbo) {
  clear_message();
  if (mbo) {
    set_has_mbo();
    message_.mbo_ = mbo;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.MBO)
}

// .protobuf.MarketDataMessage_TRADE TRADE = 3;
bool MarketDataMessage::has_trade() const {
  return message_case() == kTRADE;
}
void MarketDataMessage::set_has_trade() {
  _oneof_case_[0] = kTRADE;
}
void MarketDataMessage::clear_trade() {
  if (has_trade()) {
    delete message_.trade_;
    clear_has_message();
  }
}
 const ::protobuf::MarketDataMessage_TRADE& MarketDataMessage::trade() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.TRADE)
  return has_trade()
      ? *message_.trade_
      : ::protobuf::MarketDataMessage_TRADE::default_instance();
}
::protobuf::MarketDataMessage_TRADE* MarketDataMessage::mutable_trade() {
  if (!has_trade()) {
    clear_message();
    set_has_trade();
    message_.trade_ = new ::protobuf::MarketDataMessage_TRADE;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.TRADE)
  return message_.trade_;
}
::protobuf::MarketDataMessage_TRADE* MarketDataMessage::release_trade() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.TRADE)
  if (has_trade()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_TRADE* temp = message_.trade_;
    message_.trade_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MarketDataMessage::set_allocated_trade(::protobuf::MarketDataMessage_TRADE* trade) {
  clear_message();
  if (trade) {
    set_has_trade();
    message_.trade_ = trade;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.TRADE)
}

// .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
bool MarketDataMessage::has_implied() const {
  return message_case() == kIMPLIED;
}
void MarketDataMessage::set_has_implied() {
  _oneof_case_[0] = kIMPLIED;
}
void MarketDataMessage::clear_implied() {
  if (has_implied()) {
    delete message_.implied_;
    clear_has_message();
  }
}
 const ::protobuf::MarketDataMessage_IMPLIED& MarketDataMessage::implied() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.IMPLIED)
  return has_implied()
      ? *message_.implied_
      : ::protobuf::MarketDataMessage_IMPLIED::default_instance();
}
::protobuf::MarketDataMessage_IMPLIED* MarketDataMessage::mutable_implied() {
  if (!has_implied()) {
    clear_message();
    set_has_implied();
    message_.implied_ = new ::protobuf::MarketDataMessage_IMPLIED;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.IMPLIED)
  return message_.implied_;
}
::protobuf::MarketDataMessage_IMPLIED* MarketDataMessage::release_implied() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.IMPLIED)
  if (has_implied()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_IMPLIED* temp = message_.implied_;
    message_.implied_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MarketDataMessage::set_allocated_implied(::protobuf::MarketDataMessage_IMPLIED* implied) {
  clear_message();
  if (implied) {
    set_has_implied();
    message_.implied_ = implied;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.IMPLIED)
}

// .protobuf.MarketDataMessage_TPRICE TPrice = 10;
bool MarketDataMessage::has_tprice() const {
  return message_case() == kTPrice;
}
void MarketDataMessage::set_has_tprice() {
  _oneof_case_[0] = kTPrice;
}
void MarketDataMessage::clear_tprice() {
  if (has_tprice()) {
    delete message_.tprice_;
    clear_has_message();
  }
}
 const ::protobuf::MarketDataMessage_TPRICE& MarketDataMessage::tprice() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.TPrice)
  return has_tprice()
      ? *message_.tprice_
      : ::protobuf::MarketDataMessage_TPRICE::default_instance();
}
::protobuf::MarketDataMessage_TPRICE* MarketDataMessage::mutable_tprice() {
  if (!has_tprice()) {
    clear_message();
    set_has_tprice();
    message_.tprice_ = new ::protobuf::MarketDataMessage_TPRICE;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.TPrice)
  return message_.tprice_;
}
::protobuf::MarketDataMessage_TPRICE* MarketDataMessage::release_tprice() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.TPrice)
  if (has_tprice()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_TPRICE* temp = message_.tprice_;
    message_.tprice_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MarketDataMessage::set_allocated_tprice(::protobuf::MarketDataMessage_TPRICE* tprice) {
  clear_message();
  if (tprice) {
    set_has_tprice();
    message_.tprice_ = tprice;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.TPrice)
}

// .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
bool MarketDataMessage::has_r02() const {
  return message_case() == kR02;
}
void MarketDataMessage::set_has_r02() {
  _oneof_case_[0] = kR02;
}
void MarketDataMessage::clear_r02() {
  if (has_r02()) {
    delete message_.r02_;
    clear_has_message();
  }
}
 const ::protobuf::MarketDataMessage_TMPR02_t& MarketDataMessage::r02() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.R02)
  return has_r02()
      ? *message_.r02_
      : ::protobuf::MarketDataMessage_TMPR02_t::default_instance();
}
::protobuf::MarketDataMessage_TMPR02_t* MarketDataMessage::mutable_r02() {
  if (!has_r02()) {
    clear_message();
    set_has_r02();
    message_.r02_ = new ::protobuf::MarketDataMessage_TMPR02_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.R02)
  return message_.r02_;
}
::protobuf::MarketDataMessage_TMPR02_t* MarketDataMessage::release_r02() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.R02)
  if (has_r02()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_TMPR02_t* temp = message_.r02_;
    message_.r02_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MarketDataMessage::set_allocated_r02(::protobuf::MarketDataMessage_TMPR02_t* r02) {
  clear_message();
  if (r02) {
    set_has_r02();
    message_.r02_ = r02;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.R02)
}

// .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
void MarketDataMessage::clear_messagetype() {
  messagetype_ = 0;
}
::protobuf::MarketDataMessage_MarketDataMessageType MarketDataMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.MessageType)
  return static_cast< ::protobuf::MarketDataMessage_MarketDataMessageType >(messagetype_);
}
void MarketDataMessage::set_messagetype(::protobuf::MarketDataMessage_MarketDataMessageType value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.MessageType)
}

// string Pid = 5;
void MarketDataMessage::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MarketDataMessage::pid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.Pid)
  return pid_.GetNoArena();
}
void MarketDataMessage::set_pid(const ::std::string& value) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.Pid)
}
#if LANG_CXX11
void MarketDataMessage::set_pid(::std::string&& value) {
  
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage.Pid)
}
#endif
void MarketDataMessage::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage.Pid)
}
void MarketDataMessage::set_pid(const char* value, size_t size) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage.Pid)
}
::std::string* MarketDataMessage::mutable_pid() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MarketDataMessage::release_pid() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.Pid)
  
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MarketDataMessage::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    
  } else {
    
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.Pid)
}

// int64 ProviderTime = 6;
void MarketDataMessage::clear_providertime() {
  providertime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage::providertime() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.ProviderTime)
  return providertime_;
}
void MarketDataMessage::set_providertime(::google::protobuf::int64 value) {
  
  providertime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.ProviderTime)
}

// int64 ExchangeTime = 7;
void MarketDataMessage::clear_exchangetime() {
  exchangetime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage::exchangetime() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.ExchangeTime)
  return exchangetime_;
}
void MarketDataMessage::set_exchangetime(::google::protobuf::int64 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.ExchangeTime)
}

// int64 SequenceNumber = 8;
void MarketDataMessage::clear_sequencenumber() {
  sequencenumber_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage::sequencenumber() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.SequenceNumber)
  return sequencenumber_;
}
void MarketDataMessage::set_sequencenumber(::google::protobuf::int64 value) {
  
  sequencenumber_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.SequenceNumber)
}

// .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
void MarketDataMessage::clear_calculatedflag() {
  calculatedflag_ = 0;
}
::protobuf::MarketDataMessage_CalculatedFlag MarketDataMessage::calculatedflag() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.Calculatedflag)
  return static_cast< ::protobuf::MarketDataMessage_CalculatedFlag >(calculatedflag_);
}
void MarketDataMessage::set_calculatedflag(::protobuf::MarketDataMessage_CalculatedFlag value) {
  
  calculatedflag_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.Calculatedflag)
}

bool MarketDataMessage::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
void MarketDataMessage::clear_has_message() {
  _oneof_case_[0] = MESSAGE_NOT_SET;
}
MarketDataMessage::MessageCase MarketDataMessage::message_case() const {
  return MarketDataMessage::MessageCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage_MBP::kCountFieldNumber;
const int MarketDataMessage_MBP::kBidFieldNumber;
const int MarketDataMessage_MBP::kAskFieldNumber;
const int MarketDataMessage_MBP::kBidQtyFieldNumber;
const int MarketDataMessage_MBP::kAskQtyFieldNumber;
const int MarketDataMessage_MBP::kIsPacketEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage_MBP::MarketDataMessage_MBP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage_MBP)
}
MarketDataMessage_MBP::MarketDataMessage_MBP(const MarketDataMessage_MBP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bid_(from.bid_),
      ask_(from.ask_),
      bidqty_(from.bidqty_),
      askqty_(from.askqty_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ispacketend()) {
    ispacketend_ = new ::google::protobuf::BoolValue(*from.ispacketend_);
  } else {
    ispacketend_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage_MBP)
}

void MarketDataMessage_MBP::SharedCtor() {
  ::memset(&ispacketend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&ispacketend_)) + sizeof(count_));
  _cached_size_ = 0;
}

MarketDataMessage_MBP::~MarketDataMessage_MBP() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage_MBP)
  SharedDtor();
}

void MarketDataMessage_MBP::SharedDtor() {
  if (this != internal_default_instance()) delete ispacketend_;
}

void MarketDataMessage_MBP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage_MBP::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage_MBP& MarketDataMessage_MBP::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage_MBP* MarketDataMessage_MBP::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage_MBP* n = new MarketDataMessage_MBP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage_MBP::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage_MBP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bid_.Clear();
  ask_.Clear();
  bidqty_.Clear();
  askqty_.Clear();
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) {
    delete ispacketend_;
  }
  ispacketend_ = NULL;
  count_ = 0;
  _internal_metadata_.Clear();
}

bool MarketDataMessage_MBP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage_MBP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Bid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_bid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Ask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ask())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_ask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 BidQty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bidqty())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_bidqty())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 AskQty = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_askqty())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_askqty())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue IsPacketEnd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ispacketend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage_MBP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage_MBP)
  return false;
#undef DO_
}

void MarketDataMessage_MBP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage_MBP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated int64 Bid = 2;
  if (this->bid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bid_cached_byte_size_));
  }
  for (int i = 0, n = this->bid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bid(i), output);
  }

  // repeated int64 Ask = 3;
  if (this->ask_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ask_cached_byte_size_));
  }
  for (int i = 0, n = this->ask_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ask(i), output);
  }

  // repeated int64 BidQty = 4;
  if (this->bidqty_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bidqty_cached_byte_size_));
  }
  for (int i = 0, n = this->bidqty_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bidqty(i), output);
  }

  // repeated int64 AskQty = 5;
  if (this->askqty_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _askqty_cached_byte_size_));
  }
  for (int i = 0, n = this->askqty_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->askqty(i), output);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->ispacketend_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage_MBP)
}

::google::protobuf::uint8* MarketDataMessage_MBP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage_MBP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated int64 Bid = 2;
  if (this->bid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _bid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bid_, target);
  }

  // repeated int64 Ask = 3;
  if (this->ask_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _ask_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->ask_, target);
  }

  // repeated int64 BidQty = 4;
  if (this->bidqty_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _bidqty_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bidqty_, target);
  }

  // repeated int64 AskQty = 5;
  if (this->askqty_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _askqty_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->askqty_, target);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->ispacketend_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage_MBP)
  return target;
}

size_t MarketDataMessage_MBP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage_MBP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 Bid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->bid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 Ask = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ask_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ask_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 BidQty = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->bidqty_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bidqty_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 AskQty = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->askqty_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _askqty_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ispacketend_);
  }

  // int32 Count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage_MBP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage_MBP)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage_MBP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage_MBP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage_MBP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage_MBP)
    MergeFrom(*source);
  }
}

void MarketDataMessage_MBP::MergeFrom(const MarketDataMessage_MBP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage_MBP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bid_.MergeFrom(from.bid_);
  ask_.MergeFrom(from.ask_);
  bidqty_.MergeFrom(from.bidqty_);
  askqty_.MergeFrom(from.askqty_);
  if (from.has_ispacketend()) {
    mutable_ispacketend()->::google::protobuf::BoolValue::MergeFrom(from.ispacketend());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void MarketDataMessage_MBP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage_MBP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage_MBP::CopyFrom(const MarketDataMessage_MBP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage_MBP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage_MBP::IsInitialized() const {
  return true;
}

void MarketDataMessage_MBP::Swap(MarketDataMessage_MBP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage_MBP::InternalSwap(MarketDataMessage_MBP* other) {
  using std::swap;
  bid_.InternalSwap(&other->bid_);
  ask_.InternalSwap(&other->ask_);
  bidqty_.InternalSwap(&other->bidqty_);
  askqty_.InternalSwap(&other->askqty_);
  swap(ispacketend_, other->ispacketend_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage_MBP::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage_MBP

// int32 Count = 1;
void MarketDataMessage_MBP::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 MarketDataMessage_MBP::count() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.Count)
  return count_;
}
void MarketDataMessage_MBP::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.Count)
}

// repeated int64 Bid = 2;
int MarketDataMessage_MBP::bid_size() const {
  return bid_.size();
}
void MarketDataMessage_MBP::clear_bid() {
  bid_.Clear();
}
::google::protobuf::int64 MarketDataMessage_MBP::bid(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.Bid)
  return bid_.Get(index);
}
void MarketDataMessage_MBP::set_bid(int index, ::google::protobuf::int64 value) {
  bid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.Bid)
}
void MarketDataMessage_MBP::add_bid(::google::protobuf::int64 value) {
  bid_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.Bid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::bid() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.Bid)
  return bid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_bid() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.Bid)
  return &bid_;
}

// repeated int64 Ask = 3;
int MarketDataMessage_MBP::ask_size() const {
  return ask_.size();
}
void MarketDataMessage_MBP::clear_ask() {
  ask_.Clear();
}
::google::protobuf::int64 MarketDataMessage_MBP::ask(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.Ask)
  return ask_.Get(index);
}
void MarketDataMessage_MBP::set_ask(int index, ::google::protobuf::int64 value) {
  ask_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.Ask)
}
void MarketDataMessage_MBP::add_ask(::google::protobuf::int64 value) {
  ask_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.Ask)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::ask() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.Ask)
  return ask_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_ask() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.Ask)
  return &ask_;
}

// repeated int64 BidQty = 4;
int MarketDataMessage_MBP::bidqty_size() const {
  return bidqty_.size();
}
void MarketDataMessage_MBP::clear_bidqty() {
  bidqty_.Clear();
}
::google::protobuf::int64 MarketDataMessage_MBP::bidqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.BidQty)
  return bidqty_.Get(index);
}
void MarketDataMessage_MBP::set_bidqty(int index, ::google::protobuf::int64 value) {
  bidqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.BidQty)
}
void MarketDataMessage_MBP::add_bidqty(::google::protobuf::int64 value) {
  bidqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.BidQty)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::bidqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.BidQty)
  return bidqty_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_bidqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.BidQty)
  return &bidqty_;
}

// repeated int64 AskQty = 5;
int MarketDataMessage_MBP::askqty_size() const {
  return askqty_.size();
}
void MarketDataMessage_MBP::clear_askqty() {
  askqty_.Clear();
}
::google::protobuf::int64 MarketDataMessage_MBP::askqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.AskQty)
  return askqty_.Get(index);
}
void MarketDataMessage_MBP::set_askqty(int index, ::google::protobuf::int64 value) {
  askqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.AskQty)
}
void MarketDataMessage_MBP::add_askqty(::google::protobuf::int64 value) {
  askqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.AskQty)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::askqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.AskQty)
  return askqty_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_askqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.AskQty)
  return &askqty_;
}

// .google.protobuf.BoolValue IsPacketEnd = 6;
bool MarketDataMessage_MBP::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
void MarketDataMessage_MBP::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
const ::google::protobuf::BoolValue& MarketDataMessage_MBP::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
::google::protobuf::BoolValue* MarketDataMessage_MBP::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_MBP.IsPacketEnd)
  return ispacketend_;
}
::google::protobuf::BoolValue* MarketDataMessage_MBP::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_MBP.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
void MarketDataMessage_MBP::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_MBP.IsPacketEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage_MBO::kOrderIDFieldNumber;
const int MarketDataMessage_MBO::kPriceFieldNumber;
const int MarketDataMessage_MBO::kQtyFieldNumber;
const int MarketDataMessage_MBO::kLevelFieldNumber;
const int MarketDataMessage_MBO::kSideFieldNumber;
const int MarketDataMessage_MBO::kNumberOfOrdersFieldNumber;
const int MarketDataMessage_MBO::kIsPacketEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage_MBO::MarketDataMessage_MBO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage_MBO)
}
MarketDataMessage_MBO::MarketDataMessage_MBO(const MarketDataMessage_MBO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ispacketend()) {
    ispacketend_ = new ::google::protobuf::BoolValue(*from.ispacketend_);
  } else {
    ispacketend_ = NULL;
  }
  ::memcpy(&orderid_, &from.orderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&numberoforders_) -
    reinterpret_cast<char*>(&orderid_)) + sizeof(numberoforders_));
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage_MBO)
}

void MarketDataMessage_MBO::SharedCtor() {
  ::memset(&ispacketend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numberoforders_) -
      reinterpret_cast<char*>(&ispacketend_)) + sizeof(numberoforders_));
  _cached_size_ = 0;
}

MarketDataMessage_MBO::~MarketDataMessage_MBO() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage_MBO)
  SharedDtor();
}

void MarketDataMessage_MBO::SharedDtor() {
  if (this != internal_default_instance()) delete ispacketend_;
}

void MarketDataMessage_MBO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage_MBO::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage_MBO& MarketDataMessage_MBO::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage_MBO* MarketDataMessage_MBO::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage_MBO* n = new MarketDataMessage_MBO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage_MBO::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage_MBO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) {
    delete ispacketend_;
  }
  ispacketend_ = NULL;
  ::memset(&orderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numberoforders_) -
      reinterpret_cast<char*>(&orderid_)) + sizeof(numberoforders_));
  _internal_metadata_.Clear();
}

bool MarketDataMessage_MBO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage_MBO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 OrderID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Qty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Side = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NumberOfOrders = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numberoforders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue IsPacketEnd = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ispacketend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage_MBO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage_MBO)
  return false;
#undef DO_
}

void MarketDataMessage_MBO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage_MBO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 OrderID = 1;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->orderid(), output);
  }

  // int64 Price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->price(), output);
  }

  // int64 Qty = 3;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qty(), output);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // int32 Side = 5;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->side(), output);
  }

  // int32 NumberOfOrders = 6;
  if (this->numberoforders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->numberoforders(), output);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 7;
  if (this->has_ispacketend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->ispacketend_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage_MBO)
}

::google::protobuf::uint8* MarketDataMessage_MBO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage_MBO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 OrderID = 1;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->orderid(), target);
  }

  // int64 Price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->price(), target);
  }

  // int64 Qty = 3;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qty(), target);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // int32 Side = 5;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->side(), target);
  }

  // int32 NumberOfOrders = 6;
  if (this->numberoforders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->numberoforders(), target);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 7;
  if (this->has_ispacketend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->ispacketend_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage_MBO)
  return target;
}

size_t MarketDataMessage_MBO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage_MBO)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BoolValue IsPacketEnd = 7;
  if (this->has_ispacketend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ispacketend_);
  }

  // int64 OrderID = 1;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  // int64 Price = 2;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int64 Qty = 3;
  if (this->qty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qty());
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 Side = 5;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  // int32 NumberOfOrders = 6;
  if (this->numberoforders() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numberoforders());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage_MBO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage_MBO)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage_MBO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage_MBO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage_MBO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage_MBO)
    MergeFrom(*source);
  }
}

void MarketDataMessage_MBO::MergeFrom(const MarketDataMessage_MBO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage_MBO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ispacketend()) {
    mutable_ispacketend()->::google::protobuf::BoolValue::MergeFrom(from.ispacketend());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.numberoforders() != 0) {
    set_numberoforders(from.numberoforders());
  }
}

void MarketDataMessage_MBO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage_MBO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage_MBO::CopyFrom(const MarketDataMessage_MBO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage_MBO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage_MBO::IsInitialized() const {
  return true;
}

void MarketDataMessage_MBO::Swap(MarketDataMessage_MBO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage_MBO::InternalSwap(MarketDataMessage_MBO* other) {
  using std::swap;
  swap(ispacketend_, other->ispacketend_);
  swap(orderid_, other->orderid_);
  swap(price_, other->price_);
  swap(qty_, other->qty_);
  swap(level_, other->level_);
  swap(side_, other->side_);
  swap(numberoforders_, other->numberoforders_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage_MBO::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage_MBO

// int64 OrderID = 1;
void MarketDataMessage_MBO::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_MBO::orderid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.OrderID)
  return orderid_;
}
void MarketDataMessage_MBO::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.OrderID)
}

// int64 Price = 2;
void MarketDataMessage_MBO::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_MBO::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Price)
  return price_;
}
void MarketDataMessage_MBO::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Price)
}

// int64 Qty = 3;
void MarketDataMessage_MBO::clear_qty() {
  qty_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_MBO::qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Qty)
  return qty_;
}
void MarketDataMessage_MBO::set_qty(::google::protobuf::int64 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Qty)
}

// int32 Level = 4;
void MarketDataMessage_MBO::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 MarketDataMessage_MBO::level() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Level)
  return level_;
}
void MarketDataMessage_MBO::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Level)
}

// int32 Side = 5;
void MarketDataMessage_MBO::clear_side() {
  side_ = 0;
}
::google::protobuf::int32 MarketDataMessage_MBO::side() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Side)
  return side_;
}
void MarketDataMessage_MBO::set_side(::google::protobuf::int32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Side)
}

// int32 NumberOfOrders = 6;
void MarketDataMessage_MBO::clear_numberoforders() {
  numberoforders_ = 0;
}
::google::protobuf::int32 MarketDataMessage_MBO::numberoforders() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.NumberOfOrders)
  return numberoforders_;
}
void MarketDataMessage_MBO::set_numberoforders(::google::protobuf::int32 value) {
  
  numberoforders_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.NumberOfOrders)
}

// .google.protobuf.BoolValue IsPacketEnd = 7;
bool MarketDataMessage_MBO::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
void MarketDataMessage_MBO::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
const ::google::protobuf::BoolValue& MarketDataMessage_MBO::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
::google::protobuf::BoolValue* MarketDataMessage_MBO::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_MBO.IsPacketEnd)
  return ispacketend_;
}
::google::protobuf::BoolValue* MarketDataMessage_MBO::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_MBO.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
void MarketDataMessage_MBO::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_MBO.IsPacketEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage_TRADE::kOrderIDFieldNumber;
const int MarketDataMessage_TRADE::kPriceFieldNumber;
const int MarketDataMessage_TRADE::kQtyFieldNumber;
const int MarketDataMessage_TRADE::kSideFieldNumber;
const int MarketDataMessage_TRADE::kCounterpartyOrderIDFieldNumber;
const int MarketDataMessage_TRADE::kIsPacketEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage_TRADE::MarketDataMessage_TRADE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage_TRADE)
}
MarketDataMessage_TRADE::MarketDataMessage_TRADE(const MarketDataMessage_TRADE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ispacketend()) {
    ispacketend_ = new ::google::protobuf::BoolValue(*from.ispacketend_);
  } else {
    ispacketend_ = NULL;
  }
  ::memcpy(&orderid_, &from.orderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&orderid_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage_TRADE)
}

void MarketDataMessage_TRADE::SharedCtor() {
  ::memset(&ispacketend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&ispacketend_)) + sizeof(side_));
  _cached_size_ = 0;
}

MarketDataMessage_TRADE::~MarketDataMessage_TRADE() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage_TRADE)
  SharedDtor();
}

void MarketDataMessage_TRADE::SharedDtor() {
  if (this != internal_default_instance()) delete ispacketend_;
}

void MarketDataMessage_TRADE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage_TRADE::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage_TRADE& MarketDataMessage_TRADE::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage_TRADE* MarketDataMessage_TRADE::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage_TRADE* n = new MarketDataMessage_TRADE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage_TRADE::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage_TRADE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) {
    delete ispacketend_;
  }
  ispacketend_ = NULL;
  ::memset(&orderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&orderid_)) + sizeof(side_));
  _internal_metadata_.Clear();
}

bool MarketDataMessage_TRADE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage_TRADE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 OrderID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Qty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Side = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 CounterpartyOrderID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &counterpartyorderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue IsPacketEnd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ispacketend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage_TRADE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage_TRADE)
  return false;
#undef DO_
}

void MarketDataMessage_TRADE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage_TRADE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 OrderID = 1;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->orderid(), output);
  }

  // int64 Price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->price(), output);
  }

  // int64 Qty = 3;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->qty(), output);
  }

  // int32 Side = 4;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->side(), output);
  }

  // int64 CounterpartyOrderID = 5;
  if (this->counterpartyorderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->counterpartyorderid(), output);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->ispacketend_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage_TRADE)
}

::google::protobuf::uint8* MarketDataMessage_TRADE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage_TRADE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 OrderID = 1;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->orderid(), target);
  }

  // int64 Price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->price(), target);
  }

  // int64 Qty = 3;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->qty(), target);
  }

  // int32 Side = 4;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->side(), target);
  }

  // int64 CounterpartyOrderID = 5;
  if (this->counterpartyorderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->counterpartyorderid(), target);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->ispacketend_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage_TRADE)
  return target;
}

size_t MarketDataMessage_TRADE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage_TRADE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ispacketend_);
  }

  // int64 OrderID = 1;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->orderid());
  }

  // int64 Price = 2;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int64 Qty = 3;
  if (this->qty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->qty());
  }

  // int64 CounterpartyOrderID = 5;
  if (this->counterpartyorderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->counterpartyorderid());
  }

  // int32 Side = 4;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->side());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage_TRADE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage_TRADE)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage_TRADE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage_TRADE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage_TRADE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage_TRADE)
    MergeFrom(*source);
  }
}

void MarketDataMessage_TRADE::MergeFrom(const MarketDataMessage_TRADE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage_TRADE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ispacketend()) {
    mutable_ispacketend()->::google::protobuf::BoolValue::MergeFrom(from.ispacketend());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
  if (from.counterpartyorderid() != 0) {
    set_counterpartyorderid(from.counterpartyorderid());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
}

void MarketDataMessage_TRADE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage_TRADE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage_TRADE::CopyFrom(const MarketDataMessage_TRADE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage_TRADE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage_TRADE::IsInitialized() const {
  return true;
}

void MarketDataMessage_TRADE::Swap(MarketDataMessage_TRADE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage_TRADE::InternalSwap(MarketDataMessage_TRADE* other) {
  using std::swap;
  swap(ispacketend_, other->ispacketend_);
  swap(orderid_, other->orderid_);
  swap(price_, other->price_);
  swap(qty_, other->qty_);
  swap(counterpartyorderid_, other->counterpartyorderid_);
  swap(side_, other->side_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage_TRADE::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage_TRADE

// int64 OrderID = 1;
void MarketDataMessage_TRADE::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TRADE::orderid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.OrderID)
  return orderid_;
}
void MarketDataMessage_TRADE::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.OrderID)
}

// int64 Price = 2;
void MarketDataMessage_TRADE::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TRADE::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.Price)
  return price_;
}
void MarketDataMessage_TRADE::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.Price)
}

// int64 Qty = 3;
void MarketDataMessage_TRADE::clear_qty() {
  qty_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TRADE::qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.Qty)
  return qty_;
}
void MarketDataMessage_TRADE::set_qty(::google::protobuf::int64 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.Qty)
}

// int32 Side = 4;
void MarketDataMessage_TRADE::clear_side() {
  side_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TRADE::side() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.Side)
  return side_;
}
void MarketDataMessage_TRADE::set_side(::google::protobuf::int32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.Side)
}

// int64 CounterpartyOrderID = 5;
void MarketDataMessage_TRADE::clear_counterpartyorderid() {
  counterpartyorderid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TRADE::counterpartyorderid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.CounterpartyOrderID)
  return counterpartyorderid_;
}
void MarketDataMessage_TRADE::set_counterpartyorderid(::google::protobuf::int64 value) {
  
  counterpartyorderid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.CounterpartyOrderID)
}

// .google.protobuf.BoolValue IsPacketEnd = 6;
bool MarketDataMessage_TRADE::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
void MarketDataMessage_TRADE::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
const ::google::protobuf::BoolValue& MarketDataMessage_TRADE::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
::google::protobuf::BoolValue* MarketDataMessage_TRADE::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
  return ispacketend_;
}
::google::protobuf::BoolValue* MarketDataMessage_TRADE::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
void MarketDataMessage_TRADE::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage_IMPLIED::kCountFieldNumber;
const int MarketDataMessage_IMPLIED::kBidFieldNumber;
const int MarketDataMessage_IMPLIED::kAskFieldNumber;
const int MarketDataMessage_IMPLIED::kBidQtyFieldNumber;
const int MarketDataMessage_IMPLIED::kAskQtyFieldNumber;
const int MarketDataMessage_IMPLIED::kIsPacketEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage_IMPLIED::MarketDataMessage_IMPLIED()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage_IMPLIED)
}
MarketDataMessage_IMPLIED::MarketDataMessage_IMPLIED(const MarketDataMessage_IMPLIED& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bid_(from.bid_),
      ask_(from.ask_),
      bidqty_(from.bidqty_),
      askqty_(from.askqty_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ispacketend()) {
    ispacketend_ = new ::google::protobuf::BoolValue(*from.ispacketend_);
  } else {
    ispacketend_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage_IMPLIED)
}

void MarketDataMessage_IMPLIED::SharedCtor() {
  ::memset(&ispacketend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&ispacketend_)) + sizeof(count_));
  _cached_size_ = 0;
}

MarketDataMessage_IMPLIED::~MarketDataMessage_IMPLIED() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage_IMPLIED)
  SharedDtor();
}

void MarketDataMessage_IMPLIED::SharedDtor() {
  if (this != internal_default_instance()) delete ispacketend_;
}

void MarketDataMessage_IMPLIED::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage_IMPLIED::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage_IMPLIED& MarketDataMessage_IMPLIED::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage_IMPLIED* MarketDataMessage_IMPLIED::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage_IMPLIED* n = new MarketDataMessage_IMPLIED;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage_IMPLIED::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage_IMPLIED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bid_.Clear();
  ask_.Clear();
  bidqty_.Clear();
  askqty_.Clear();
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) {
    delete ispacketend_;
  }
  ispacketend_ = NULL;
  count_ = 0;
  _internal_metadata_.Clear();
}

bool MarketDataMessage_IMPLIED::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage_IMPLIED)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Bid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 18u, input, this->mutable_bid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Ask = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ask())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_ask())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 BidQty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bidqty())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_bidqty())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 AskQty = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_askqty())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_askqty())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue IsPacketEnd = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ispacketend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage_IMPLIED)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage_IMPLIED)
  return false;
#undef DO_
}

void MarketDataMessage_IMPLIED::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage_IMPLIED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }

  // repeated int64 Bid = 2;
  if (this->bid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bid_cached_byte_size_));
  }
  for (int i = 0, n = this->bid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bid(i), output);
  }

  // repeated int64 Ask = 3;
  if (this->ask_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ask_cached_byte_size_));
  }
  for (int i = 0, n = this->ask_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->ask(i), output);
  }

  // repeated int64 BidQty = 4;
  if (this->bidqty_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bidqty_cached_byte_size_));
  }
  for (int i = 0, n = this->bidqty_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bidqty(i), output);
  }

  // repeated int64 AskQty = 5;
  if (this->askqty_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _askqty_cached_byte_size_));
  }
  for (int i = 0, n = this->askqty_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->askqty(i), output);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->ispacketend_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage_IMPLIED)
}

::google::protobuf::uint8* MarketDataMessage_IMPLIED::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage_IMPLIED)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }

  // repeated int64 Bid = 2;
  if (this->bid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _bid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bid_, target);
  }

  // repeated int64 Ask = 3;
  if (this->ask_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _ask_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->ask_, target);
  }

  // repeated int64 BidQty = 4;
  if (this->bidqty_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _bidqty_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bidqty_, target);
  }

  // repeated int64 AskQty = 5;
  if (this->askqty_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _askqty_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->askqty_, target);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->ispacketend_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage_IMPLIED)
  return target;
}

size_t MarketDataMessage_IMPLIED::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage_IMPLIED)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 Bid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->bid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 Ask = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ask_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ask_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 BidQty = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->bidqty_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bidqty_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 AskQty = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->askqty_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _askqty_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  if (this->has_ispacketend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ispacketend_);
  }

  // int32 Count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage_IMPLIED::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage_IMPLIED)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage_IMPLIED* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage_IMPLIED>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage_IMPLIED)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage_IMPLIED)
    MergeFrom(*source);
  }
}

void MarketDataMessage_IMPLIED::MergeFrom(const MarketDataMessage_IMPLIED& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage_IMPLIED)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bid_.MergeFrom(from.bid_);
  ask_.MergeFrom(from.ask_);
  bidqty_.MergeFrom(from.bidqty_);
  askqty_.MergeFrom(from.askqty_);
  if (from.has_ispacketend()) {
    mutable_ispacketend()->::google::protobuf::BoolValue::MergeFrom(from.ispacketend());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void MarketDataMessage_IMPLIED::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage_IMPLIED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage_IMPLIED::CopyFrom(const MarketDataMessage_IMPLIED& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage_IMPLIED)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage_IMPLIED::IsInitialized() const {
  return true;
}

void MarketDataMessage_IMPLIED::Swap(MarketDataMessage_IMPLIED* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage_IMPLIED::InternalSwap(MarketDataMessage_IMPLIED* other) {
  using std::swap;
  bid_.InternalSwap(&other->bid_);
  ask_.InternalSwap(&other->ask_);
  bidqty_.InternalSwap(&other->bidqty_);
  askqty_.InternalSwap(&other->askqty_);
  swap(ispacketend_, other->ispacketend_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage_IMPLIED::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage_IMPLIED

// int32 Count = 1;
void MarketDataMessage_IMPLIED::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 MarketDataMessage_IMPLIED::count() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.Count)
  return count_;
}
void MarketDataMessage_IMPLIED::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.Count)
}

// repeated int64 Bid = 2;
int MarketDataMessage_IMPLIED::bid_size() const {
  return bid_.size();
}
void MarketDataMessage_IMPLIED::clear_bid() {
  bid_.Clear();
}
::google::protobuf::int64 MarketDataMessage_IMPLIED::bid(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.Bid)
  return bid_.Get(index);
}
void MarketDataMessage_IMPLIED::set_bid(int index, ::google::protobuf::int64 value) {
  bid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.Bid)
}
void MarketDataMessage_IMPLIED::add_bid(::google::protobuf::int64 value) {
  bid_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.Bid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::bid() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.Bid)
  return bid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_bid() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.Bid)
  return &bid_;
}

// repeated int64 Ask = 3;
int MarketDataMessage_IMPLIED::ask_size() const {
  return ask_.size();
}
void MarketDataMessage_IMPLIED::clear_ask() {
  ask_.Clear();
}
::google::protobuf::int64 MarketDataMessage_IMPLIED::ask(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.Ask)
  return ask_.Get(index);
}
void MarketDataMessage_IMPLIED::set_ask(int index, ::google::protobuf::int64 value) {
  ask_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.Ask)
}
void MarketDataMessage_IMPLIED::add_ask(::google::protobuf::int64 value) {
  ask_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.Ask)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::ask() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.Ask)
  return ask_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_ask() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.Ask)
  return &ask_;
}

// repeated int64 BidQty = 4;
int MarketDataMessage_IMPLIED::bidqty_size() const {
  return bidqty_.size();
}
void MarketDataMessage_IMPLIED::clear_bidqty() {
  bidqty_.Clear();
}
::google::protobuf::int64 MarketDataMessage_IMPLIED::bidqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.BidQty)
  return bidqty_.Get(index);
}
void MarketDataMessage_IMPLIED::set_bidqty(int index, ::google::protobuf::int64 value) {
  bidqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.BidQty)
}
void MarketDataMessage_IMPLIED::add_bidqty(::google::protobuf::int64 value) {
  bidqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.BidQty)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::bidqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.BidQty)
  return bidqty_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_bidqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.BidQty)
  return &bidqty_;
}

// repeated int64 AskQty = 5;
int MarketDataMessage_IMPLIED::askqty_size() const {
  return askqty_.size();
}
void MarketDataMessage_IMPLIED::clear_askqty() {
  askqty_.Clear();
}
::google::protobuf::int64 MarketDataMessage_IMPLIED::askqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.AskQty)
  return askqty_.Get(index);
}
void MarketDataMessage_IMPLIED::set_askqty(int index, ::google::protobuf::int64 value) {
  askqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.AskQty)
}
void MarketDataMessage_IMPLIED::add_askqty(::google::protobuf::int64 value) {
  askqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.AskQty)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::askqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.AskQty)
  return askqty_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_askqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.AskQty)
  return &askqty_;
}

// .google.protobuf.BoolValue IsPacketEnd = 6;
bool MarketDataMessage_IMPLIED::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
void MarketDataMessage_IMPLIED::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
const ::google::protobuf::BoolValue& MarketDataMessage_IMPLIED::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
::google::protobuf::BoolValue* MarketDataMessage_IMPLIED::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
  return ispacketend_;
}
::google::protobuf::BoolValue* MarketDataMessage_IMPLIED::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
void MarketDataMessage_IMPLIED::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage_TPRICE::kPriceFieldNumber;
const int MarketDataMessage_TPRICE::kBSCodeFieldNumber;
const int MarketDataMessage_TPRICE::kTypeFieldNumber;
const int MarketDataMessage_TPRICE::kIsPacketEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage_TPRICE::MarketDataMessage_TPRICE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage_TPRICE)
}
MarketDataMessage_TPRICE::MarketDataMessage_TPRICE(const MarketDataMessage_TPRICE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ispacketend()) {
    ispacketend_ = new ::google::protobuf::BoolValue(*from.ispacketend_);
  } else {
    ispacketend_ = NULL;
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&price_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage_TPRICE)
}

void MarketDataMessage_TPRICE::SharedCtor() {
  ::memset(&ispacketend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&ispacketend_)) + sizeof(type_));
  _cached_size_ = 0;
}

MarketDataMessage_TPRICE::~MarketDataMessage_TPRICE() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage_TPRICE)
  SharedDtor();
}

void MarketDataMessage_TPRICE::SharedDtor() {
  if (this != internal_default_instance()) delete ispacketend_;
}

void MarketDataMessage_TPRICE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage_TPRICE::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage_TPRICE& MarketDataMessage_TPRICE::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage_TPRICE* MarketDataMessage_TPRICE::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage_TPRICE* n = new MarketDataMessage_TPRICE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage_TPRICE::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage_TPRICE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) {
    delete ispacketend_;
  }
  ispacketend_ = NULL;
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&price_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MarketDataMessage_TPRICE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage_TPRICE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 Price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 BSCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bscode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.BoolValue IsPacketEnd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ispacketend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage_TPRICE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage_TPRICE)
  return false;
#undef DO_
}

void MarketDataMessage_TPRICE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage_TPRICE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Price = 1;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->price(), output);
  }

  // int64 BSCode = 2;
  if (this->bscode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bscode(), output);
  }

  // int64 Type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->type(), output);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 4;
  if (this->has_ispacketend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->ispacketend_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage_TPRICE)
}

::google::protobuf::uint8* MarketDataMessage_TPRICE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage_TPRICE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Price = 1;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->price(), target);
  }

  // int64 BSCode = 2;
  if (this->bscode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bscode(), target);
  }

  // int64 Type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->type(), target);
  }

  // .google.protobuf.BoolValue IsPacketEnd = 4;
  if (this->has_ispacketend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->ispacketend_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage_TPRICE)
  return target;
}

size_t MarketDataMessage_TPRICE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage_TPRICE)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.BoolValue IsPacketEnd = 4;
  if (this->has_ispacketend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ispacketend_);
  }

  // int64 Price = 1;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->price());
  }

  // int64 BSCode = 2;
  if (this->bscode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bscode());
  }

  // int64 Type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage_TPRICE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage_TPRICE)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage_TPRICE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage_TPRICE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage_TPRICE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage_TPRICE)
    MergeFrom(*source);
  }
}

void MarketDataMessage_TPRICE::MergeFrom(const MarketDataMessage_TPRICE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage_TPRICE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ispacketend()) {
    mutable_ispacketend()->::google::protobuf::BoolValue::MergeFrom(from.ispacketend());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.bscode() != 0) {
    set_bscode(from.bscode());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MarketDataMessage_TPRICE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage_TPRICE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage_TPRICE::CopyFrom(const MarketDataMessage_TPRICE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage_TPRICE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage_TPRICE::IsInitialized() const {
  return true;
}

void MarketDataMessage_TPRICE::Swap(MarketDataMessage_TPRICE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage_TPRICE::InternalSwap(MarketDataMessage_TPRICE* other) {
  using std::swap;
  swap(ispacketend_, other->ispacketend_);
  swap(price_, other->price_);
  swap(bscode_, other->bscode_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage_TPRICE::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage_TPRICE

// int64 Price = 1;
void MarketDataMessage_TPRICE::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TPRICE::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.Price)
  return price_;
}
void MarketDataMessage_TPRICE::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TPRICE.Price)
}

// int64 BSCode = 2;
void MarketDataMessage_TPRICE::clear_bscode() {
  bscode_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TPRICE::bscode() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.BSCode)
  return bscode_;
}
void MarketDataMessage_TPRICE::set_bscode(::google::protobuf::int64 value) {
  
  bscode_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TPRICE.BSCode)
}

// int64 Type = 3;
void MarketDataMessage_TPRICE::clear_type() {
  type_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TPRICE::type() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.Type)
  return type_;
}
void MarketDataMessage_TPRICE::set_type(::google::protobuf::int64 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TPRICE.Type)
}

// .google.protobuf.BoolValue IsPacketEnd = 4;
bool MarketDataMessage_TPRICE::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
void MarketDataMessage_TPRICE::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
const ::google::protobuf::BoolValue& MarketDataMessage_TPRICE::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
::google::protobuf::BoolValue* MarketDataMessage_TPRICE::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
  return ispacketend_;
}
::google::protobuf::BoolValue* MarketDataMessage_TPRICE::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
void MarketDataMessage_TPRICE::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TMPMsgTime_t::kEpochSFieldNumber;
const int TMPMsgTime_t::kMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TMPMsgTime_t::TMPMsgTime_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.TMPMsgTime_t)
}
TMPMsgTime_t::TMPMsgTime_t(const TMPMsgTime_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&epoch_s_, &from.epoch_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&ms_) -
    reinterpret_cast<char*>(&epoch_s_)) + sizeof(ms_));
  // @@protoc_insertion_point(copy_constructor:protobuf.TMPMsgTime_t)
}

void TMPMsgTime_t::SharedCtor() {
  ::memset(&epoch_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ms_) -
      reinterpret_cast<char*>(&epoch_s_)) + sizeof(ms_));
  _cached_size_ = 0;
}

TMPMsgTime_t::~TMPMsgTime_t() {
  // @@protoc_insertion_point(destructor:protobuf.TMPMsgTime_t)
  SharedDtor();
}

void TMPMsgTime_t::SharedDtor() {
}

void TMPMsgTime_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMPMsgTime_t::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TMPMsgTime_t& TMPMsgTime_t::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

TMPMsgTime_t* TMPMsgTime_t::New(::google::protobuf::Arena* arena) const {
  TMPMsgTime_t* n = new TMPMsgTime_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TMPMsgTime_t::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.TMPMsgTime_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&epoch_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ms_) -
      reinterpret_cast<char*>(&epoch_s_)) + sizeof(ms_));
  _internal_metadata_.Clear();
}

bool TMPMsgTime_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.TMPMsgTime_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 epoch_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epoch_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.TMPMsgTime_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.TMPMsgTime_t)
  return false;
#undef DO_
}

void TMPMsgTime_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.TMPMsgTime_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 epoch_s = 1;
  if (this->epoch_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->epoch_s(), output);
  }

  // uint32 ms = 2;
  if (this->ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.TMPMsgTime_t)
}

::google::protobuf::uint8* TMPMsgTime_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.TMPMsgTime_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 epoch_s = 1;
  if (this->epoch_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->epoch_s(), target);
  }

  // uint32 ms = 2;
  if (this->ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.TMPMsgTime_t)
  return target;
}

size_t TMPMsgTime_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.TMPMsgTime_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 epoch_s = 1;
  if (this->epoch_s() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epoch_s());
  }

  // uint32 ms = 2;
  if (this->ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMPMsgTime_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.TMPMsgTime_t)
  GOOGLE_DCHECK_NE(&from, this);
  const TMPMsgTime_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TMPMsgTime_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.TMPMsgTime_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.TMPMsgTime_t)
    MergeFrom(*source);
  }
}

void TMPMsgTime_t::MergeFrom(const TMPMsgTime_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.TMPMsgTime_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.epoch_s() != 0) {
    set_epoch_s(from.epoch_s());
  }
  if (from.ms() != 0) {
    set_ms(from.ms());
  }
}

void TMPMsgTime_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.TMPMsgTime_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMPMsgTime_t::CopyFrom(const TMPMsgTime_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.TMPMsgTime_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMPMsgTime_t::IsInitialized() const {
  return true;
}

void TMPMsgTime_t::Swap(TMPMsgTime_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TMPMsgTime_t::InternalSwap(TMPMsgTime_t* other) {
  using std::swap;
  swap(epoch_s_, other->epoch_s_);
  swap(ms_, other->ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TMPMsgTime_t::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TMPMsgTime_t

// int32 epoch_s = 1;
void TMPMsgTime_t::clear_epoch_s() {
  epoch_s_ = 0;
}
::google::protobuf::int32 TMPMsgTime_t::epoch_s() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPMsgTime_t.epoch_s)
  return epoch_s_;
}
void TMPMsgTime_t::set_epoch_s(::google::protobuf::int32 value) {
  
  epoch_s_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPMsgTime_t.epoch_s)
}

// uint32 ms = 2;
void TMPMsgTime_t::clear_ms() {
  ms_ = 0u;
}
::google::protobuf::uint32 TMPMsgTime_t::ms() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPMsgTime_t.ms)
  return ms_;
}
void TMPMsgTime_t::set_ms(::google::protobuf::uint32 value) {
  
  ms_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPMsgTime_t.ms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TMPHdr_t::kMsgLengthFieldNumber;
const int TMPHdr_t::kMsgSeqNumFieldNumber;
const int TMPHdr_t::kMsgTimeFieldNumber;
const int TMPHdr_t::kMessageTypeFieldNumber;
const int TMPHdr_t::kFcmIdFieldNumber;
const int TMPHdr_t::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TMPHdr_t::TMPHdr_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.TMPHdr_t)
}
TMPHdr_t::TMPHdr_t(const TMPHdr_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg_time()) {
    msg_time_ = new ::protobuf::TMPMsgTime_t(*from.msg_time_);
  } else {
    msg_time_ = NULL;
  }
  ::memcpy(&msg_length_, &from.msg_length_,
    static_cast<size_t>(reinterpret_cast<char*>(&session_id_) -
    reinterpret_cast<char*>(&msg_length_)) + sizeof(session_id_));
  // @@protoc_insertion_point(copy_constructor:protobuf.TMPHdr_t)
}

void TMPHdr_t::SharedCtor() {
  ::memset(&msg_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_id_) -
      reinterpret_cast<char*>(&msg_time_)) + sizeof(session_id_));
  _cached_size_ = 0;
}

TMPHdr_t::~TMPHdr_t() {
  // @@protoc_insertion_point(destructor:protobuf.TMPHdr_t)
  SharedDtor();
}

void TMPHdr_t::SharedDtor() {
  if (this != internal_default_instance()) delete msg_time_;
}

void TMPHdr_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TMPHdr_t::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TMPHdr_t& TMPHdr_t::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

TMPHdr_t* TMPHdr_t::New(::google::protobuf::Arena* arena) const {
  TMPHdr_t* n = new TMPHdr_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TMPHdr_t::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.TMPHdr_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_time_ != NULL) {
    delete msg_time_;
  }
  msg_time_ = NULL;
  ::memset(&msg_length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_id_) -
      reinterpret_cast<char*>(&msg_length_)) + sizeof(session_id_));
  _internal_metadata_.Clear();
}

bool TMPHdr_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.TMPHdr_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msg_length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MsgSeqNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgseqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.TMPMsgTime_t msg_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MessageType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &messagetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fcm_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fcm_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 session_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.TMPHdr_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.TMPHdr_t)
  return false;
#undef DO_
}

void TMPHdr_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.TMPHdr_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msg_length = 1;
  if (this->msg_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_length(), output);
  }

  // uint32 MsgSeqNum = 2;
  if (this->msgseqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgseqnum(), output);
  }

  // .protobuf.TMPMsgTime_t msg_time = 3;
  if (this->has_msg_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->msg_time_, output);
  }

  // uint32 MessageType = 4;
  if (this->messagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->messagetype(), output);
  }

  // uint32 fcm_id = 5;
  if (this->fcm_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fcm_id(), output);
  }

  // uint32 session_id = 6;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.TMPHdr_t)
}

::google::protobuf::uint8* TMPHdr_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.TMPHdr_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msg_length = 1;
  if (this->msg_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_length(), target);
  }

  // uint32 MsgSeqNum = 2;
  if (this->msgseqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgseqnum(), target);
  }

  // .protobuf.TMPMsgTime_t msg_time = 3;
  if (this->has_msg_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->msg_time_, deterministic, target);
  }

  // uint32 MessageType = 4;
  if (this->messagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->messagetype(), target);
  }

  // uint32 fcm_id = 5;
  if (this->fcm_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fcm_id(), target);
  }

  // uint32 session_id = 6;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.TMPHdr_t)
  return target;
}

size_t TMPHdr_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.TMPHdr_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .protobuf.TMPMsgTime_t msg_time = 3;
  if (this->has_msg_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_time_);
  }

  // uint32 msg_length = 1;
  if (this->msg_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_length());
  }

  // uint32 MsgSeqNum = 2;
  if (this->msgseqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgseqnum());
  }

  // uint32 MessageType = 4;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->messagetype());
  }

  // uint32 fcm_id = 5;
  if (this->fcm_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fcm_id());
  }

  // uint32 session_id = 6;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TMPHdr_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.TMPHdr_t)
  GOOGLE_DCHECK_NE(&from, this);
  const TMPHdr_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TMPHdr_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.TMPHdr_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.TMPHdr_t)
    MergeFrom(*source);
  }
}

void TMPHdr_t::MergeFrom(const TMPHdr_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.TMPHdr_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg_time()) {
    mutable_msg_time()->::protobuf::TMPMsgTime_t::MergeFrom(from.msg_time());
  }
  if (from.msg_length() != 0) {
    set_msg_length(from.msg_length());
  }
  if (from.msgseqnum() != 0) {
    set_msgseqnum(from.msgseqnum());
  }
  if (from.messagetype() != 0) {
    set_messagetype(from.messagetype());
  }
  if (from.fcm_id() != 0) {
    set_fcm_id(from.fcm_id());
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void TMPHdr_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.TMPHdr_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TMPHdr_t::CopyFrom(const TMPHdr_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.TMPHdr_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMPHdr_t::IsInitialized() const {
  return true;
}

void TMPHdr_t::Swap(TMPHdr_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TMPHdr_t::InternalSwap(TMPHdr_t* other) {
  using std::swap;
  swap(msg_time_, other->msg_time_);
  swap(msg_length_, other->msg_length_);
  swap(msgseqnum_, other->msgseqnum_);
  swap(messagetype_, other->messagetype_);
  swap(fcm_id_, other->fcm_id_);
  swap(session_id_, other->session_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TMPHdr_t::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TMPHdr_t

// uint32 msg_length = 1;
void TMPHdr_t::clear_msg_length() {
  msg_length_ = 0u;
}
::google::protobuf::uint32 TMPHdr_t::msg_length() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.msg_length)
  return msg_length_;
}
void TMPHdr_t::set_msg_length(::google::protobuf::uint32 value) {
  
  msg_length_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.msg_length)
}

// uint32 MsgSeqNum = 2;
void TMPHdr_t::clear_msgseqnum() {
  msgseqnum_ = 0u;
}
::google::protobuf::uint32 TMPHdr_t::msgseqnum() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.MsgSeqNum)
  return msgseqnum_;
}
void TMPHdr_t::set_msgseqnum(::google::protobuf::uint32 value) {
  
  msgseqnum_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.MsgSeqNum)
}

// .protobuf.TMPMsgTime_t msg_time = 3;
bool TMPHdr_t::has_msg_time() const {
  return this != internal_default_instance() && msg_time_ != NULL;
}
void TMPHdr_t::clear_msg_time() {
  if (GetArenaNoVirtual() == NULL && msg_time_ != NULL) delete msg_time_;
  msg_time_ = NULL;
}
const ::protobuf::TMPMsgTime_t& TMPHdr_t::msg_time() const {
  const ::protobuf::TMPMsgTime_t* p = msg_time_;
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.msg_time)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPMsgTime_t*>(
      &::protobuf::_TMPMsgTime_t_default_instance_);
}
::protobuf::TMPMsgTime_t* TMPHdr_t::mutable_msg_time() {
  
  if (msg_time_ == NULL) {
    msg_time_ = new ::protobuf::TMPMsgTime_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.TMPHdr_t.msg_time)
  return msg_time_;
}
::protobuf::TMPMsgTime_t* TMPHdr_t::release_msg_time() {
  // @@protoc_insertion_point(field_release:protobuf.TMPHdr_t.msg_time)
  
  ::protobuf::TMPMsgTime_t* temp = msg_time_;
  msg_time_ = NULL;
  return temp;
}
void TMPHdr_t::set_allocated_msg_time(::protobuf::TMPMsgTime_t* msg_time) {
  delete msg_time_;
  msg_time_ = msg_time;
  if (msg_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.TMPHdr_t.msg_time)
}

// uint32 MessageType = 4;
void TMPHdr_t::clear_messagetype() {
  messagetype_ = 0u;
}
::google::protobuf::uint32 TMPHdr_t::messagetype() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.MessageType)
  return messagetype_;
}
void TMPHdr_t::set_messagetype(::google::protobuf::uint32 value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.MessageType)
}

// uint32 fcm_id = 5;
void TMPHdr_t::clear_fcm_id() {
  fcm_id_ = 0u;
}
::google::protobuf::uint32 TMPHdr_t::fcm_id() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.fcm_id)
  return fcm_id_;
}
void TMPHdr_t::set_fcm_id(::google::protobuf::uint32 value) {
  
  fcm_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.fcm_id)
}

// uint32 session_id = 6;
void TMPHdr_t::clear_session_id() {
  session_id_ = 0u;
}
::google::protobuf::uint32 TMPHdr_t::session_id() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.session_id)
  return session_id_;
}
void TMPHdr_t::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketDataMessage_TMPR02_t::kHdrFieldNumber;
const int MarketDataMessage_TMPR02_t::kStatusCodeFieldNumber;
const int MarketDataMessage_TMPR02_t::kExecTypeFieldNumber;
const int MarketDataMessage_TMPR02_t::kCmIdFieldNumber;
const int MarketDataMessage_TMPR02_t::kFcmIdFieldNumber;
const int MarketDataMessage_TMPR02_t::kOrderNoFieldNumber;
const int MarketDataMessage_TMPR02_t::kOrdIdFieldNumber;
const int MarketDataMessage_TMPR02_t::kUserDefineFieldNumber;
const int MarketDataMessage_TMPR02_t::kSymbolTypeFieldNumber;
const int MarketDataMessage_TMPR02_t::kSymFieldNumber;
const int MarketDataMessage_TMPR02_t::kPriceFieldNumber;
const int MarketDataMessage_TMPR02_t::kQtyFieldNumber;
const int MarketDataMessage_TMPR02_t::kInvestorAcnoFieldNumber;
const int MarketDataMessage_TMPR02_t::kInvestorFlagFieldNumber;
const int MarketDataMessage_TMPR02_t::kSideFieldNumber;
const int MarketDataMessage_TMPR02_t::kOrdTypeFieldNumber;
const int MarketDataMessage_TMPR02_t::kTimeInForceFieldNumber;
const int MarketDataMessage_TMPR02_t::kPositionEffectFieldNumber;
const int MarketDataMessage_TMPR02_t::kLastPxFieldNumber;
const int MarketDataMessage_TMPR02_t::kLastQtyFieldNumber;
const int MarketDataMessage_TMPR02_t::kPxSubtotalFieldNumber;
const int MarketDataMessage_TMPR02_t::kCumQtyFieldNumber;
const int MarketDataMessage_TMPR02_t::kLeavesQtyFieldNumber;
const int MarketDataMessage_TMPR02_t::kBeforeQtyFieldNumber;
const int MarketDataMessage_TMPR02_t::kLegSide1FieldNumber;
const int MarketDataMessage_TMPR02_t::kLegSide2FieldNumber;
const int MarketDataMessage_TMPR02_t::kLegPx1FieldNumber;
const int MarketDataMessage_TMPR02_t::kLegPx2FieldNumber;
const int MarketDataMessage_TMPR02_t::kLegQty1FieldNumber;
const int MarketDataMessage_TMPR02_t::kLegQty2FieldNumber;
const int MarketDataMessage_TMPR02_t::kOrgTransTimeFieldNumber;
const int MarketDataMessage_TMPR02_t::kTransactTimeFieldNumber;
const int MarketDataMessage_TMPR02_t::kTargetIdFieldNumber;
const int MarketDataMessage_TMPR02_t::kUniqIdFieldNumber;
const int MarketDataMessage_TMPR02_t::kRptSeqFieldNumber;
const int MarketDataMessage_TMPR02_t::kProtocolTypeFieldNumber;
const int MarketDataMessage_TMPR02_t::kCheckSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketDataMessage_TMPR02_t::MarketDataMessage_TMPR02_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MarketDataMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.MarketDataMessage_TMPR02_t)
}
MarketDataMessage_TMPR02_t::MarketDataMessage_TMPR02_t(const MarketDataMessage_TMPR02_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_no().size() > 0) {
    order_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_no_);
  }
  user_define_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_define().size() > 0) {
    user_define_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_define_);
  }
  sym_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sym().size() > 0) {
    sym_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sym_);
  }
  if (from.has_hdr()) {
    hdr_ = new ::protobuf::TMPHdr_t(*from.hdr_);
  } else {
    hdr_ = NULL;
  }
  if (from.has_org_trans_time()) {
    org_trans_time_ = new ::protobuf::TMPMsgTime_t(*from.org_trans_time_);
  } else {
    org_trans_time_ = NULL;
  }
  if (from.has_transacttime()) {
    transacttime_ = new ::protobuf::TMPMsgTime_t(*from.transacttime_);
  } else {
    transacttime_ = NULL;
  }
  ::memcpy(&status_code_, &from.status_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&status_code_)) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:protobuf.MarketDataMessage_TMPR02_t)
}

void MarketDataMessage_TMPR02_t::SharedCtor() {
  order_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_define_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sym_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hdr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&checksum_) -
      reinterpret_cast<char*>(&hdr_)) + sizeof(checksum_));
  _cached_size_ = 0;
}

MarketDataMessage_TMPR02_t::~MarketDataMessage_TMPR02_t() {
  // @@protoc_insertion_point(destructor:protobuf.MarketDataMessage_TMPR02_t)
  SharedDtor();
}

void MarketDataMessage_TMPR02_t::SharedDtor() {
  order_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_define_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sym_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hdr_;
  if (this != internal_default_instance()) delete org_trans_time_;
  if (this != internal_default_instance()) delete transacttime_;
}

void MarketDataMessage_TMPR02_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketDataMessage_TMPR02_t::descriptor() {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketDataMessage_TMPR02_t& MarketDataMessage_TMPR02_t::default_instance() {
  protobuf_MarketDataMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarketDataMessage_TMPR02_t* MarketDataMessage_TMPR02_t::New(::google::protobuf::Arena* arena) const {
  MarketDataMessage_TMPR02_t* n = new MarketDataMessage_TMPR02_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketDataMessage_TMPR02_t::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.MarketDataMessage_TMPR02_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_define_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sym_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && hdr_ != NULL) {
    delete hdr_;
  }
  hdr_ = NULL;
  if (GetArenaNoVirtual() == NULL && org_trans_time_ != NULL) {
    delete org_trans_time_;
  }
  org_trans_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && transacttime_ != NULL) {
    delete transacttime_;
  }
  transacttime_ = NULL;
  ::memset(&status_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&checksum_) -
      reinterpret_cast<char*>(&status_code_)) + sizeof(checksum_));
  _internal_metadata_.Clear();
}

bool MarketDataMessage_TMPR02_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.MarketDataMessage_TMPR02_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .protobuf.TMPHdr_t hdr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hdr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ExecType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exectype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cm_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cm_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fcm_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fcm_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order_no = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_no().data(), static_cast<int>(this->order_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf.MarketDataMessage_TMPR02_t.order_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ord_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ord_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_define = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_define()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_define().data(), static_cast<int>(this->user_define().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf.MarketDataMessage_TMPR02_t.user_define"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 symbol_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &symbol_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sym = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sym()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sym().data(), static_cast<int>(this->sym().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protobuf.MarketDataMessage_TMPR02_t.sym"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Price = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 qty = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 investor_acno = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &investor_acno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 investor_flag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &investor_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Side = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OrdType = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ordtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TimeInForce = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeinforce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 PositionEffect = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &positioneffect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LastPx = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastpx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LastQty = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 px_subtotal = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &px_subtotal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CumQty = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cumqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LeavesQty = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leavesqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 before_qty = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &before_qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leg_side_1 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leg_side_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leg_side_2 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leg_side_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 leg_px_1 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leg_px_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 leg_px_2 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leg_px_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leg_qty_1 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leg_qty_1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leg_qty_2 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leg_qty_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.TMPMsgTime_t org_trans_time = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_org_trans_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .protobuf.TMPMsgTime_t TransactTime = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transacttime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_id = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uniq_id = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uniq_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rpt_seq = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rpt_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 protocol_type = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocol_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CheckSum = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.MarketDataMessage_TMPR02_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.MarketDataMessage_TMPR02_t)
  return false;
#undef DO_
}

void MarketDataMessage_TMPR02_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.MarketDataMessage_TMPR02_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protobuf.TMPHdr_t hdr = 1;
  if (this->has_hdr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->hdr_, output);
  }

  // uint32 status_code = 2;
  if (this->status_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status_code(), output);
  }

  // int32 ExecType = 3;
  if (this->exectype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exectype(), output);
  }

  // uint32 cm_id = 4;
  if (this->cm_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cm_id(), output);
  }

  // uint32 fcm_id = 5;
  if (this->fcm_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->fcm_id(), output);
  }

  // string order_no = 6;
  if (this->order_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_no().data(), static_cast<int>(this->order_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage_TMPR02_t.order_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->order_no(), output);
  }

  // uint32 ord_id = 7;
  if (this->ord_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ord_id(), output);
  }

  // string user_define = 8;
  if (this->user_define().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_define().data(), static_cast<int>(this->user_define().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage_TMPR02_t.user_define");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_define(), output);
  }

  // uint32 symbol_type = 9;
  if (this->symbol_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->symbol_type(), output);
  }

  // string sym = 10;
  if (this->sym().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sym().data(), static_cast<int>(this->sym().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage_TMPR02_t.sym");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->sym(), output);
  }

  // int32 Price = 11;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->price(), output);
  }

  // uint32 qty = 12;
  if (this->qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->qty(), output);
  }

  // uint32 investor_acno = 13;
  if (this->investor_acno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->investor_acno(), output);
  }

  // int32 investor_flag = 14;
  if (this->investor_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->investor_flag(), output);
  }

  // uint32 Side = 15;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->side(), output);
  }

  // uint32 OrdType = 16;
  if (this->ordtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->ordtype(), output);
  }

  // uint32 TimeInForce = 17;
  if (this->timeinforce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->timeinforce(), output);
  }

  // int32 PositionEffect = 18;
  if (this->positioneffect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->positioneffect(), output);
  }

  // int32 LastPx = 19;
  if (this->lastpx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->lastpx(), output);
  }

  // uint32 LastQty = 20;
  if (this->lastqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->lastqty(), output);
  }

  // int64 px_subtotal = 21;
  if (this->px_subtotal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(21, this->px_subtotal(), output);
  }

  // uint32 CumQty = 22;
  if (this->cumqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->cumqty(), output);
  }

  // uint32 LeavesQty = 23;
  if (this->leavesqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->leavesqty(), output);
  }

  // uint32 before_qty = 24;
  if (this->before_qty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->before_qty(), output);
  }

  // uint32 leg_side_1 = 25;
  if (this->leg_side_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->leg_side_1(), output);
  }

  // uint32 leg_side_2 = 26;
  if (this->leg_side_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->leg_side_2(), output);
  }

  // int32 leg_px_1 = 27;
  if (this->leg_px_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->leg_px_1(), output);
  }

  // int32 leg_px_2 = 28;
  if (this->leg_px_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->leg_px_2(), output);
  }

  // uint32 leg_qty_1 = 29;
  if (this->leg_qty_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->leg_qty_1(), output);
  }

  // uint32 leg_qty_2 = 30;
  if (this->leg_qty_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->leg_qty_2(), output);
  }

  // .protobuf.TMPMsgTime_t org_trans_time = 31;
  if (this->has_org_trans_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->org_trans_time_, output);
  }

  // .protobuf.TMPMsgTime_t TransactTime = 32;
  if (this->has_transacttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, *this->transacttime_, output);
  }

  // uint32 target_id = 33;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->target_id(), output);
  }

  // uint32 uniq_id = 34;
  if (this->uniq_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->uniq_id(), output);
  }

  // uint32 rpt_seq = 35;
  if (this->rpt_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->rpt_seq(), output);
  }

  // uint32 protocol_type = 36;
  if (this->protocol_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->protocol_type(), output);
  }

  // uint32 CheckSum = 37;
  if (this->checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->checksum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.MarketDataMessage_TMPR02_t)
}

::google::protobuf::uint8* MarketDataMessage_TMPR02_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.MarketDataMessage_TMPR02_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protobuf.TMPHdr_t hdr = 1;
  if (this->has_hdr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->hdr_, deterministic, target);
  }

  // uint32 status_code = 2;
  if (this->status_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status_code(), target);
  }

  // int32 ExecType = 3;
  if (this->exectype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exectype(), target);
  }

  // uint32 cm_id = 4;
  if (this->cm_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cm_id(), target);
  }

  // uint32 fcm_id = 5;
  if (this->fcm_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->fcm_id(), target);
  }

  // string order_no = 6;
  if (this->order_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_no().data(), static_cast<int>(this->order_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage_TMPR02_t.order_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->order_no(), target);
  }

  // uint32 ord_id = 7;
  if (this->ord_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ord_id(), target);
  }

  // string user_define = 8;
  if (this->user_define().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_define().data(), static_cast<int>(this->user_define().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage_TMPR02_t.user_define");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_define(), target);
  }

  // uint32 symbol_type = 9;
  if (this->symbol_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->symbol_type(), target);
  }

  // string sym = 10;
  if (this->sym().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sym().data(), static_cast<int>(this->sym().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protobuf.MarketDataMessage_TMPR02_t.sym");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sym(), target);
  }

  // int32 Price = 11;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->price(), target);
  }

  // uint32 qty = 12;
  if (this->qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->qty(), target);
  }

  // uint32 investor_acno = 13;
  if (this->investor_acno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->investor_acno(), target);
  }

  // int32 investor_flag = 14;
  if (this->investor_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->investor_flag(), target);
  }

  // uint32 Side = 15;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->side(), target);
  }

  // uint32 OrdType = 16;
  if (this->ordtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->ordtype(), target);
  }

  // uint32 TimeInForce = 17;
  if (this->timeinforce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->timeinforce(), target);
  }

  // int32 PositionEffect = 18;
  if (this->positioneffect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->positioneffect(), target);
  }

  // int32 LastPx = 19;
  if (this->lastpx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->lastpx(), target);
  }

  // uint32 LastQty = 20;
  if (this->lastqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->lastqty(), target);
  }

  // int64 px_subtotal = 21;
  if (this->px_subtotal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(21, this->px_subtotal(), target);
  }

  // uint32 CumQty = 22;
  if (this->cumqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->cumqty(), target);
  }

  // uint32 LeavesQty = 23;
  if (this->leavesqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->leavesqty(), target);
  }

  // uint32 before_qty = 24;
  if (this->before_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->before_qty(), target);
  }

  // uint32 leg_side_1 = 25;
  if (this->leg_side_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->leg_side_1(), target);
  }

  // uint32 leg_side_2 = 26;
  if (this->leg_side_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->leg_side_2(), target);
  }

  // int32 leg_px_1 = 27;
  if (this->leg_px_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->leg_px_1(), target);
  }

  // int32 leg_px_2 = 28;
  if (this->leg_px_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->leg_px_2(), target);
  }

  // uint32 leg_qty_1 = 29;
  if (this->leg_qty_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->leg_qty_1(), target);
  }

  // uint32 leg_qty_2 = 30;
  if (this->leg_qty_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->leg_qty_2(), target);
  }

  // .protobuf.TMPMsgTime_t org_trans_time = 31;
  if (this->has_org_trans_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *this->org_trans_time_, deterministic, target);
  }

  // .protobuf.TMPMsgTime_t TransactTime = 32;
  if (this->has_transacttime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        32, *this->transacttime_, deterministic, target);
  }

  // uint32 target_id = 33;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->target_id(), target);
  }

  // uint32 uniq_id = 34;
  if (this->uniq_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->uniq_id(), target);
  }

  // uint32 rpt_seq = 35;
  if (this->rpt_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->rpt_seq(), target);
  }

  // uint32 protocol_type = 36;
  if (this->protocol_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->protocol_type(), target);
  }

  // uint32 CheckSum = 37;
  if (this->checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(37, this->checksum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.MarketDataMessage_TMPR02_t)
  return target;
}

size_t MarketDataMessage_TMPR02_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.MarketDataMessage_TMPR02_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string order_no = 6;
  if (this->order_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_no());
  }

  // string user_define = 8;
  if (this->user_define().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_define());
  }

  // string sym = 10;
  if (this->sym().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sym());
  }

  // .protobuf.TMPHdr_t hdr = 1;
  if (this->has_hdr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hdr_);
  }

  // .protobuf.TMPMsgTime_t org_trans_time = 31;
  if (this->has_org_trans_time()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->org_trans_time_);
  }

  // .protobuf.TMPMsgTime_t TransactTime = 32;
  if (this->has_transacttime()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transacttime_);
  }

  // uint32 status_code = 2;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status_code());
  }

  // int32 ExecType = 3;
  if (this->exectype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exectype());
  }

  // uint32 cm_id = 4;
  if (this->cm_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cm_id());
  }

  // uint32 fcm_id = 5;
  if (this->fcm_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fcm_id());
  }

  // uint32 ord_id = 7;
  if (this->ord_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ord_id());
  }

  // uint32 symbol_type = 9;
  if (this->symbol_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->symbol_type());
  }

  // int32 Price = 11;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  // uint32 qty = 12;
  if (this->qty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qty());
  }

  // uint32 investor_acno = 13;
  if (this->investor_acno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->investor_acno());
  }

  // int32 investor_flag = 14;
  if (this->investor_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->investor_flag());
  }

  // uint32 Side = 15;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->side());
  }

  // uint32 OrdType = 16;
  if (this->ordtype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ordtype());
  }

  // uint32 TimeInForce = 17;
  if (this->timeinforce() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeinforce());
  }

  // int32 PositionEffect = 18;
  if (this->positioneffect() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->positioneffect());
  }

  // int32 LastPx = 19;
  if (this->lastpx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastpx());
  }

  // uint32 LastQty = 20;
  if (this->lastqty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lastqty());
  }

  // int64 px_subtotal = 21;
  if (this->px_subtotal() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->px_subtotal());
  }

  // uint32 CumQty = 22;
  if (this->cumqty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cumqty());
  }

  // uint32 LeavesQty = 23;
  if (this->leavesqty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leavesqty());
  }

  // uint32 before_qty = 24;
  if (this->before_qty() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->before_qty());
  }

  // uint32 leg_side_1 = 25;
  if (this->leg_side_1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leg_side_1());
  }

  // uint32 leg_side_2 = 26;
  if (this->leg_side_2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leg_side_2());
  }

  // int32 leg_px_1 = 27;
  if (this->leg_px_1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leg_px_1());
  }

  // int32 leg_px_2 = 28;
  if (this->leg_px_2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->leg_px_2());
  }

  // uint32 leg_qty_1 = 29;
  if (this->leg_qty_1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leg_qty_1());
  }

  // uint32 leg_qty_2 = 30;
  if (this->leg_qty_2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leg_qty_2());
  }

  // uint32 target_id = 33;
  if (this->target_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_id());
  }

  // uint32 uniq_id = 34;
  if (this->uniq_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uniq_id());
  }

  // uint32 rpt_seq = 35;
  if (this->rpt_seq() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rpt_seq());
  }

  // uint32 protocol_type = 36;
  if (this->protocol_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->protocol_type());
  }

  // uint32 CheckSum = 37;
  if (this->checksum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketDataMessage_TMPR02_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.MarketDataMessage_TMPR02_t)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketDataMessage_TMPR02_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketDataMessage_TMPR02_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.MarketDataMessage_TMPR02_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.MarketDataMessage_TMPR02_t)
    MergeFrom(*source);
  }
}

void MarketDataMessage_TMPR02_t::MergeFrom(const MarketDataMessage_TMPR02_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.MarketDataMessage_TMPR02_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_no().size() > 0) {

    order_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_no_);
  }
  if (from.user_define().size() > 0) {

    user_define_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_define_);
  }
  if (from.sym().size() > 0) {

    sym_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sym_);
  }
  if (from.has_hdr()) {
    mutable_hdr()->::protobuf::TMPHdr_t::MergeFrom(from.hdr());
  }
  if (from.has_org_trans_time()) {
    mutable_org_trans_time()->::protobuf::TMPMsgTime_t::MergeFrom(from.org_trans_time());
  }
  if (from.has_transacttime()) {
    mutable_transacttime()->::protobuf::TMPMsgTime_t::MergeFrom(from.transacttime());
  }
  if (from.status_code() != 0) {
    set_status_code(from.status_code());
  }
  if (from.exectype() != 0) {
    set_exectype(from.exectype());
  }
  if (from.cm_id() != 0) {
    set_cm_id(from.cm_id());
  }
  if (from.fcm_id() != 0) {
    set_fcm_id(from.fcm_id());
  }
  if (from.ord_id() != 0) {
    set_ord_id(from.ord_id());
  }
  if (from.symbol_type() != 0) {
    set_symbol_type(from.symbol_type());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.qty() != 0) {
    set_qty(from.qty());
  }
  if (from.investor_acno() != 0) {
    set_investor_acno(from.investor_acno());
  }
  if (from.investor_flag() != 0) {
    set_investor_flag(from.investor_flag());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.ordtype() != 0) {
    set_ordtype(from.ordtype());
  }
  if (from.timeinforce() != 0) {
    set_timeinforce(from.timeinforce());
  }
  if (from.positioneffect() != 0) {
    set_positioneffect(from.positioneffect());
  }
  if (from.lastpx() != 0) {
    set_lastpx(from.lastpx());
  }
  if (from.lastqty() != 0) {
    set_lastqty(from.lastqty());
  }
  if (from.px_subtotal() != 0) {
    set_px_subtotal(from.px_subtotal());
  }
  if (from.cumqty() != 0) {
    set_cumqty(from.cumqty());
  }
  if (from.leavesqty() != 0) {
    set_leavesqty(from.leavesqty());
  }
  if (from.before_qty() != 0) {
    set_before_qty(from.before_qty());
  }
  if (from.leg_side_1() != 0) {
    set_leg_side_1(from.leg_side_1());
  }
  if (from.leg_side_2() != 0) {
    set_leg_side_2(from.leg_side_2());
  }
  if (from.leg_px_1() != 0) {
    set_leg_px_1(from.leg_px_1());
  }
  if (from.leg_px_2() != 0) {
    set_leg_px_2(from.leg_px_2());
  }
  if (from.leg_qty_1() != 0) {
    set_leg_qty_1(from.leg_qty_1());
  }
  if (from.leg_qty_2() != 0) {
    set_leg_qty_2(from.leg_qty_2());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.uniq_id() != 0) {
    set_uniq_id(from.uniq_id());
  }
  if (from.rpt_seq() != 0) {
    set_rpt_seq(from.rpt_seq());
  }
  if (from.protocol_type() != 0) {
    set_protocol_type(from.protocol_type());
  }
  if (from.checksum() != 0) {
    set_checksum(from.checksum());
  }
}

void MarketDataMessage_TMPR02_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.MarketDataMessage_TMPR02_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketDataMessage_TMPR02_t::CopyFrom(const MarketDataMessage_TMPR02_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.MarketDataMessage_TMPR02_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketDataMessage_TMPR02_t::IsInitialized() const {
  return true;
}

void MarketDataMessage_TMPR02_t::Swap(MarketDataMessage_TMPR02_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketDataMessage_TMPR02_t::InternalSwap(MarketDataMessage_TMPR02_t* other) {
  using std::swap;
  order_no_.Swap(&other->order_no_);
  user_define_.Swap(&other->user_define_);
  sym_.Swap(&other->sym_);
  swap(hdr_, other->hdr_);
  swap(org_trans_time_, other->org_trans_time_);
  swap(transacttime_, other->transacttime_);
  swap(status_code_, other->status_code_);
  swap(exectype_, other->exectype_);
  swap(cm_id_, other->cm_id_);
  swap(fcm_id_, other->fcm_id_);
  swap(ord_id_, other->ord_id_);
  swap(symbol_type_, other->symbol_type_);
  swap(price_, other->price_);
  swap(qty_, other->qty_);
  swap(investor_acno_, other->investor_acno_);
  swap(investor_flag_, other->investor_flag_);
  swap(side_, other->side_);
  swap(ordtype_, other->ordtype_);
  swap(timeinforce_, other->timeinforce_);
  swap(positioneffect_, other->positioneffect_);
  swap(lastpx_, other->lastpx_);
  swap(lastqty_, other->lastqty_);
  swap(px_subtotal_, other->px_subtotal_);
  swap(cumqty_, other->cumqty_);
  swap(leavesqty_, other->leavesqty_);
  swap(before_qty_, other->before_qty_);
  swap(leg_side_1_, other->leg_side_1_);
  swap(leg_side_2_, other->leg_side_2_);
  swap(leg_px_1_, other->leg_px_1_);
  swap(leg_px_2_, other->leg_px_2_);
  swap(leg_qty_1_, other->leg_qty_1_);
  swap(leg_qty_2_, other->leg_qty_2_);
  swap(target_id_, other->target_id_);
  swap(uniq_id_, other->uniq_id_);
  swap(rpt_seq_, other->rpt_seq_);
  swap(protocol_type_, other->protocol_type_);
  swap(checksum_, other->checksum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketDataMessage_TMPR02_t::GetMetadata() const {
  protobuf_MarketDataMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MarketDataMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarketDataMessage_TMPR02_t

// .protobuf.TMPHdr_t hdr = 1;
bool MarketDataMessage_TMPR02_t::has_hdr() const {
  return this != internal_default_instance() && hdr_ != NULL;
}
void MarketDataMessage_TMPR02_t::clear_hdr() {
  if (GetArenaNoVirtual() == NULL && hdr_ != NULL) delete hdr_;
  hdr_ = NULL;
}
const ::protobuf::TMPHdr_t& MarketDataMessage_TMPR02_t::hdr() const {
  const ::protobuf::TMPHdr_t* p = hdr_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.hdr)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPHdr_t*>(
      &::protobuf::_TMPHdr_t_default_instance_);
}
::protobuf::TMPHdr_t* MarketDataMessage_TMPR02_t::mutable_hdr() {
  
  if (hdr_ == NULL) {
    hdr_ = new ::protobuf::TMPHdr_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.hdr)
  return hdr_;
}
::protobuf::TMPHdr_t* MarketDataMessage_TMPR02_t::release_hdr() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.hdr)
  
  ::protobuf::TMPHdr_t* temp = hdr_;
  hdr_ = NULL;
  return temp;
}
void MarketDataMessage_TMPR02_t::set_allocated_hdr(::protobuf::TMPHdr_t* hdr) {
  delete hdr_;
  hdr_ = hdr;
  if (hdr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.hdr)
}

// uint32 status_code = 2;
void MarketDataMessage_TMPR02_t::clear_status_code() {
  status_code_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::status_code() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.status_code)
  return status_code_;
}
void MarketDataMessage_TMPR02_t::set_status_code(::google::protobuf::uint32 value) {
  
  status_code_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.status_code)
}

// int32 ExecType = 3;
void MarketDataMessage_TMPR02_t::clear_exectype() {
  exectype_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::exectype() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.ExecType)
  return exectype_;
}
void MarketDataMessage_TMPR02_t::set_exectype(::google::protobuf::int32 value) {
  
  exectype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.ExecType)
}

// uint32 cm_id = 4;
void MarketDataMessage_TMPR02_t::clear_cm_id() {
  cm_id_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::cm_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.cm_id)
  return cm_id_;
}
void MarketDataMessage_TMPR02_t::set_cm_id(::google::protobuf::uint32 value) {
  
  cm_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.cm_id)
}

// uint32 fcm_id = 5;
void MarketDataMessage_TMPR02_t::clear_fcm_id() {
  fcm_id_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::fcm_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.fcm_id)
  return fcm_id_;
}
void MarketDataMessage_TMPR02_t::set_fcm_id(::google::protobuf::uint32 value) {
  
  fcm_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.fcm_id)
}

// string order_no = 6;
void MarketDataMessage_TMPR02_t::clear_order_no() {
  order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MarketDataMessage_TMPR02_t::order_no() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.order_no)
  return order_no_.GetNoArena();
}
void MarketDataMessage_TMPR02_t::set_order_no(const ::std::string& value) {
  
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
#if LANG_CXX11
void MarketDataMessage_TMPR02_t::set_order_no(::std::string&& value) {
  
  order_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
#endif
void MarketDataMessage_TMPR02_t::set_order_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
void MarketDataMessage_TMPR02_t::set_order_no(const char* value, size_t size) {
  
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
::std::string* MarketDataMessage_TMPR02_t::mutable_order_no() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.order_no)
  return order_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MarketDataMessage_TMPR02_t::release_order_no() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.order_no)
  
  return order_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MarketDataMessage_TMPR02_t::set_allocated_order_no(::std::string* order_no) {
  if (order_no != NULL) {
    
  } else {
    
  }
  order_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_no);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.order_no)
}

// uint32 ord_id = 7;
void MarketDataMessage_TMPR02_t::clear_ord_id() {
  ord_id_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::ord_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.ord_id)
  return ord_id_;
}
void MarketDataMessage_TMPR02_t::set_ord_id(::google::protobuf::uint32 value) {
  
  ord_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.ord_id)
}

// string user_define = 8;
void MarketDataMessage_TMPR02_t::clear_user_define() {
  user_define_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MarketDataMessage_TMPR02_t::user_define() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.user_define)
  return user_define_.GetNoArena();
}
void MarketDataMessage_TMPR02_t::set_user_define(const ::std::string& value) {
  
  user_define_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
#if LANG_CXX11
void MarketDataMessage_TMPR02_t::set_user_define(::std::string&& value) {
  
  user_define_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
#endif
void MarketDataMessage_TMPR02_t::set_user_define(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_define_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
void MarketDataMessage_TMPR02_t::set_user_define(const char* value, size_t size) {
  
  user_define_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
::std::string* MarketDataMessage_TMPR02_t::mutable_user_define() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.user_define)
  return user_define_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MarketDataMessage_TMPR02_t::release_user_define() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.user_define)
  
  return user_define_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MarketDataMessage_TMPR02_t::set_allocated_user_define(::std::string* user_define) {
  if (user_define != NULL) {
    
  } else {
    
  }
  user_define_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_define);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.user_define)
}

// uint32 symbol_type = 9;
void MarketDataMessage_TMPR02_t::clear_symbol_type() {
  symbol_type_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::symbol_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.symbol_type)
  return symbol_type_;
}
void MarketDataMessage_TMPR02_t::set_symbol_type(::google::protobuf::uint32 value) {
  
  symbol_type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.symbol_type)
}

// string sym = 10;
void MarketDataMessage_TMPR02_t::clear_sym() {
  sym_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MarketDataMessage_TMPR02_t::sym() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.sym)
  return sym_.GetNoArena();
}
void MarketDataMessage_TMPR02_t::set_sym(const ::std::string& value) {
  
  sym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.sym)
}
#if LANG_CXX11
void MarketDataMessage_TMPR02_t::set_sym(::std::string&& value) {
  
  sym_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage_TMPR02_t.sym)
}
#endif
void MarketDataMessage_TMPR02_t::set_sym(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage_TMPR02_t.sym)
}
void MarketDataMessage_TMPR02_t::set_sym(const char* value, size_t size) {
  
  sym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage_TMPR02_t.sym)
}
::std::string* MarketDataMessage_TMPR02_t::mutable_sym() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.sym)
  return sym_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MarketDataMessage_TMPR02_t::release_sym() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.sym)
  
  return sym_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MarketDataMessage_TMPR02_t::set_allocated_sym(::std::string* sym) {
  if (sym != NULL) {
    
  } else {
    
  }
  sym_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sym);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.sym)
}

// int32 Price = 11;
void MarketDataMessage_TMPR02_t::clear_price() {
  price_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.Price)
  return price_;
}
void MarketDataMessage_TMPR02_t::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.Price)
}

// uint32 qty = 12;
void MarketDataMessage_TMPR02_t::clear_qty() {
  qty_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.qty)
  return qty_;
}
void MarketDataMessage_TMPR02_t::set_qty(::google::protobuf::uint32 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.qty)
}

// uint32 investor_acno = 13;
void MarketDataMessage_TMPR02_t::clear_investor_acno() {
  investor_acno_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::investor_acno() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.investor_acno)
  return investor_acno_;
}
void MarketDataMessage_TMPR02_t::set_investor_acno(::google::protobuf::uint32 value) {
  
  investor_acno_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.investor_acno)
}

// int32 investor_flag = 14;
void MarketDataMessage_TMPR02_t::clear_investor_flag() {
  investor_flag_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::investor_flag() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.investor_flag)
  return investor_flag_;
}
void MarketDataMessage_TMPR02_t::set_investor_flag(::google::protobuf::int32 value) {
  
  investor_flag_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.investor_flag)
}

// uint32 Side = 15;
void MarketDataMessage_TMPR02_t::clear_side() {
  side_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::side() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.Side)
  return side_;
}
void MarketDataMessage_TMPR02_t::set_side(::google::protobuf::uint32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.Side)
}

// uint32 OrdType = 16;
void MarketDataMessage_TMPR02_t::clear_ordtype() {
  ordtype_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::ordtype() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.OrdType)
  return ordtype_;
}
void MarketDataMessage_TMPR02_t::set_ordtype(::google::protobuf::uint32 value) {
  
  ordtype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.OrdType)
}

// uint32 TimeInForce = 17;
void MarketDataMessage_TMPR02_t::clear_timeinforce() {
  timeinforce_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::timeinforce() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.TimeInForce)
  return timeinforce_;
}
void MarketDataMessage_TMPR02_t::set_timeinforce(::google::protobuf::uint32 value) {
  
  timeinforce_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.TimeInForce)
}

// int32 PositionEffect = 18;
void MarketDataMessage_TMPR02_t::clear_positioneffect() {
  positioneffect_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::positioneffect() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.PositionEffect)
  return positioneffect_;
}
void MarketDataMessage_TMPR02_t::set_positioneffect(::google::protobuf::int32 value) {
  
  positioneffect_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.PositionEffect)
}

// int32 LastPx = 19;
void MarketDataMessage_TMPR02_t::clear_lastpx() {
  lastpx_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::lastpx() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.LastPx)
  return lastpx_;
}
void MarketDataMessage_TMPR02_t::set_lastpx(::google::protobuf::int32 value) {
  
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.LastPx)
}

// uint32 LastQty = 20;
void MarketDataMessage_TMPR02_t::clear_lastqty() {
  lastqty_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::lastqty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.LastQty)
  return lastqty_;
}
void MarketDataMessage_TMPR02_t::set_lastqty(::google::protobuf::uint32 value) {
  
  lastqty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.LastQty)
}

// int64 px_subtotal = 21;
void MarketDataMessage_TMPR02_t::clear_px_subtotal() {
  px_subtotal_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MarketDataMessage_TMPR02_t::px_subtotal() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.px_subtotal)
  return px_subtotal_;
}
void MarketDataMessage_TMPR02_t::set_px_subtotal(::google::protobuf::int64 value) {
  
  px_subtotal_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.px_subtotal)
}

// uint32 CumQty = 22;
void MarketDataMessage_TMPR02_t::clear_cumqty() {
  cumqty_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::cumqty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.CumQty)
  return cumqty_;
}
void MarketDataMessage_TMPR02_t::set_cumqty(::google::protobuf::uint32 value) {
  
  cumqty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.CumQty)
}

// uint32 LeavesQty = 23;
void MarketDataMessage_TMPR02_t::clear_leavesqty() {
  leavesqty_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leavesqty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.LeavesQty)
  return leavesqty_;
}
void MarketDataMessage_TMPR02_t::set_leavesqty(::google::protobuf::uint32 value) {
  
  leavesqty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.LeavesQty)
}

// uint32 before_qty = 24;
void MarketDataMessage_TMPR02_t::clear_before_qty() {
  before_qty_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::before_qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.before_qty)
  return before_qty_;
}
void MarketDataMessage_TMPR02_t::set_before_qty(::google::protobuf::uint32 value) {
  
  before_qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.before_qty)
}

// uint32 leg_side_1 = 25;
void MarketDataMessage_TMPR02_t::clear_leg_side_1() {
  leg_side_1_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_side_1() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_side_1)
  return leg_side_1_;
}
void MarketDataMessage_TMPR02_t::set_leg_side_1(::google::protobuf::uint32 value) {
  
  leg_side_1_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_side_1)
}

// uint32 leg_side_2 = 26;
void MarketDataMessage_TMPR02_t::clear_leg_side_2() {
  leg_side_2_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_side_2() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_side_2)
  return leg_side_2_;
}
void MarketDataMessage_TMPR02_t::set_leg_side_2(::google::protobuf::uint32 value) {
  
  leg_side_2_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_side_2)
}

// int32 leg_px_1 = 27;
void MarketDataMessage_TMPR02_t::clear_leg_px_1() {
  leg_px_1_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::leg_px_1() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_px_1)
  return leg_px_1_;
}
void MarketDataMessage_TMPR02_t::set_leg_px_1(::google::protobuf::int32 value) {
  
  leg_px_1_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_px_1)
}

// int32 leg_px_2 = 28;
void MarketDataMessage_TMPR02_t::clear_leg_px_2() {
  leg_px_2_ = 0;
}
::google::protobuf::int32 MarketDataMessage_TMPR02_t::leg_px_2() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_px_2)
  return leg_px_2_;
}
void MarketDataMessage_TMPR02_t::set_leg_px_2(::google::protobuf::int32 value) {
  
  leg_px_2_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_px_2)
}

// uint32 leg_qty_1 = 29;
void MarketDataMessage_TMPR02_t::clear_leg_qty_1() {
  leg_qty_1_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_qty_1() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_qty_1)
  return leg_qty_1_;
}
void MarketDataMessage_TMPR02_t::set_leg_qty_1(::google::protobuf::uint32 value) {
  
  leg_qty_1_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_qty_1)
}

// uint32 leg_qty_2 = 30;
void MarketDataMessage_TMPR02_t::clear_leg_qty_2() {
  leg_qty_2_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_qty_2() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_qty_2)
  return leg_qty_2_;
}
void MarketDataMessage_TMPR02_t::set_leg_qty_2(::google::protobuf::uint32 value) {
  
  leg_qty_2_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_qty_2)
}

// .protobuf.TMPMsgTime_t org_trans_time = 31;
bool MarketDataMessage_TMPR02_t::has_org_trans_time() const {
  return this != internal_default_instance() && org_trans_time_ != NULL;
}
void MarketDataMessage_TMPR02_t::clear_org_trans_time() {
  if (GetArenaNoVirtual() == NULL && org_trans_time_ != NULL) delete org_trans_time_;
  org_trans_time_ = NULL;
}
const ::protobuf::TMPMsgTime_t& MarketDataMessage_TMPR02_t::org_trans_time() const {
  const ::protobuf::TMPMsgTime_t* p = org_trans_time_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPMsgTime_t*>(
      &::protobuf::_TMPMsgTime_t_default_instance_);
}
::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::mutable_org_trans_time() {
  
  if (org_trans_time_ == NULL) {
    org_trans_time_ = new ::protobuf::TMPMsgTime_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
  return org_trans_time_;
}
::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::release_org_trans_time() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
  
  ::protobuf::TMPMsgTime_t* temp = org_trans_time_;
  org_trans_time_ = NULL;
  return temp;
}
void MarketDataMessage_TMPR02_t::set_allocated_org_trans_time(::protobuf::TMPMsgTime_t* org_trans_time) {
  delete org_trans_time_;
  org_trans_time_ = org_trans_time;
  if (org_trans_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
}

// .protobuf.TMPMsgTime_t TransactTime = 32;
bool MarketDataMessage_TMPR02_t::has_transacttime() const {
  return this != internal_default_instance() && transacttime_ != NULL;
}
void MarketDataMessage_TMPR02_t::clear_transacttime() {
  if (GetArenaNoVirtual() == NULL && transacttime_ != NULL) delete transacttime_;
  transacttime_ = NULL;
}
const ::protobuf::TMPMsgTime_t& MarketDataMessage_TMPR02_t::transacttime() const {
  const ::protobuf::TMPMsgTime_t* p = transacttime_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPMsgTime_t*>(
      &::protobuf::_TMPMsgTime_t_default_instance_);
}
::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::mutable_transacttime() {
  
  if (transacttime_ == NULL) {
    transacttime_ = new ::protobuf::TMPMsgTime_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
  return transacttime_;
}
::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::release_transacttime() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
  
  ::protobuf::TMPMsgTime_t* temp = transacttime_;
  transacttime_ = NULL;
  return temp;
}
void MarketDataMessage_TMPR02_t::set_allocated_transacttime(::protobuf::TMPMsgTime_t* transacttime) {
  delete transacttime_;
  transacttime_ = transacttime;
  if (transacttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
}

// uint32 target_id = 33;
void MarketDataMessage_TMPR02_t::clear_target_id() {
  target_id_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::target_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.target_id)
  return target_id_;
}
void MarketDataMessage_TMPR02_t::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.target_id)
}

// uint32 uniq_id = 34;
void MarketDataMessage_TMPR02_t::clear_uniq_id() {
  uniq_id_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::uniq_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.uniq_id)
  return uniq_id_;
}
void MarketDataMessage_TMPR02_t::set_uniq_id(::google::protobuf::uint32 value) {
  
  uniq_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.uniq_id)
}

// uint32 rpt_seq = 35;
void MarketDataMessage_TMPR02_t::clear_rpt_seq() {
  rpt_seq_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::rpt_seq() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.rpt_seq)
  return rpt_seq_;
}
void MarketDataMessage_TMPR02_t::set_rpt_seq(::google::protobuf::uint32 value) {
  
  rpt_seq_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.rpt_seq)
}

// uint32 protocol_type = 36;
void MarketDataMessage_TMPR02_t::clear_protocol_type() {
  protocol_type_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::protocol_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.protocol_type)
  return protocol_type_;
}
void MarketDataMessage_TMPR02_t::set_protocol_type(::google::protobuf::uint32 value) {
  
  protocol_type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.protocol_type)
}

// uint32 CheckSum = 37;
void MarketDataMessage_TMPR02_t::clear_checksum() {
  checksum_ = 0u;
}
::google::protobuf::uint32 MarketDataMessage_TMPR02_t::checksum() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.CheckSum)
  return checksum_;
}
void MarketDataMessage_TMPR02_t::set_checksum(::google::protobuf::uint32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.CheckSum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)