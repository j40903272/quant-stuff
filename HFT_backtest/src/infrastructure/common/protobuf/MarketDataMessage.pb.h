// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketDataMessage.proto

#ifndef PROTOBUF_MarketDataMessage_2eproto__INCLUDED
#define PROTOBUF_MarketDataMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
namespace protobuf {
class MarketDataMessage;
class MarketDataMessageDefaultTypeInternal;
extern MarketDataMessageDefaultTypeInternal _MarketDataMessage_default_instance_;
class MarketDataMessage_IMPLIED;
class MarketDataMessage_IMPLIEDDefaultTypeInternal;
extern MarketDataMessage_IMPLIEDDefaultTypeInternal _MarketDataMessage_IMPLIED_default_instance_;
class MarketDataMessage_MBO;
class MarketDataMessage_MBODefaultTypeInternal;
extern MarketDataMessage_MBODefaultTypeInternal _MarketDataMessage_MBO_default_instance_;
class MarketDataMessage_MBP;
class MarketDataMessage_MBPDefaultTypeInternal;
extern MarketDataMessage_MBPDefaultTypeInternal _MarketDataMessage_MBP_default_instance_;
class MarketDataMessage_TMPR02_t;
class MarketDataMessage_TMPR02_tDefaultTypeInternal;
extern MarketDataMessage_TMPR02_tDefaultTypeInternal _MarketDataMessage_TMPR02_t_default_instance_;
class MarketDataMessage_TPRICE;
class MarketDataMessage_TPRICEDefaultTypeInternal;
extern MarketDataMessage_TPRICEDefaultTypeInternal _MarketDataMessage_TPRICE_default_instance_;
class MarketDataMessage_TRADE;
class MarketDataMessage_TRADEDefaultTypeInternal;
extern MarketDataMessage_TRADEDefaultTypeInternal _MarketDataMessage_TRADE_default_instance_;
class TMPHdr_t;
class TMPHdr_tDefaultTypeInternal;
extern TMPHdr_tDefaultTypeInternal _TMPHdr_t_default_instance_;
class TMPMsgTime_t;
class TMPMsgTime_tDefaultTypeInternal;
extern TMPMsgTime_tDefaultTypeInternal _TMPMsgTime_t_default_instance_;
}  // namespace protobuf

namespace protobuf {

namespace protobuf_MarketDataMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MarketDataMessage_2eproto

enum MarketDataMessage_MarketDataMessageType {
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Invalid = 0,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Snapshot = 1,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Add = 2,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Delete = 3,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_ModifyWithPrice = 4,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_ModifyWithQty = 5,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Trade = 6,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_PacketEnd = 7,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Implied = 8,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_TPrice = 9,
  MarketDataMessage_MarketDataMessageType_MarketDataMessageType_TPrice_R02 = 10,
  MarketDataMessage_MarketDataMessageType_MarketDataMessage_MarketDataMessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarketDataMessage_MarketDataMessageType_MarketDataMessage_MarketDataMessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarketDataMessage_MarketDataMessageType_IsValid(int value);
const MarketDataMessage_MarketDataMessageType MarketDataMessage_MarketDataMessageType_MarketDataMessageType_MIN = MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Invalid;
const MarketDataMessage_MarketDataMessageType MarketDataMessage_MarketDataMessageType_MarketDataMessageType_MAX = MarketDataMessage_MarketDataMessageType_MarketDataMessageType_TPrice_R02;
const int MarketDataMessage_MarketDataMessageType_MarketDataMessageType_ARRAYSIZE = MarketDataMessage_MarketDataMessageType_MarketDataMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarketDataMessage_MarketDataMessageType_descriptor();
inline const ::std::string& MarketDataMessage_MarketDataMessageType_Name(MarketDataMessage_MarketDataMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarketDataMessage_MarketDataMessageType_descriptor(), value);
}
inline bool MarketDataMessage_MarketDataMessageType_Parse(
    const ::std::string& name, MarketDataMessage_MarketDataMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarketDataMessage_MarketDataMessageType>(
    MarketDataMessage_MarketDataMessageType_descriptor(), name, value);
}
enum MarketDataMessage_CalculatedFlag {
  MarketDataMessage_CalculatedFlag_Normal = 0,
  MarketDataMessage_CalculatedFlag_PreMarket = 1,
  MarketDataMessage_CalculatedFlag_MarketDataMessage_CalculatedFlag_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarketDataMessage_CalculatedFlag_MarketDataMessage_CalculatedFlag_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarketDataMessage_CalculatedFlag_IsValid(int value);
const MarketDataMessage_CalculatedFlag MarketDataMessage_CalculatedFlag_CalculatedFlag_MIN = MarketDataMessage_CalculatedFlag_Normal;
const MarketDataMessage_CalculatedFlag MarketDataMessage_CalculatedFlag_CalculatedFlag_MAX = MarketDataMessage_CalculatedFlag_PreMarket;
const int MarketDataMessage_CalculatedFlag_CalculatedFlag_ARRAYSIZE = MarketDataMessage_CalculatedFlag_CalculatedFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarketDataMessage_CalculatedFlag_descriptor();
inline const ::std::string& MarketDataMessage_CalculatedFlag_Name(MarketDataMessage_CalculatedFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarketDataMessage_CalculatedFlag_descriptor(), value);
}
inline bool MarketDataMessage_CalculatedFlag_Parse(
    const ::std::string& name, MarketDataMessage_CalculatedFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarketDataMessage_CalculatedFlag>(
    MarketDataMessage_CalculatedFlag_descriptor(), name, value);
}
// ===================================================================

class MarketDataMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage) */ {
 public:
  MarketDataMessage();
  virtual ~MarketDataMessage();

  MarketDataMessage(const MarketDataMessage& from);

  inline MarketDataMessage& operator=(const MarketDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage(MarketDataMessage&& from) noexcept
    : MarketDataMessage() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage& operator=(MarketDataMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage& default_instance();

  enum MessageCase {
    kMBP = 1,
    kMBO = 2,
    kTRADE = 3,
    kIMPLIED = 9,
    kTPrice = 10,
    kR02 = 11,
    MESSAGE_NOT_SET = 0,
  };

  static inline const MarketDataMessage* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage*>(
               &_MarketDataMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MarketDataMessage* other);
  friend void swap(MarketDataMessage& a, MarketDataMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage& from);
  void MergeFrom(const MarketDataMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MarketDataMessage_MarketDataMessageType MarketDataMessageType;
  static const MarketDataMessageType MarketDataMessageType_Invalid =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Invalid;
  static const MarketDataMessageType MarketDataMessageType_Snapshot =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Snapshot;
  static const MarketDataMessageType MarketDataMessageType_Add =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Add;
  static const MarketDataMessageType MarketDataMessageType_Delete =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Delete;
  static const MarketDataMessageType MarketDataMessageType_ModifyWithPrice =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_ModifyWithPrice;
  static const MarketDataMessageType MarketDataMessageType_ModifyWithQty =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_ModifyWithQty;
  static const MarketDataMessageType MarketDataMessageType_Trade =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Trade;
  static const MarketDataMessageType MarketDataMessageType_PacketEnd =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_PacketEnd;
  static const MarketDataMessageType MarketDataMessageType_Implied =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_Implied;
  static const MarketDataMessageType MarketDataMessageType_TPrice =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_TPrice;
  static const MarketDataMessageType MarketDataMessageType_TPrice_R02 =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_TPrice_R02;
  static inline bool MarketDataMessageType_IsValid(int value) {
    return MarketDataMessage_MarketDataMessageType_IsValid(value);
  }
  static const MarketDataMessageType MarketDataMessageType_MIN =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_MIN;
  static const MarketDataMessageType MarketDataMessageType_MAX =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_MAX;
  static const int MarketDataMessageType_ARRAYSIZE =
    MarketDataMessage_MarketDataMessageType_MarketDataMessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MarketDataMessageType_descriptor() {
    return MarketDataMessage_MarketDataMessageType_descriptor();
  }
  static inline const ::std::string& MarketDataMessageType_Name(MarketDataMessageType value) {
    return MarketDataMessage_MarketDataMessageType_Name(value);
  }
  static inline bool MarketDataMessageType_Parse(const ::std::string& name,
      MarketDataMessageType* value) {
    return MarketDataMessage_MarketDataMessageType_Parse(name, value);
  }

  typedef MarketDataMessage_CalculatedFlag CalculatedFlag;
  static const CalculatedFlag Normal =
    MarketDataMessage_CalculatedFlag_Normal;
  static const CalculatedFlag PreMarket =
    MarketDataMessage_CalculatedFlag_PreMarket;
  static inline bool CalculatedFlag_IsValid(int value) {
    return MarketDataMessage_CalculatedFlag_IsValid(value);
  }
  static const CalculatedFlag CalculatedFlag_MIN =
    MarketDataMessage_CalculatedFlag_CalculatedFlag_MIN;
  static const CalculatedFlag CalculatedFlag_MAX =
    MarketDataMessage_CalculatedFlag_CalculatedFlag_MAX;
  static const int CalculatedFlag_ARRAYSIZE =
    MarketDataMessage_CalculatedFlag_CalculatedFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CalculatedFlag_descriptor() {
    return MarketDataMessage_CalculatedFlag_descriptor();
  }
  static inline const ::std::string& CalculatedFlag_Name(CalculatedFlag value) {
    return MarketDataMessage_CalculatedFlag_Name(value);
  }
  static inline bool CalculatedFlag_Parse(const ::std::string& name,
      CalculatedFlag* value) {
    return MarketDataMessage_CalculatedFlag_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string Pid = 5;
  void clear_pid();
  static const int kPidFieldNumber = 5;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // int64 ProviderTime = 6;
  void clear_providertime();
  static const int kProviderTimeFieldNumber = 6;
  ::google::protobuf::int64 providertime() const;
  void set_providertime(::google::protobuf::int64 value);

  // int64 ExchangeTime = 7;
  void clear_exchangetime();
  static const int kExchangeTimeFieldNumber = 7;
  ::google::protobuf::int64 exchangetime() const;
  void set_exchangetime(::google::protobuf::int64 value);

  // int64 SequenceNumber = 8;
  void clear_sequencenumber();
  static const int kSequenceNumberFieldNumber = 8;
  ::google::protobuf::int64 sequencenumber() const;
  void set_sequencenumber(::google::protobuf::int64 value);

  // .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 4;
  ::protobuf::MarketDataMessage_MarketDataMessageType messagetype() const;
  void set_messagetype(::protobuf::MarketDataMessage_MarketDataMessageType value);

  // .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
  void clear_calculatedflag();
  static const int kCalculatedflagFieldNumber = 12;
  ::protobuf::MarketDataMessage_CalculatedFlag calculatedflag() const;
  void set_calculatedflag(::protobuf::MarketDataMessage_CalculatedFlag value);

  // .protobuf.MarketDataMessage_MBP MBP = 1;
  bool has_mbp() const;
  void clear_mbp();
  static const int kMBPFieldNumber = 1;
  const ::protobuf::MarketDataMessage_MBP& mbp() const;
  ::protobuf::MarketDataMessage_MBP* mutable_mbp();
  ::protobuf::MarketDataMessage_MBP* release_mbp();
  void set_allocated_mbp(::protobuf::MarketDataMessage_MBP* mbp);

  // .protobuf.MarketDataMessage_MBO MBO = 2;
  bool has_mbo() const;
  void clear_mbo();
  static const int kMBOFieldNumber = 2;
  const ::protobuf::MarketDataMessage_MBO& mbo() const;
  ::protobuf::MarketDataMessage_MBO* mutable_mbo();
  ::protobuf::MarketDataMessage_MBO* release_mbo();
  void set_allocated_mbo(::protobuf::MarketDataMessage_MBO* mbo);

  // .protobuf.MarketDataMessage_TRADE TRADE = 3;
  bool has_trade() const;
  void clear_trade();
  static const int kTRADEFieldNumber = 3;
  const ::protobuf::MarketDataMessage_TRADE& trade() const;
  ::protobuf::MarketDataMessage_TRADE* mutable_trade();
  ::protobuf::MarketDataMessage_TRADE* release_trade();
  void set_allocated_trade(::protobuf::MarketDataMessage_TRADE* trade);

  // .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
  bool has_implied() const;
  void clear_implied();
  static const int kIMPLIEDFieldNumber = 9;
  const ::protobuf::MarketDataMessage_IMPLIED& implied() const;
  ::protobuf::MarketDataMessage_IMPLIED* mutable_implied();
  ::protobuf::MarketDataMessage_IMPLIED* release_implied();
  void set_allocated_implied(::protobuf::MarketDataMessage_IMPLIED* implied);

  // .protobuf.MarketDataMessage_TPRICE TPrice = 10;
  bool has_tprice() const;
  void clear_tprice();
  static const int kTPriceFieldNumber = 10;
  const ::protobuf::MarketDataMessage_TPRICE& tprice() const;
  ::protobuf::MarketDataMessage_TPRICE* mutable_tprice();
  ::protobuf::MarketDataMessage_TPRICE* release_tprice();
  void set_allocated_tprice(::protobuf::MarketDataMessage_TPRICE* tprice);

  // .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
  bool has_r02() const;
  void clear_r02();
  static const int kR02FieldNumber = 11;
  const ::protobuf::MarketDataMessage_TMPR02_t& r02() const;
  ::protobuf::MarketDataMessage_TMPR02_t* mutable_r02();
  ::protobuf::MarketDataMessage_TMPR02_t* release_r02();
  void set_allocated_r02(::protobuf::MarketDataMessage_TMPR02_t* r02);

  MessageCase message_case() const;
  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage)
 private:
  void set_has_mbp();
  void set_has_mbo();
  void set_has_trade();
  void set_has_implied();
  void set_has_tprice();
  void set_has_r02();

  inline bool has_message() const;
  void clear_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::int64 providertime_;
  ::google::protobuf::int64 exchangetime_;
  ::google::protobuf::int64 sequencenumber_;
  int messagetype_;
  int calculatedflag_;
  union MessageUnion {
    MessageUnion() {}
    ::protobuf::MarketDataMessage_MBP* mbp_;
    ::protobuf::MarketDataMessage_MBO* mbo_;
    ::protobuf::MarketDataMessage_TRADE* trade_;
    ::protobuf::MarketDataMessage_IMPLIED* implied_;
    ::protobuf::MarketDataMessage_TPRICE* tprice_;
    ::protobuf::MarketDataMessage_TMPR02_t* r02_;
  } message_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarketDataMessage_MBP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage_MBP) */ {
 public:
  MarketDataMessage_MBP();
  virtual ~MarketDataMessage_MBP();

  MarketDataMessage_MBP(const MarketDataMessage_MBP& from);

  inline MarketDataMessage_MBP& operator=(const MarketDataMessage_MBP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage_MBP(MarketDataMessage_MBP&& from) noexcept
    : MarketDataMessage_MBP() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage_MBP& operator=(MarketDataMessage_MBP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage_MBP& default_instance();

  static inline const MarketDataMessage_MBP* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage_MBP*>(
               &_MarketDataMessage_MBP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MarketDataMessage_MBP* other);
  friend void swap(MarketDataMessage_MBP& a, MarketDataMessage_MBP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage_MBP* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage_MBP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage_MBP& from);
  void MergeFrom(const MarketDataMessage_MBP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage_MBP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 Bid = 2;
  int bid_size() const;
  void clear_bid();
  static const int kBidFieldNumber = 2;
  ::google::protobuf::int64 bid(int index) const;
  void set_bid(int index, ::google::protobuf::int64 value);
  void add_bid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bid();

  // repeated int64 Ask = 3;
  int ask_size() const;
  void clear_ask();
  static const int kAskFieldNumber = 3;
  ::google::protobuf::int64 ask(int index) const;
  void set_ask(int index, ::google::protobuf::int64 value);
  void add_ask(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ask();

  // repeated int64 BidQty = 4;
  int bidqty_size() const;
  void clear_bidqty();
  static const int kBidQtyFieldNumber = 4;
  ::google::protobuf::int64 bidqty(int index) const;
  void set_bidqty(int index, ::google::protobuf::int64 value);
  void add_bidqty(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bidqty() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bidqty();

  // repeated int64 AskQty = 5;
  int askqty_size() const;
  void clear_askqty();
  static const int kAskQtyFieldNumber = 5;
  ::google::protobuf::int64 askqty(int index) const;
  void set_askqty(int index, ::google::protobuf::int64 value);
  void add_askqty(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      askqty() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_askqty();

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  bool has_ispacketend() const;
  void clear_ispacketend();
  static const int kIsPacketEndFieldNumber = 6;
  const ::google::protobuf::BoolValue& ispacketend() const;
  ::google::protobuf::BoolValue* mutable_ispacketend();
  ::google::protobuf::BoolValue* release_ispacketend();
  void set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend);

  // int32 Count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage_MBP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bid_;
  mutable int _bid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ask_;
  mutable int _ask_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bidqty_;
  mutable int _bidqty_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > askqty_;
  mutable int _askqty_cached_byte_size_;
  ::google::protobuf::BoolValue* ispacketend_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarketDataMessage_MBO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage_MBO) */ {
 public:
  MarketDataMessage_MBO();
  virtual ~MarketDataMessage_MBO();

  MarketDataMessage_MBO(const MarketDataMessage_MBO& from);

  inline MarketDataMessage_MBO& operator=(const MarketDataMessage_MBO& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage_MBO(MarketDataMessage_MBO&& from) noexcept
    : MarketDataMessage_MBO() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage_MBO& operator=(MarketDataMessage_MBO&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage_MBO& default_instance();

  static inline const MarketDataMessage_MBO* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage_MBO*>(
               &_MarketDataMessage_MBO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MarketDataMessage_MBO* other);
  friend void swap(MarketDataMessage_MBO& a, MarketDataMessage_MBO& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage_MBO* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage_MBO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage_MBO& from);
  void MergeFrom(const MarketDataMessage_MBO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage_MBO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.BoolValue IsPacketEnd = 7;
  bool has_ispacketend() const;
  void clear_ispacketend();
  static const int kIsPacketEndFieldNumber = 7;
  const ::google::protobuf::BoolValue& ispacketend() const;
  ::google::protobuf::BoolValue* mutable_ispacketend();
  ::google::protobuf::BoolValue* release_ispacketend();
  void set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend);

  // int64 OrderID = 1;
  void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // int64 Price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int64 Qty = 3;
  void clear_qty();
  static const int kQtyFieldNumber = 3;
  ::google::protobuf::int64 qty() const;
  void set_qty(::google::protobuf::int64 value);

  // int32 Level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 Side = 5;
  void clear_side();
  static const int kSideFieldNumber = 5;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // int32 NumberOfOrders = 6;
  void clear_numberoforders();
  static const int kNumberOfOrdersFieldNumber = 6;
  ::google::protobuf::int32 numberoforders() const;
  void set_numberoforders(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage_MBO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::BoolValue* ispacketend_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int64 qty_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 side_;
  ::google::protobuf::int32 numberoforders_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarketDataMessage_TRADE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage_TRADE) */ {
 public:
  MarketDataMessage_TRADE();
  virtual ~MarketDataMessage_TRADE();

  MarketDataMessage_TRADE(const MarketDataMessage_TRADE& from);

  inline MarketDataMessage_TRADE& operator=(const MarketDataMessage_TRADE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage_TRADE(MarketDataMessage_TRADE&& from) noexcept
    : MarketDataMessage_TRADE() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage_TRADE& operator=(MarketDataMessage_TRADE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage_TRADE& default_instance();

  static inline const MarketDataMessage_TRADE* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage_TRADE*>(
               &_MarketDataMessage_TRADE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MarketDataMessage_TRADE* other);
  friend void swap(MarketDataMessage_TRADE& a, MarketDataMessage_TRADE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage_TRADE* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage_TRADE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage_TRADE& from);
  void MergeFrom(const MarketDataMessage_TRADE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage_TRADE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  bool has_ispacketend() const;
  void clear_ispacketend();
  static const int kIsPacketEndFieldNumber = 6;
  const ::google::protobuf::BoolValue& ispacketend() const;
  ::google::protobuf::BoolValue* mutable_ispacketend();
  ::google::protobuf::BoolValue* release_ispacketend();
  void set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend);

  // int64 OrderID = 1;
  void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  ::google::protobuf::int64 orderid() const;
  void set_orderid(::google::protobuf::int64 value);

  // int64 Price = 2;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int64 Qty = 3;
  void clear_qty();
  static const int kQtyFieldNumber = 3;
  ::google::protobuf::int64 qty() const;
  void set_qty(::google::protobuf::int64 value);

  // int64 CounterpartyOrderID = 5;
  void clear_counterpartyorderid();
  static const int kCounterpartyOrderIDFieldNumber = 5;
  ::google::protobuf::int64 counterpartyorderid() const;
  void set_counterpartyorderid(::google::protobuf::int64 value);

  // int32 Side = 4;
  void clear_side();
  static const int kSideFieldNumber = 4;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage_TRADE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::BoolValue* ispacketend_;
  ::google::protobuf::int64 orderid_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int64 qty_;
  ::google::protobuf::int64 counterpartyorderid_;
  ::google::protobuf::int32 side_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarketDataMessage_IMPLIED : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage_IMPLIED) */ {
 public:
  MarketDataMessage_IMPLIED();
  virtual ~MarketDataMessage_IMPLIED();

  MarketDataMessage_IMPLIED(const MarketDataMessage_IMPLIED& from);

  inline MarketDataMessage_IMPLIED& operator=(const MarketDataMessage_IMPLIED& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage_IMPLIED(MarketDataMessage_IMPLIED&& from) noexcept
    : MarketDataMessage_IMPLIED() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage_IMPLIED& operator=(MarketDataMessage_IMPLIED&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage_IMPLIED& default_instance();

  static inline const MarketDataMessage_IMPLIED* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage_IMPLIED*>(
               &_MarketDataMessage_IMPLIED_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MarketDataMessage_IMPLIED* other);
  friend void swap(MarketDataMessage_IMPLIED& a, MarketDataMessage_IMPLIED& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage_IMPLIED* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage_IMPLIED* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage_IMPLIED& from);
  void MergeFrom(const MarketDataMessage_IMPLIED& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage_IMPLIED* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 Bid = 2;
  int bid_size() const;
  void clear_bid();
  static const int kBidFieldNumber = 2;
  ::google::protobuf::int64 bid(int index) const;
  void set_bid(int index, ::google::protobuf::int64 value);
  void add_bid(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bid();

  // repeated int64 Ask = 3;
  int ask_size() const;
  void clear_ask();
  static const int kAskFieldNumber = 3;
  ::google::protobuf::int64 ask(int index) const;
  void set_ask(int index, ::google::protobuf::int64 value);
  void add_ask(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ask() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ask();

  // repeated int64 BidQty = 4;
  int bidqty_size() const;
  void clear_bidqty();
  static const int kBidQtyFieldNumber = 4;
  ::google::protobuf::int64 bidqty(int index) const;
  void set_bidqty(int index, ::google::protobuf::int64 value);
  void add_bidqty(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bidqty() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bidqty();

  // repeated int64 AskQty = 5;
  int askqty_size() const;
  void clear_askqty();
  static const int kAskQtyFieldNumber = 5;
  ::google::protobuf::int64 askqty(int index) const;
  void set_askqty(int index, ::google::protobuf::int64 value);
  void add_askqty(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      askqty() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_askqty();

  // .google.protobuf.BoolValue IsPacketEnd = 6;
  bool has_ispacketend() const;
  void clear_ispacketend();
  static const int kIsPacketEndFieldNumber = 6;
  const ::google::protobuf::BoolValue& ispacketend() const;
  ::google::protobuf::BoolValue* mutable_ispacketend();
  ::google::protobuf::BoolValue* release_ispacketend();
  void set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend);

  // int32 Count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage_IMPLIED)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bid_;
  mutable int _bid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ask_;
  mutable int _ask_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bidqty_;
  mutable int _bidqty_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > askqty_;
  mutable int _askqty_cached_byte_size_;
  ::google::protobuf::BoolValue* ispacketend_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarketDataMessage_TPRICE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage_TPRICE) */ {
 public:
  MarketDataMessage_TPRICE();
  virtual ~MarketDataMessage_TPRICE();

  MarketDataMessage_TPRICE(const MarketDataMessage_TPRICE& from);

  inline MarketDataMessage_TPRICE& operator=(const MarketDataMessage_TPRICE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage_TPRICE(MarketDataMessage_TPRICE&& from) noexcept
    : MarketDataMessage_TPRICE() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage_TPRICE& operator=(MarketDataMessage_TPRICE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage_TPRICE& default_instance();

  static inline const MarketDataMessage_TPRICE* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage_TPRICE*>(
               &_MarketDataMessage_TPRICE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MarketDataMessage_TPRICE* other);
  friend void swap(MarketDataMessage_TPRICE& a, MarketDataMessage_TPRICE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage_TPRICE* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage_TPRICE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage_TPRICE& from);
  void MergeFrom(const MarketDataMessage_TPRICE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage_TPRICE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.BoolValue IsPacketEnd = 4;
  bool has_ispacketend() const;
  void clear_ispacketend();
  static const int kIsPacketEndFieldNumber = 4;
  const ::google::protobuf::BoolValue& ispacketend() const;
  ::google::protobuf::BoolValue* mutable_ispacketend();
  ::google::protobuf::BoolValue* release_ispacketend();
  void set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend);

  // int64 Price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  ::google::protobuf::int64 price() const;
  void set_price(::google::protobuf::int64 value);

  // int64 BSCode = 2;
  void clear_bscode();
  static const int kBSCodeFieldNumber = 2;
  ::google::protobuf::int64 bscode() const;
  void set_bscode(::google::protobuf::int64 value);

  // int64 Type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int64 type() const;
  void set_type(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage_TPRICE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::BoolValue* ispacketend_;
  ::google::protobuf::int64 price_;
  ::google::protobuf::int64 bscode_;
  ::google::protobuf::int64 type_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TMPMsgTime_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.TMPMsgTime_t) */ {
 public:
  TMPMsgTime_t();
  virtual ~TMPMsgTime_t();

  TMPMsgTime_t(const TMPMsgTime_t& from);

  inline TMPMsgTime_t& operator=(const TMPMsgTime_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TMPMsgTime_t(TMPMsgTime_t&& from) noexcept
    : TMPMsgTime_t() {
    *this = ::std::move(from);
  }

  inline TMPMsgTime_t& operator=(TMPMsgTime_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TMPMsgTime_t& default_instance();

  static inline const TMPMsgTime_t* internal_default_instance() {
    return reinterpret_cast<const TMPMsgTime_t*>(
               &_TMPMsgTime_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TMPMsgTime_t* other);
  friend void swap(TMPMsgTime_t& a, TMPMsgTime_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TMPMsgTime_t* New() const PROTOBUF_FINAL { return New(NULL); }

  TMPMsgTime_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TMPMsgTime_t& from);
  void MergeFrom(const TMPMsgTime_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TMPMsgTime_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 epoch_s = 1;
  void clear_epoch_s();
  static const int kEpochSFieldNumber = 1;
  ::google::protobuf::int32 epoch_s() const;
  void set_epoch_s(::google::protobuf::int32 value);

  // uint32 ms = 2;
  void clear_ms();
  static const int kMsFieldNumber = 2;
  ::google::protobuf::uint32 ms() const;
  void set_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protobuf.TMPMsgTime_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 epoch_s_;
  ::google::protobuf::uint32 ms_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TMPHdr_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.TMPHdr_t) */ {
 public:
  TMPHdr_t();
  virtual ~TMPHdr_t();

  TMPHdr_t(const TMPHdr_t& from);

  inline TMPHdr_t& operator=(const TMPHdr_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TMPHdr_t(TMPHdr_t&& from) noexcept
    : TMPHdr_t() {
    *this = ::std::move(from);
  }

  inline TMPHdr_t& operator=(TMPHdr_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TMPHdr_t& default_instance();

  static inline const TMPHdr_t* internal_default_instance() {
    return reinterpret_cast<const TMPHdr_t*>(
               &_TMPHdr_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TMPHdr_t* other);
  friend void swap(TMPHdr_t& a, TMPHdr_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TMPHdr_t* New() const PROTOBUF_FINAL { return New(NULL); }

  TMPHdr_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TMPHdr_t& from);
  void MergeFrom(const TMPHdr_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TMPHdr_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protobuf.TMPMsgTime_t msg_time = 3;
  bool has_msg_time() const;
  void clear_msg_time();
  static const int kMsgTimeFieldNumber = 3;
  const ::protobuf::TMPMsgTime_t& msg_time() const;
  ::protobuf::TMPMsgTime_t* mutable_msg_time();
  ::protobuf::TMPMsgTime_t* release_msg_time();
  void set_allocated_msg_time(::protobuf::TMPMsgTime_t* msg_time);

  // uint32 msg_length = 1;
  void clear_msg_length();
  static const int kMsgLengthFieldNumber = 1;
  ::google::protobuf::uint32 msg_length() const;
  void set_msg_length(::google::protobuf::uint32 value);

  // uint32 MsgSeqNum = 2;
  void clear_msgseqnum();
  static const int kMsgSeqNumFieldNumber = 2;
  ::google::protobuf::uint32 msgseqnum() const;
  void set_msgseqnum(::google::protobuf::uint32 value);

  // uint32 MessageType = 4;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 4;
  ::google::protobuf::uint32 messagetype() const;
  void set_messagetype(::google::protobuf::uint32 value);

  // uint32 fcm_id = 5;
  void clear_fcm_id();
  static const int kFcmIdFieldNumber = 5;
  ::google::protobuf::uint32 fcm_id() const;
  void set_fcm_id(::google::protobuf::uint32 value);

  // uint32 session_id = 6;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 6;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protobuf.TMPHdr_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protobuf::TMPMsgTime_t* msg_time_;
  ::google::protobuf::uint32 msg_length_;
  ::google::protobuf::uint32 msgseqnum_;
  ::google::protobuf::uint32 messagetype_;
  ::google::protobuf::uint32 fcm_id_;
  ::google::protobuf::uint32 session_id_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarketDataMessage_TMPR02_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.MarketDataMessage_TMPR02_t) */ {
 public:
  MarketDataMessage_TMPR02_t();
  virtual ~MarketDataMessage_TMPR02_t();

  MarketDataMessage_TMPR02_t(const MarketDataMessage_TMPR02_t& from);

  inline MarketDataMessage_TMPR02_t& operator=(const MarketDataMessage_TMPR02_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketDataMessage_TMPR02_t(MarketDataMessage_TMPR02_t&& from) noexcept
    : MarketDataMessage_TMPR02_t() {
    *this = ::std::move(from);
  }

  inline MarketDataMessage_TMPR02_t& operator=(MarketDataMessage_TMPR02_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketDataMessage_TMPR02_t& default_instance();

  static inline const MarketDataMessage_TMPR02_t* internal_default_instance() {
    return reinterpret_cast<const MarketDataMessage_TMPR02_t*>(
               &_MarketDataMessage_TMPR02_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(MarketDataMessage_TMPR02_t* other);
  friend void swap(MarketDataMessage_TMPR02_t& a, MarketDataMessage_TMPR02_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketDataMessage_TMPR02_t* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketDataMessage_TMPR02_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketDataMessage_TMPR02_t& from);
  void MergeFrom(const MarketDataMessage_TMPR02_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketDataMessage_TMPR02_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string order_no = 6;
  void clear_order_no();
  static const int kOrderNoFieldNumber = 6;
  const ::std::string& order_no() const;
  void set_order_no(const ::std::string& value);
  #if LANG_CXX11
  void set_order_no(::std::string&& value);
  #endif
  void set_order_no(const char* value);
  void set_order_no(const char* value, size_t size);
  ::std::string* mutable_order_no();
  ::std::string* release_order_no();
  void set_allocated_order_no(::std::string* order_no);

  // string user_define = 8;
  void clear_user_define();
  static const int kUserDefineFieldNumber = 8;
  const ::std::string& user_define() const;
  void set_user_define(const ::std::string& value);
  #if LANG_CXX11
  void set_user_define(::std::string&& value);
  #endif
  void set_user_define(const char* value);
  void set_user_define(const char* value, size_t size);
  ::std::string* mutable_user_define();
  ::std::string* release_user_define();
  void set_allocated_user_define(::std::string* user_define);

  // string sym = 10;
  void clear_sym();
  static const int kSymFieldNumber = 10;
  const ::std::string& sym() const;
  void set_sym(const ::std::string& value);
  #if LANG_CXX11
  void set_sym(::std::string&& value);
  #endif
  void set_sym(const char* value);
  void set_sym(const char* value, size_t size);
  ::std::string* mutable_sym();
  ::std::string* release_sym();
  void set_allocated_sym(::std::string* sym);

  // .protobuf.TMPHdr_t hdr = 1;
  bool has_hdr() const;
  void clear_hdr();
  static const int kHdrFieldNumber = 1;
  const ::protobuf::TMPHdr_t& hdr() const;
  ::protobuf::TMPHdr_t* mutable_hdr();
  ::protobuf::TMPHdr_t* release_hdr();
  void set_allocated_hdr(::protobuf::TMPHdr_t* hdr);

  // .protobuf.TMPMsgTime_t org_trans_time = 31;
  bool has_org_trans_time() const;
  void clear_org_trans_time();
  static const int kOrgTransTimeFieldNumber = 31;
  const ::protobuf::TMPMsgTime_t& org_trans_time() const;
  ::protobuf::TMPMsgTime_t* mutable_org_trans_time();
  ::protobuf::TMPMsgTime_t* release_org_trans_time();
  void set_allocated_org_trans_time(::protobuf::TMPMsgTime_t* org_trans_time);

  // .protobuf.TMPMsgTime_t TransactTime = 32;
  bool has_transacttime() const;
  void clear_transacttime();
  static const int kTransactTimeFieldNumber = 32;
  const ::protobuf::TMPMsgTime_t& transacttime() const;
  ::protobuf::TMPMsgTime_t* mutable_transacttime();
  ::protobuf::TMPMsgTime_t* release_transacttime();
  void set_allocated_transacttime(::protobuf::TMPMsgTime_t* transacttime);

  // uint32 status_code = 2;
  void clear_status_code();
  static const int kStatusCodeFieldNumber = 2;
  ::google::protobuf::uint32 status_code() const;
  void set_status_code(::google::protobuf::uint32 value);

  // int32 ExecType = 3;
  void clear_exectype();
  static const int kExecTypeFieldNumber = 3;
  ::google::protobuf::int32 exectype() const;
  void set_exectype(::google::protobuf::int32 value);

  // uint32 cm_id = 4;
  void clear_cm_id();
  static const int kCmIdFieldNumber = 4;
  ::google::protobuf::uint32 cm_id() const;
  void set_cm_id(::google::protobuf::uint32 value);

  // uint32 fcm_id = 5;
  void clear_fcm_id();
  static const int kFcmIdFieldNumber = 5;
  ::google::protobuf::uint32 fcm_id() const;
  void set_fcm_id(::google::protobuf::uint32 value);

  // uint32 ord_id = 7;
  void clear_ord_id();
  static const int kOrdIdFieldNumber = 7;
  ::google::protobuf::uint32 ord_id() const;
  void set_ord_id(::google::protobuf::uint32 value);

  // uint32 symbol_type = 9;
  void clear_symbol_type();
  static const int kSymbolTypeFieldNumber = 9;
  ::google::protobuf::uint32 symbol_type() const;
  void set_symbol_type(::google::protobuf::uint32 value);

  // int32 Price = 11;
  void clear_price();
  static const int kPriceFieldNumber = 11;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // uint32 qty = 12;
  void clear_qty();
  static const int kQtyFieldNumber = 12;
  ::google::protobuf::uint32 qty() const;
  void set_qty(::google::protobuf::uint32 value);

  // uint32 investor_acno = 13;
  void clear_investor_acno();
  static const int kInvestorAcnoFieldNumber = 13;
  ::google::protobuf::uint32 investor_acno() const;
  void set_investor_acno(::google::protobuf::uint32 value);

  // int32 investor_flag = 14;
  void clear_investor_flag();
  static const int kInvestorFlagFieldNumber = 14;
  ::google::protobuf::int32 investor_flag() const;
  void set_investor_flag(::google::protobuf::int32 value);

  // uint32 Side = 15;
  void clear_side();
  static const int kSideFieldNumber = 15;
  ::google::protobuf::uint32 side() const;
  void set_side(::google::protobuf::uint32 value);

  // uint32 OrdType = 16;
  void clear_ordtype();
  static const int kOrdTypeFieldNumber = 16;
  ::google::protobuf::uint32 ordtype() const;
  void set_ordtype(::google::protobuf::uint32 value);

  // uint32 TimeInForce = 17;
  void clear_timeinforce();
  static const int kTimeInForceFieldNumber = 17;
  ::google::protobuf::uint32 timeinforce() const;
  void set_timeinforce(::google::protobuf::uint32 value);

  // int32 PositionEffect = 18;
  void clear_positioneffect();
  static const int kPositionEffectFieldNumber = 18;
  ::google::protobuf::int32 positioneffect() const;
  void set_positioneffect(::google::protobuf::int32 value);

  // int32 LastPx = 19;
  void clear_lastpx();
  static const int kLastPxFieldNumber = 19;
  ::google::protobuf::int32 lastpx() const;
  void set_lastpx(::google::protobuf::int32 value);

  // uint32 LastQty = 20;
  void clear_lastqty();
  static const int kLastQtyFieldNumber = 20;
  ::google::protobuf::uint32 lastqty() const;
  void set_lastqty(::google::protobuf::uint32 value);

  // int64 px_subtotal = 21;
  void clear_px_subtotal();
  static const int kPxSubtotalFieldNumber = 21;
  ::google::protobuf::int64 px_subtotal() const;
  void set_px_subtotal(::google::protobuf::int64 value);

  // uint32 CumQty = 22;
  void clear_cumqty();
  static const int kCumQtyFieldNumber = 22;
  ::google::protobuf::uint32 cumqty() const;
  void set_cumqty(::google::protobuf::uint32 value);

  // uint32 LeavesQty = 23;
  void clear_leavesqty();
  static const int kLeavesQtyFieldNumber = 23;
  ::google::protobuf::uint32 leavesqty() const;
  void set_leavesqty(::google::protobuf::uint32 value);

  // uint32 before_qty = 24;
  void clear_before_qty();
  static const int kBeforeQtyFieldNumber = 24;
  ::google::protobuf::uint32 before_qty() const;
  void set_before_qty(::google::protobuf::uint32 value);

  // uint32 leg_side_1 = 25;
  void clear_leg_side_1();
  static const int kLegSide1FieldNumber = 25;
  ::google::protobuf::uint32 leg_side_1() const;
  void set_leg_side_1(::google::protobuf::uint32 value);

  // uint32 leg_side_2 = 26;
  void clear_leg_side_2();
  static const int kLegSide2FieldNumber = 26;
  ::google::protobuf::uint32 leg_side_2() const;
  void set_leg_side_2(::google::protobuf::uint32 value);

  // int32 leg_px_1 = 27;
  void clear_leg_px_1();
  static const int kLegPx1FieldNumber = 27;
  ::google::protobuf::int32 leg_px_1() const;
  void set_leg_px_1(::google::protobuf::int32 value);

  // int32 leg_px_2 = 28;
  void clear_leg_px_2();
  static const int kLegPx2FieldNumber = 28;
  ::google::protobuf::int32 leg_px_2() const;
  void set_leg_px_2(::google::protobuf::int32 value);

  // uint32 leg_qty_1 = 29;
  void clear_leg_qty_1();
  static const int kLegQty1FieldNumber = 29;
  ::google::protobuf::uint32 leg_qty_1() const;
  void set_leg_qty_1(::google::protobuf::uint32 value);

  // uint32 leg_qty_2 = 30;
  void clear_leg_qty_2();
  static const int kLegQty2FieldNumber = 30;
  ::google::protobuf::uint32 leg_qty_2() const;
  void set_leg_qty_2(::google::protobuf::uint32 value);

  // uint32 target_id = 33;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 33;
  ::google::protobuf::uint32 target_id() const;
  void set_target_id(::google::protobuf::uint32 value);

  // uint32 uniq_id = 34;
  void clear_uniq_id();
  static const int kUniqIdFieldNumber = 34;
  ::google::protobuf::uint32 uniq_id() const;
  void set_uniq_id(::google::protobuf::uint32 value);

  // uint32 rpt_seq = 35;
  void clear_rpt_seq();
  static const int kRptSeqFieldNumber = 35;
  ::google::protobuf::uint32 rpt_seq() const;
  void set_rpt_seq(::google::protobuf::uint32 value);

  // uint32 protocol_type = 36;
  void clear_protocol_type();
  static const int kProtocolTypeFieldNumber = 36;
  ::google::protobuf::uint32 protocol_type() const;
  void set_protocol_type(::google::protobuf::uint32 value);

  // uint32 CheckSum = 37;
  void clear_checksum();
  static const int kCheckSumFieldNumber = 37;
  ::google::protobuf::uint32 checksum() const;
  void set_checksum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protobuf.MarketDataMessage_TMPR02_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr order_no_;
  ::google::protobuf::internal::ArenaStringPtr user_define_;
  ::google::protobuf::internal::ArenaStringPtr sym_;
  ::protobuf::TMPHdr_t* hdr_;
  ::protobuf::TMPMsgTime_t* org_trans_time_;
  ::protobuf::TMPMsgTime_t* transacttime_;
  ::google::protobuf::uint32 status_code_;
  ::google::protobuf::int32 exectype_;
  ::google::protobuf::uint32 cm_id_;
  ::google::protobuf::uint32 fcm_id_;
  ::google::protobuf::uint32 ord_id_;
  ::google::protobuf::uint32 symbol_type_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::uint32 qty_;
  ::google::protobuf::uint32 investor_acno_;
  ::google::protobuf::int32 investor_flag_;
  ::google::protobuf::uint32 side_;
  ::google::protobuf::uint32 ordtype_;
  ::google::protobuf::uint32 timeinforce_;
  ::google::protobuf::int32 positioneffect_;
  ::google::protobuf::int32 lastpx_;
  ::google::protobuf::uint32 lastqty_;
  ::google::protobuf::int64 px_subtotal_;
  ::google::protobuf::uint32 cumqty_;
  ::google::protobuf::uint32 leavesqty_;
  ::google::protobuf::uint32 before_qty_;
  ::google::protobuf::uint32 leg_side_1_;
  ::google::protobuf::uint32 leg_side_2_;
  ::google::protobuf::int32 leg_px_1_;
  ::google::protobuf::int32 leg_px_2_;
  ::google::protobuf::uint32 leg_qty_1_;
  ::google::protobuf::uint32 leg_qty_2_;
  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::uint32 uniq_id_;
  ::google::protobuf::uint32 rpt_seq_;
  ::google::protobuf::uint32 protocol_type_;
  ::google::protobuf::uint32 checksum_;
  mutable int _cached_size_;
  friend struct protobuf_MarketDataMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MarketDataMessage

// .protobuf.MarketDataMessage_MBP MBP = 1;
inline bool MarketDataMessage::has_mbp() const {
  return message_case() == kMBP;
}
inline void MarketDataMessage::set_has_mbp() {
  _oneof_case_[0] = kMBP;
}
inline void MarketDataMessage::clear_mbp() {
  if (has_mbp()) {
    delete message_.mbp_;
    clear_has_message();
  }
}
inline  const ::protobuf::MarketDataMessage_MBP& MarketDataMessage::mbp() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.MBP)
  return has_mbp()
      ? *message_.mbp_
      : ::protobuf::MarketDataMessage_MBP::default_instance();
}
inline ::protobuf::MarketDataMessage_MBP* MarketDataMessage::mutable_mbp() {
  if (!has_mbp()) {
    clear_message();
    set_has_mbp();
    message_.mbp_ = new ::protobuf::MarketDataMessage_MBP;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.MBP)
  return message_.mbp_;
}
inline ::protobuf::MarketDataMessage_MBP* MarketDataMessage::release_mbp() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.MBP)
  if (has_mbp()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_MBP* temp = message_.mbp_;
    message_.mbp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MarketDataMessage::set_allocated_mbp(::protobuf::MarketDataMessage_MBP* mbp) {
  clear_message();
  if (mbp) {
    set_has_mbp();
    message_.mbp_ = mbp;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.MBP)
}

// .protobuf.MarketDataMessage_MBO MBO = 2;
inline bool MarketDataMessage::has_mbo() const {
  return message_case() == kMBO;
}
inline void MarketDataMessage::set_has_mbo() {
  _oneof_case_[0] = kMBO;
}
inline void MarketDataMessage::clear_mbo() {
  if (has_mbo()) {
    delete message_.mbo_;
    clear_has_message();
  }
}
inline  const ::protobuf::MarketDataMessage_MBO& MarketDataMessage::mbo() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.MBO)
  return has_mbo()
      ? *message_.mbo_
      : ::protobuf::MarketDataMessage_MBO::default_instance();
}
inline ::protobuf::MarketDataMessage_MBO* MarketDataMessage::mutable_mbo() {
  if (!has_mbo()) {
    clear_message();
    set_has_mbo();
    message_.mbo_ = new ::protobuf::MarketDataMessage_MBO;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.MBO)
  return message_.mbo_;
}
inline ::protobuf::MarketDataMessage_MBO* MarketDataMessage::release_mbo() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.MBO)
  if (has_mbo()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_MBO* temp = message_.mbo_;
    message_.mbo_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MarketDataMessage::set_allocated_mbo(::protobuf::MarketDataMessage_MBO* mbo) {
  clear_message();
  if (mbo) {
    set_has_mbo();
    message_.mbo_ = mbo;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.MBO)
}

// .protobuf.MarketDataMessage_TRADE TRADE = 3;
inline bool MarketDataMessage::has_trade() const {
  return message_case() == kTRADE;
}
inline void MarketDataMessage::set_has_trade() {
  _oneof_case_[0] = kTRADE;
}
inline void MarketDataMessage::clear_trade() {
  if (has_trade()) {
    delete message_.trade_;
    clear_has_message();
  }
}
inline  const ::protobuf::MarketDataMessage_TRADE& MarketDataMessage::trade() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.TRADE)
  return has_trade()
      ? *message_.trade_
      : ::protobuf::MarketDataMessage_TRADE::default_instance();
}
inline ::protobuf::MarketDataMessage_TRADE* MarketDataMessage::mutable_trade() {
  if (!has_trade()) {
    clear_message();
    set_has_trade();
    message_.trade_ = new ::protobuf::MarketDataMessage_TRADE;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.TRADE)
  return message_.trade_;
}
inline ::protobuf::MarketDataMessage_TRADE* MarketDataMessage::release_trade() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.TRADE)
  if (has_trade()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_TRADE* temp = message_.trade_;
    message_.trade_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MarketDataMessage::set_allocated_trade(::protobuf::MarketDataMessage_TRADE* trade) {
  clear_message();
  if (trade) {
    set_has_trade();
    message_.trade_ = trade;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.TRADE)
}

// .protobuf.MarketDataMessage_IMPLIED IMPLIED = 9;
inline bool MarketDataMessage::has_implied() const {
  return message_case() == kIMPLIED;
}
inline void MarketDataMessage::set_has_implied() {
  _oneof_case_[0] = kIMPLIED;
}
inline void MarketDataMessage::clear_implied() {
  if (has_implied()) {
    delete message_.implied_;
    clear_has_message();
  }
}
inline  const ::protobuf::MarketDataMessage_IMPLIED& MarketDataMessage::implied() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.IMPLIED)
  return has_implied()
      ? *message_.implied_
      : ::protobuf::MarketDataMessage_IMPLIED::default_instance();
}
inline ::protobuf::MarketDataMessage_IMPLIED* MarketDataMessage::mutable_implied() {
  if (!has_implied()) {
    clear_message();
    set_has_implied();
    message_.implied_ = new ::protobuf::MarketDataMessage_IMPLIED;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.IMPLIED)
  return message_.implied_;
}
inline ::protobuf::MarketDataMessage_IMPLIED* MarketDataMessage::release_implied() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.IMPLIED)
  if (has_implied()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_IMPLIED* temp = message_.implied_;
    message_.implied_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MarketDataMessage::set_allocated_implied(::protobuf::MarketDataMessage_IMPLIED* implied) {
  clear_message();
  if (implied) {
    set_has_implied();
    message_.implied_ = implied;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.IMPLIED)
}

// .protobuf.MarketDataMessage_TPRICE TPrice = 10;
inline bool MarketDataMessage::has_tprice() const {
  return message_case() == kTPrice;
}
inline void MarketDataMessage::set_has_tprice() {
  _oneof_case_[0] = kTPrice;
}
inline void MarketDataMessage::clear_tprice() {
  if (has_tprice()) {
    delete message_.tprice_;
    clear_has_message();
  }
}
inline  const ::protobuf::MarketDataMessage_TPRICE& MarketDataMessage::tprice() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.TPrice)
  return has_tprice()
      ? *message_.tprice_
      : ::protobuf::MarketDataMessage_TPRICE::default_instance();
}
inline ::protobuf::MarketDataMessage_TPRICE* MarketDataMessage::mutable_tprice() {
  if (!has_tprice()) {
    clear_message();
    set_has_tprice();
    message_.tprice_ = new ::protobuf::MarketDataMessage_TPRICE;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.TPrice)
  return message_.tprice_;
}
inline ::protobuf::MarketDataMessage_TPRICE* MarketDataMessage::release_tprice() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.TPrice)
  if (has_tprice()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_TPRICE* temp = message_.tprice_;
    message_.tprice_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MarketDataMessage::set_allocated_tprice(::protobuf::MarketDataMessage_TPRICE* tprice) {
  clear_message();
  if (tprice) {
    set_has_tprice();
    message_.tprice_ = tprice;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.TPrice)
}

// .protobuf.MarketDataMessage_TMPR02_t R02 = 11;
inline bool MarketDataMessage::has_r02() const {
  return message_case() == kR02;
}
inline void MarketDataMessage::set_has_r02() {
  _oneof_case_[0] = kR02;
}
inline void MarketDataMessage::clear_r02() {
  if (has_r02()) {
    delete message_.r02_;
    clear_has_message();
  }
}
inline  const ::protobuf::MarketDataMessage_TMPR02_t& MarketDataMessage::r02() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.R02)
  return has_r02()
      ? *message_.r02_
      : ::protobuf::MarketDataMessage_TMPR02_t::default_instance();
}
inline ::protobuf::MarketDataMessage_TMPR02_t* MarketDataMessage::mutable_r02() {
  if (!has_r02()) {
    clear_message();
    set_has_r02();
    message_.r02_ = new ::protobuf::MarketDataMessage_TMPR02_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.R02)
  return message_.r02_;
}
inline ::protobuf::MarketDataMessage_TMPR02_t* MarketDataMessage::release_r02() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.R02)
  if (has_r02()) {
    clear_has_message();
    ::protobuf::MarketDataMessage_TMPR02_t* temp = message_.r02_;
    message_.r02_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MarketDataMessage::set_allocated_r02(::protobuf::MarketDataMessage_TMPR02_t* r02) {
  clear_message();
  if (r02) {
    set_has_r02();
    message_.r02_ = r02;
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.R02)
}

// .protobuf.MarketDataMessage.MarketDataMessageType MessageType = 4;
inline void MarketDataMessage::clear_messagetype() {
  messagetype_ = 0;
}
inline ::protobuf::MarketDataMessage_MarketDataMessageType MarketDataMessage::messagetype() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.MessageType)
  return static_cast< ::protobuf::MarketDataMessage_MarketDataMessageType >(messagetype_);
}
inline void MarketDataMessage::set_messagetype(::protobuf::MarketDataMessage_MarketDataMessageType value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.MessageType)
}

// string Pid = 5;
inline void MarketDataMessage::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MarketDataMessage::pid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.Pid)
  return pid_.GetNoArena();
}
inline void MarketDataMessage::set_pid(const ::std::string& value) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.Pid)
}
#if LANG_CXX11
inline void MarketDataMessage::set_pid(::std::string&& value) {
  
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage.Pid)
}
#endif
inline void MarketDataMessage::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage.Pid)
}
inline void MarketDataMessage::set_pid(const char* value, size_t size) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage.Pid)
}
inline ::std::string* MarketDataMessage::mutable_pid() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarketDataMessage::release_pid() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage.Pid)
  
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarketDataMessage::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    
  } else {
    
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage.Pid)
}

// int64 ProviderTime = 6;
inline void MarketDataMessage::clear_providertime() {
  providertime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage::providertime() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.ProviderTime)
  return providertime_;
}
inline void MarketDataMessage::set_providertime(::google::protobuf::int64 value) {
  
  providertime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.ProviderTime)
}

// int64 ExchangeTime = 7;
inline void MarketDataMessage::clear_exchangetime() {
  exchangetime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage::exchangetime() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.ExchangeTime)
  return exchangetime_;
}
inline void MarketDataMessage::set_exchangetime(::google::protobuf::int64 value) {
  
  exchangetime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.ExchangeTime)
}

// int64 SequenceNumber = 8;
inline void MarketDataMessage::clear_sequencenumber() {
  sequencenumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage::sequencenumber() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.SequenceNumber)
  return sequencenumber_;
}
inline void MarketDataMessage::set_sequencenumber(::google::protobuf::int64 value) {
  
  sequencenumber_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.SequenceNumber)
}

// .protobuf.MarketDataMessage.CalculatedFlag Calculatedflag = 12;
inline void MarketDataMessage::clear_calculatedflag() {
  calculatedflag_ = 0;
}
inline ::protobuf::MarketDataMessage_CalculatedFlag MarketDataMessage::calculatedflag() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage.Calculatedflag)
  return static_cast< ::protobuf::MarketDataMessage_CalculatedFlag >(calculatedflag_);
}
inline void MarketDataMessage::set_calculatedflag(::protobuf::MarketDataMessage_CalculatedFlag value) {
  
  calculatedflag_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage.Calculatedflag)
}

inline bool MarketDataMessage::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
inline void MarketDataMessage::clear_has_message() {
  _oneof_case_[0] = MESSAGE_NOT_SET;
}
inline MarketDataMessage::MessageCase MarketDataMessage::message_case() const {
  return MarketDataMessage::MessageCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MarketDataMessage_MBP

// int32 Count = 1;
inline void MarketDataMessage_MBP::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_MBP::count() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.Count)
  return count_;
}
inline void MarketDataMessage_MBP::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.Count)
}

// repeated int64 Bid = 2;
inline int MarketDataMessage_MBP::bid_size() const {
  return bid_.size();
}
inline void MarketDataMessage_MBP::clear_bid() {
  bid_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_MBP::bid(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.Bid)
  return bid_.Get(index);
}
inline void MarketDataMessage_MBP::set_bid(int index, ::google::protobuf::int64 value) {
  bid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.Bid)
}
inline void MarketDataMessage_MBP::add_bid(::google::protobuf::int64 value) {
  bid_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.Bid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::bid() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.Bid)
  return bid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_bid() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.Bid)
  return &bid_;
}

// repeated int64 Ask = 3;
inline int MarketDataMessage_MBP::ask_size() const {
  return ask_.size();
}
inline void MarketDataMessage_MBP::clear_ask() {
  ask_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_MBP::ask(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.Ask)
  return ask_.Get(index);
}
inline void MarketDataMessage_MBP::set_ask(int index, ::google::protobuf::int64 value) {
  ask_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.Ask)
}
inline void MarketDataMessage_MBP::add_ask(::google::protobuf::int64 value) {
  ask_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.Ask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::ask() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.Ask)
  return ask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_ask() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.Ask)
  return &ask_;
}

// repeated int64 BidQty = 4;
inline int MarketDataMessage_MBP::bidqty_size() const {
  return bidqty_.size();
}
inline void MarketDataMessage_MBP::clear_bidqty() {
  bidqty_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_MBP::bidqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.BidQty)
  return bidqty_.Get(index);
}
inline void MarketDataMessage_MBP::set_bidqty(int index, ::google::protobuf::int64 value) {
  bidqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.BidQty)
}
inline void MarketDataMessage_MBP::add_bidqty(::google::protobuf::int64 value) {
  bidqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.BidQty)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::bidqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.BidQty)
  return bidqty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_bidqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.BidQty)
  return &bidqty_;
}

// repeated int64 AskQty = 5;
inline int MarketDataMessage_MBP::askqty_size() const {
  return askqty_.size();
}
inline void MarketDataMessage_MBP::clear_askqty() {
  askqty_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_MBP::askqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.AskQty)
  return askqty_.Get(index);
}
inline void MarketDataMessage_MBP::set_askqty(int index, ::google::protobuf::int64 value) {
  askqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBP.AskQty)
}
inline void MarketDataMessage_MBP::add_askqty(::google::protobuf::int64 value) {
  askqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_MBP.AskQty)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_MBP::askqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_MBP.AskQty)
  return askqty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_MBP::mutable_askqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_MBP.AskQty)
  return &askqty_;
}

// .google.protobuf.BoolValue IsPacketEnd = 6;
inline bool MarketDataMessage_MBP::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
inline void MarketDataMessage_MBP::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
inline const ::google::protobuf::BoolValue& MarketDataMessage_MBP::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBP.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* MarketDataMessage_MBP::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_MBP.IsPacketEnd)
  return ispacketend_;
}
inline ::google::protobuf::BoolValue* MarketDataMessage_MBP::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_MBP.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
inline void MarketDataMessage_MBP::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_MBP.IsPacketEnd)
}

// -------------------------------------------------------------------

// MarketDataMessage_MBO

// int64 OrderID = 1;
inline void MarketDataMessage_MBO::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_MBO::orderid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.OrderID)
  return orderid_;
}
inline void MarketDataMessage_MBO::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.OrderID)
}

// int64 Price = 2;
inline void MarketDataMessage_MBO::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_MBO::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Price)
  return price_;
}
inline void MarketDataMessage_MBO::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Price)
}

// int64 Qty = 3;
inline void MarketDataMessage_MBO::clear_qty() {
  qty_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_MBO::qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Qty)
  return qty_;
}
inline void MarketDataMessage_MBO::set_qty(::google::protobuf::int64 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Qty)
}

// int32 Level = 4;
inline void MarketDataMessage_MBO::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_MBO::level() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Level)
  return level_;
}
inline void MarketDataMessage_MBO::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Level)
}

// int32 Side = 5;
inline void MarketDataMessage_MBO::clear_side() {
  side_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_MBO::side() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.Side)
  return side_;
}
inline void MarketDataMessage_MBO::set_side(::google::protobuf::int32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.Side)
}

// int32 NumberOfOrders = 6;
inline void MarketDataMessage_MBO::clear_numberoforders() {
  numberoforders_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_MBO::numberoforders() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.NumberOfOrders)
  return numberoforders_;
}
inline void MarketDataMessage_MBO::set_numberoforders(::google::protobuf::int32 value) {
  
  numberoforders_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_MBO.NumberOfOrders)
}

// .google.protobuf.BoolValue IsPacketEnd = 7;
inline bool MarketDataMessage_MBO::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
inline void MarketDataMessage_MBO::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
inline const ::google::protobuf::BoolValue& MarketDataMessage_MBO::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_MBO.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* MarketDataMessage_MBO::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_MBO.IsPacketEnd)
  return ispacketend_;
}
inline ::google::protobuf::BoolValue* MarketDataMessage_MBO::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_MBO.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
inline void MarketDataMessage_MBO::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_MBO.IsPacketEnd)
}

// -------------------------------------------------------------------

// MarketDataMessage_TRADE

// int64 OrderID = 1;
inline void MarketDataMessage_TRADE::clear_orderid() {
  orderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TRADE::orderid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.OrderID)
  return orderid_;
}
inline void MarketDataMessage_TRADE::set_orderid(::google::protobuf::int64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.OrderID)
}

// int64 Price = 2;
inline void MarketDataMessage_TRADE::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TRADE::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.Price)
  return price_;
}
inline void MarketDataMessage_TRADE::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.Price)
}

// int64 Qty = 3;
inline void MarketDataMessage_TRADE::clear_qty() {
  qty_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TRADE::qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.Qty)
  return qty_;
}
inline void MarketDataMessage_TRADE::set_qty(::google::protobuf::int64 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.Qty)
}

// int32 Side = 4;
inline void MarketDataMessage_TRADE::clear_side() {
  side_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TRADE::side() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.Side)
  return side_;
}
inline void MarketDataMessage_TRADE::set_side(::google::protobuf::int32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.Side)
}

// int64 CounterpartyOrderID = 5;
inline void MarketDataMessage_TRADE::clear_counterpartyorderid() {
  counterpartyorderid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TRADE::counterpartyorderid() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.CounterpartyOrderID)
  return counterpartyorderid_;
}
inline void MarketDataMessage_TRADE::set_counterpartyorderid(::google::protobuf::int64 value) {
  
  counterpartyorderid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TRADE.CounterpartyOrderID)
}

// .google.protobuf.BoolValue IsPacketEnd = 6;
inline bool MarketDataMessage_TRADE::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
inline void MarketDataMessage_TRADE::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
inline const ::google::protobuf::BoolValue& MarketDataMessage_TRADE::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* MarketDataMessage_TRADE::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
  return ispacketend_;
}
inline ::google::protobuf::BoolValue* MarketDataMessage_TRADE::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
inline void MarketDataMessage_TRADE::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TRADE.IsPacketEnd)
}

// -------------------------------------------------------------------

// MarketDataMessage_IMPLIED

// int32 Count = 1;
inline void MarketDataMessage_IMPLIED::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_IMPLIED::count() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.Count)
  return count_;
}
inline void MarketDataMessage_IMPLIED::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.Count)
}

// repeated int64 Bid = 2;
inline int MarketDataMessage_IMPLIED::bid_size() const {
  return bid_.size();
}
inline void MarketDataMessage_IMPLIED::clear_bid() {
  bid_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_IMPLIED::bid(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.Bid)
  return bid_.Get(index);
}
inline void MarketDataMessage_IMPLIED::set_bid(int index, ::google::protobuf::int64 value) {
  bid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.Bid)
}
inline void MarketDataMessage_IMPLIED::add_bid(::google::protobuf::int64 value) {
  bid_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.Bid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::bid() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.Bid)
  return bid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_bid() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.Bid)
  return &bid_;
}

// repeated int64 Ask = 3;
inline int MarketDataMessage_IMPLIED::ask_size() const {
  return ask_.size();
}
inline void MarketDataMessage_IMPLIED::clear_ask() {
  ask_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_IMPLIED::ask(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.Ask)
  return ask_.Get(index);
}
inline void MarketDataMessage_IMPLIED::set_ask(int index, ::google::protobuf::int64 value) {
  ask_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.Ask)
}
inline void MarketDataMessage_IMPLIED::add_ask(::google::protobuf::int64 value) {
  ask_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.Ask)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::ask() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.Ask)
  return ask_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_ask() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.Ask)
  return &ask_;
}

// repeated int64 BidQty = 4;
inline int MarketDataMessage_IMPLIED::bidqty_size() const {
  return bidqty_.size();
}
inline void MarketDataMessage_IMPLIED::clear_bidqty() {
  bidqty_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_IMPLIED::bidqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.BidQty)
  return bidqty_.Get(index);
}
inline void MarketDataMessage_IMPLIED::set_bidqty(int index, ::google::protobuf::int64 value) {
  bidqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.BidQty)
}
inline void MarketDataMessage_IMPLIED::add_bidqty(::google::protobuf::int64 value) {
  bidqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.BidQty)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::bidqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.BidQty)
  return bidqty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_bidqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.BidQty)
  return &bidqty_;
}

// repeated int64 AskQty = 5;
inline int MarketDataMessage_IMPLIED::askqty_size() const {
  return askqty_.size();
}
inline void MarketDataMessage_IMPLIED::clear_askqty() {
  askqty_.Clear();
}
inline ::google::protobuf::int64 MarketDataMessage_IMPLIED::askqty(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.AskQty)
  return askqty_.Get(index);
}
inline void MarketDataMessage_IMPLIED::set_askqty(int index, ::google::protobuf::int64 value) {
  askqty_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_IMPLIED.AskQty)
}
inline void MarketDataMessage_IMPLIED::add_askqty(::google::protobuf::int64 value) {
  askqty_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf.MarketDataMessage_IMPLIED.AskQty)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MarketDataMessage_IMPLIED::askqty() const {
  // @@protoc_insertion_point(field_list:protobuf.MarketDataMessage_IMPLIED.AskQty)
  return askqty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MarketDataMessage_IMPLIED::mutable_askqty() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MarketDataMessage_IMPLIED.AskQty)
  return &askqty_;
}

// .google.protobuf.BoolValue IsPacketEnd = 6;
inline bool MarketDataMessage_IMPLIED::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
inline void MarketDataMessage_IMPLIED::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
inline const ::google::protobuf::BoolValue& MarketDataMessage_IMPLIED::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* MarketDataMessage_IMPLIED::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
  return ispacketend_;
}
inline ::google::protobuf::BoolValue* MarketDataMessage_IMPLIED::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
inline void MarketDataMessage_IMPLIED::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_IMPLIED.IsPacketEnd)
}

// -------------------------------------------------------------------

// MarketDataMessage_TPRICE

// int64 Price = 1;
inline void MarketDataMessage_TPRICE::clear_price() {
  price_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TPRICE::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.Price)
  return price_;
}
inline void MarketDataMessage_TPRICE::set_price(::google::protobuf::int64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TPRICE.Price)
}

// int64 BSCode = 2;
inline void MarketDataMessage_TPRICE::clear_bscode() {
  bscode_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TPRICE::bscode() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.BSCode)
  return bscode_;
}
inline void MarketDataMessage_TPRICE::set_bscode(::google::protobuf::int64 value) {
  
  bscode_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TPRICE.BSCode)
}

// int64 Type = 3;
inline void MarketDataMessage_TPRICE::clear_type() {
  type_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TPRICE::type() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.Type)
  return type_;
}
inline void MarketDataMessage_TPRICE::set_type(::google::protobuf::int64 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TPRICE.Type)
}

// .google.protobuf.BoolValue IsPacketEnd = 4;
inline bool MarketDataMessage_TPRICE::has_ispacketend() const {
  return this != internal_default_instance() && ispacketend_ != NULL;
}
inline void MarketDataMessage_TPRICE::clear_ispacketend() {
  if (GetArenaNoVirtual() == NULL && ispacketend_ != NULL) delete ispacketend_;
  ispacketend_ = NULL;
}
inline const ::google::protobuf::BoolValue& MarketDataMessage_TPRICE::ispacketend() const {
  const ::google::protobuf::BoolValue* p = ispacketend_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::BoolValue*>(
      &::google::protobuf::_BoolValue_default_instance_);
}
inline ::google::protobuf::BoolValue* MarketDataMessage_TPRICE::mutable_ispacketend() {
  
  if (ispacketend_ == NULL) {
    ispacketend_ = new ::google::protobuf::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
  return ispacketend_;
}
inline ::google::protobuf::BoolValue* MarketDataMessage_TPRICE::release_ispacketend() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
  
  ::google::protobuf::BoolValue* temp = ispacketend_;
  ispacketend_ = NULL;
  return temp;
}
inline void MarketDataMessage_TPRICE::set_allocated_ispacketend(::google::protobuf::BoolValue* ispacketend) {
  delete ispacketend_;
  if (ispacketend != NULL && ispacketend->GetArena() != NULL) {
    ::google::protobuf::BoolValue* new_ispacketend = new ::google::protobuf::BoolValue;
    new_ispacketend->CopyFrom(*ispacketend);
    ispacketend = new_ispacketend;
  }
  ispacketend_ = ispacketend;
  if (ispacketend) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TPRICE.IsPacketEnd)
}

// -------------------------------------------------------------------

// TMPMsgTime_t

// int32 epoch_s = 1;
inline void TMPMsgTime_t::clear_epoch_s() {
  epoch_s_ = 0;
}
inline ::google::protobuf::int32 TMPMsgTime_t::epoch_s() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPMsgTime_t.epoch_s)
  return epoch_s_;
}
inline void TMPMsgTime_t::set_epoch_s(::google::protobuf::int32 value) {
  
  epoch_s_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPMsgTime_t.epoch_s)
}

// uint32 ms = 2;
inline void TMPMsgTime_t::clear_ms() {
  ms_ = 0u;
}
inline ::google::protobuf::uint32 TMPMsgTime_t::ms() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPMsgTime_t.ms)
  return ms_;
}
inline void TMPMsgTime_t::set_ms(::google::protobuf::uint32 value) {
  
  ms_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPMsgTime_t.ms)
}

// -------------------------------------------------------------------

// TMPHdr_t

// uint32 msg_length = 1;
inline void TMPHdr_t::clear_msg_length() {
  msg_length_ = 0u;
}
inline ::google::protobuf::uint32 TMPHdr_t::msg_length() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.msg_length)
  return msg_length_;
}
inline void TMPHdr_t::set_msg_length(::google::protobuf::uint32 value) {
  
  msg_length_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.msg_length)
}

// uint32 MsgSeqNum = 2;
inline void TMPHdr_t::clear_msgseqnum() {
  msgseqnum_ = 0u;
}
inline ::google::protobuf::uint32 TMPHdr_t::msgseqnum() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.MsgSeqNum)
  return msgseqnum_;
}
inline void TMPHdr_t::set_msgseqnum(::google::protobuf::uint32 value) {
  
  msgseqnum_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.MsgSeqNum)
}

// .protobuf.TMPMsgTime_t msg_time = 3;
inline bool TMPHdr_t::has_msg_time() const {
  return this != internal_default_instance() && msg_time_ != NULL;
}
inline void TMPHdr_t::clear_msg_time() {
  if (GetArenaNoVirtual() == NULL && msg_time_ != NULL) delete msg_time_;
  msg_time_ = NULL;
}
inline const ::protobuf::TMPMsgTime_t& TMPHdr_t::msg_time() const {
  const ::protobuf::TMPMsgTime_t* p = msg_time_;
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.msg_time)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPMsgTime_t*>(
      &::protobuf::_TMPMsgTime_t_default_instance_);
}
inline ::protobuf::TMPMsgTime_t* TMPHdr_t::mutable_msg_time() {
  
  if (msg_time_ == NULL) {
    msg_time_ = new ::protobuf::TMPMsgTime_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.TMPHdr_t.msg_time)
  return msg_time_;
}
inline ::protobuf::TMPMsgTime_t* TMPHdr_t::release_msg_time() {
  // @@protoc_insertion_point(field_release:protobuf.TMPHdr_t.msg_time)
  
  ::protobuf::TMPMsgTime_t* temp = msg_time_;
  msg_time_ = NULL;
  return temp;
}
inline void TMPHdr_t::set_allocated_msg_time(::protobuf::TMPMsgTime_t* msg_time) {
  delete msg_time_;
  msg_time_ = msg_time;
  if (msg_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.TMPHdr_t.msg_time)
}

// uint32 MessageType = 4;
inline void TMPHdr_t::clear_messagetype() {
  messagetype_ = 0u;
}
inline ::google::protobuf::uint32 TMPHdr_t::messagetype() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.MessageType)
  return messagetype_;
}
inline void TMPHdr_t::set_messagetype(::google::protobuf::uint32 value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.MessageType)
}

// uint32 fcm_id = 5;
inline void TMPHdr_t::clear_fcm_id() {
  fcm_id_ = 0u;
}
inline ::google::protobuf::uint32 TMPHdr_t::fcm_id() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.fcm_id)
  return fcm_id_;
}
inline void TMPHdr_t::set_fcm_id(::google::protobuf::uint32 value) {
  
  fcm_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.fcm_id)
}

// uint32 session_id = 6;
inline void TMPHdr_t::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 TMPHdr_t::session_id() const {
  // @@protoc_insertion_point(field_get:protobuf.TMPHdr_t.session_id)
  return session_id_;
}
inline void TMPHdr_t::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.TMPHdr_t.session_id)
}

// -------------------------------------------------------------------

// MarketDataMessage_TMPR02_t

// .protobuf.TMPHdr_t hdr = 1;
inline bool MarketDataMessage_TMPR02_t::has_hdr() const {
  return this != internal_default_instance() && hdr_ != NULL;
}
inline void MarketDataMessage_TMPR02_t::clear_hdr() {
  if (GetArenaNoVirtual() == NULL && hdr_ != NULL) delete hdr_;
  hdr_ = NULL;
}
inline const ::protobuf::TMPHdr_t& MarketDataMessage_TMPR02_t::hdr() const {
  const ::protobuf::TMPHdr_t* p = hdr_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.hdr)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPHdr_t*>(
      &::protobuf::_TMPHdr_t_default_instance_);
}
inline ::protobuf::TMPHdr_t* MarketDataMessage_TMPR02_t::mutable_hdr() {
  
  if (hdr_ == NULL) {
    hdr_ = new ::protobuf::TMPHdr_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.hdr)
  return hdr_;
}
inline ::protobuf::TMPHdr_t* MarketDataMessage_TMPR02_t::release_hdr() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.hdr)
  
  ::protobuf::TMPHdr_t* temp = hdr_;
  hdr_ = NULL;
  return temp;
}
inline void MarketDataMessage_TMPR02_t::set_allocated_hdr(::protobuf::TMPHdr_t* hdr) {
  delete hdr_;
  hdr_ = hdr;
  if (hdr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.hdr)
}

// uint32 status_code = 2;
inline void MarketDataMessage_TMPR02_t::clear_status_code() {
  status_code_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::status_code() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.status_code)
  return status_code_;
}
inline void MarketDataMessage_TMPR02_t::set_status_code(::google::protobuf::uint32 value) {
  
  status_code_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.status_code)
}

// int32 ExecType = 3;
inline void MarketDataMessage_TMPR02_t::clear_exectype() {
  exectype_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::exectype() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.ExecType)
  return exectype_;
}
inline void MarketDataMessage_TMPR02_t::set_exectype(::google::protobuf::int32 value) {
  
  exectype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.ExecType)
}

// uint32 cm_id = 4;
inline void MarketDataMessage_TMPR02_t::clear_cm_id() {
  cm_id_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::cm_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.cm_id)
  return cm_id_;
}
inline void MarketDataMessage_TMPR02_t::set_cm_id(::google::protobuf::uint32 value) {
  
  cm_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.cm_id)
}

// uint32 fcm_id = 5;
inline void MarketDataMessage_TMPR02_t::clear_fcm_id() {
  fcm_id_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::fcm_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.fcm_id)
  return fcm_id_;
}
inline void MarketDataMessage_TMPR02_t::set_fcm_id(::google::protobuf::uint32 value) {
  
  fcm_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.fcm_id)
}

// string order_no = 6;
inline void MarketDataMessage_TMPR02_t::clear_order_no() {
  order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MarketDataMessage_TMPR02_t::order_no() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.order_no)
  return order_no_.GetNoArena();
}
inline void MarketDataMessage_TMPR02_t::set_order_no(const ::std::string& value) {
  
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
#if LANG_CXX11
inline void MarketDataMessage_TMPR02_t::set_order_no(::std::string&& value) {
  
  order_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
#endif
inline void MarketDataMessage_TMPR02_t::set_order_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
inline void MarketDataMessage_TMPR02_t::set_order_no(const char* value, size_t size) {
  
  order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage_TMPR02_t.order_no)
}
inline ::std::string* MarketDataMessage_TMPR02_t::mutable_order_no() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.order_no)
  return order_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarketDataMessage_TMPR02_t::release_order_no() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.order_no)
  
  return order_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarketDataMessage_TMPR02_t::set_allocated_order_no(::std::string* order_no) {
  if (order_no != NULL) {
    
  } else {
    
  }
  order_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_no);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.order_no)
}

// uint32 ord_id = 7;
inline void MarketDataMessage_TMPR02_t::clear_ord_id() {
  ord_id_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::ord_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.ord_id)
  return ord_id_;
}
inline void MarketDataMessage_TMPR02_t::set_ord_id(::google::protobuf::uint32 value) {
  
  ord_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.ord_id)
}

// string user_define = 8;
inline void MarketDataMessage_TMPR02_t::clear_user_define() {
  user_define_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MarketDataMessage_TMPR02_t::user_define() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.user_define)
  return user_define_.GetNoArena();
}
inline void MarketDataMessage_TMPR02_t::set_user_define(const ::std::string& value) {
  
  user_define_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
#if LANG_CXX11
inline void MarketDataMessage_TMPR02_t::set_user_define(::std::string&& value) {
  
  user_define_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
#endif
inline void MarketDataMessage_TMPR02_t::set_user_define(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_define_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
inline void MarketDataMessage_TMPR02_t::set_user_define(const char* value, size_t size) {
  
  user_define_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage_TMPR02_t.user_define)
}
inline ::std::string* MarketDataMessage_TMPR02_t::mutable_user_define() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.user_define)
  return user_define_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarketDataMessage_TMPR02_t::release_user_define() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.user_define)
  
  return user_define_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarketDataMessage_TMPR02_t::set_allocated_user_define(::std::string* user_define) {
  if (user_define != NULL) {
    
  } else {
    
  }
  user_define_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_define);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.user_define)
}

// uint32 symbol_type = 9;
inline void MarketDataMessage_TMPR02_t::clear_symbol_type() {
  symbol_type_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::symbol_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.symbol_type)
  return symbol_type_;
}
inline void MarketDataMessage_TMPR02_t::set_symbol_type(::google::protobuf::uint32 value) {
  
  symbol_type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.symbol_type)
}

// string sym = 10;
inline void MarketDataMessage_TMPR02_t::clear_sym() {
  sym_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MarketDataMessage_TMPR02_t::sym() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.sym)
  return sym_.GetNoArena();
}
inline void MarketDataMessage_TMPR02_t::set_sym(const ::std::string& value) {
  
  sym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.sym)
}
#if LANG_CXX11
inline void MarketDataMessage_TMPR02_t::set_sym(::std::string&& value) {
  
  sym_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.MarketDataMessage_TMPR02_t.sym)
}
#endif
inline void MarketDataMessage_TMPR02_t::set_sym(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.MarketDataMessage_TMPR02_t.sym)
}
inline void MarketDataMessage_TMPR02_t::set_sym(const char* value, size_t size) {
  
  sym_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.MarketDataMessage_TMPR02_t.sym)
}
inline ::std::string* MarketDataMessage_TMPR02_t::mutable_sym() {
  
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.sym)
  return sym_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarketDataMessage_TMPR02_t::release_sym() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.sym)
  
  return sym_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarketDataMessage_TMPR02_t::set_allocated_sym(::std::string* sym) {
  if (sym != NULL) {
    
  } else {
    
  }
  sym_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sym);
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.sym)
}

// int32 Price = 11;
inline void MarketDataMessage_TMPR02_t::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::price() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.Price)
  return price_;
}
inline void MarketDataMessage_TMPR02_t::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.Price)
}

// uint32 qty = 12;
inline void MarketDataMessage_TMPR02_t::clear_qty() {
  qty_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.qty)
  return qty_;
}
inline void MarketDataMessage_TMPR02_t::set_qty(::google::protobuf::uint32 value) {
  
  qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.qty)
}

// uint32 investor_acno = 13;
inline void MarketDataMessage_TMPR02_t::clear_investor_acno() {
  investor_acno_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::investor_acno() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.investor_acno)
  return investor_acno_;
}
inline void MarketDataMessage_TMPR02_t::set_investor_acno(::google::protobuf::uint32 value) {
  
  investor_acno_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.investor_acno)
}

// int32 investor_flag = 14;
inline void MarketDataMessage_TMPR02_t::clear_investor_flag() {
  investor_flag_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::investor_flag() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.investor_flag)
  return investor_flag_;
}
inline void MarketDataMessage_TMPR02_t::set_investor_flag(::google::protobuf::int32 value) {
  
  investor_flag_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.investor_flag)
}

// uint32 Side = 15;
inline void MarketDataMessage_TMPR02_t::clear_side() {
  side_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::side() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.Side)
  return side_;
}
inline void MarketDataMessage_TMPR02_t::set_side(::google::protobuf::uint32 value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.Side)
}

// uint32 OrdType = 16;
inline void MarketDataMessage_TMPR02_t::clear_ordtype() {
  ordtype_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::ordtype() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.OrdType)
  return ordtype_;
}
inline void MarketDataMessage_TMPR02_t::set_ordtype(::google::protobuf::uint32 value) {
  
  ordtype_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.OrdType)
}

// uint32 TimeInForce = 17;
inline void MarketDataMessage_TMPR02_t::clear_timeinforce() {
  timeinforce_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::timeinforce() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.TimeInForce)
  return timeinforce_;
}
inline void MarketDataMessage_TMPR02_t::set_timeinforce(::google::protobuf::uint32 value) {
  
  timeinforce_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.TimeInForce)
}

// int32 PositionEffect = 18;
inline void MarketDataMessage_TMPR02_t::clear_positioneffect() {
  positioneffect_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::positioneffect() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.PositionEffect)
  return positioneffect_;
}
inline void MarketDataMessage_TMPR02_t::set_positioneffect(::google::protobuf::int32 value) {
  
  positioneffect_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.PositionEffect)
}

// int32 LastPx = 19;
inline void MarketDataMessage_TMPR02_t::clear_lastpx() {
  lastpx_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::lastpx() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.LastPx)
  return lastpx_;
}
inline void MarketDataMessage_TMPR02_t::set_lastpx(::google::protobuf::int32 value) {
  
  lastpx_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.LastPx)
}

// uint32 LastQty = 20;
inline void MarketDataMessage_TMPR02_t::clear_lastqty() {
  lastqty_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::lastqty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.LastQty)
  return lastqty_;
}
inline void MarketDataMessage_TMPR02_t::set_lastqty(::google::protobuf::uint32 value) {
  
  lastqty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.LastQty)
}

// int64 px_subtotal = 21;
inline void MarketDataMessage_TMPR02_t::clear_px_subtotal() {
  px_subtotal_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MarketDataMessage_TMPR02_t::px_subtotal() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.px_subtotal)
  return px_subtotal_;
}
inline void MarketDataMessage_TMPR02_t::set_px_subtotal(::google::protobuf::int64 value) {
  
  px_subtotal_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.px_subtotal)
}

// uint32 CumQty = 22;
inline void MarketDataMessage_TMPR02_t::clear_cumqty() {
  cumqty_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::cumqty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.CumQty)
  return cumqty_;
}
inline void MarketDataMessage_TMPR02_t::set_cumqty(::google::protobuf::uint32 value) {
  
  cumqty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.CumQty)
}

// uint32 LeavesQty = 23;
inline void MarketDataMessage_TMPR02_t::clear_leavesqty() {
  leavesqty_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leavesqty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.LeavesQty)
  return leavesqty_;
}
inline void MarketDataMessage_TMPR02_t::set_leavesqty(::google::protobuf::uint32 value) {
  
  leavesqty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.LeavesQty)
}

// uint32 before_qty = 24;
inline void MarketDataMessage_TMPR02_t::clear_before_qty() {
  before_qty_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::before_qty() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.before_qty)
  return before_qty_;
}
inline void MarketDataMessage_TMPR02_t::set_before_qty(::google::protobuf::uint32 value) {
  
  before_qty_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.before_qty)
}

// uint32 leg_side_1 = 25;
inline void MarketDataMessage_TMPR02_t::clear_leg_side_1() {
  leg_side_1_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_side_1() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_side_1)
  return leg_side_1_;
}
inline void MarketDataMessage_TMPR02_t::set_leg_side_1(::google::protobuf::uint32 value) {
  
  leg_side_1_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_side_1)
}

// uint32 leg_side_2 = 26;
inline void MarketDataMessage_TMPR02_t::clear_leg_side_2() {
  leg_side_2_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_side_2() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_side_2)
  return leg_side_2_;
}
inline void MarketDataMessage_TMPR02_t::set_leg_side_2(::google::protobuf::uint32 value) {
  
  leg_side_2_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_side_2)
}

// int32 leg_px_1 = 27;
inline void MarketDataMessage_TMPR02_t::clear_leg_px_1() {
  leg_px_1_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::leg_px_1() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_px_1)
  return leg_px_1_;
}
inline void MarketDataMessage_TMPR02_t::set_leg_px_1(::google::protobuf::int32 value) {
  
  leg_px_1_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_px_1)
}

// int32 leg_px_2 = 28;
inline void MarketDataMessage_TMPR02_t::clear_leg_px_2() {
  leg_px_2_ = 0;
}
inline ::google::protobuf::int32 MarketDataMessage_TMPR02_t::leg_px_2() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_px_2)
  return leg_px_2_;
}
inline void MarketDataMessage_TMPR02_t::set_leg_px_2(::google::protobuf::int32 value) {
  
  leg_px_2_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_px_2)
}

// uint32 leg_qty_1 = 29;
inline void MarketDataMessage_TMPR02_t::clear_leg_qty_1() {
  leg_qty_1_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_qty_1() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_qty_1)
  return leg_qty_1_;
}
inline void MarketDataMessage_TMPR02_t::set_leg_qty_1(::google::protobuf::uint32 value) {
  
  leg_qty_1_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_qty_1)
}

// uint32 leg_qty_2 = 30;
inline void MarketDataMessage_TMPR02_t::clear_leg_qty_2() {
  leg_qty_2_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::leg_qty_2() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.leg_qty_2)
  return leg_qty_2_;
}
inline void MarketDataMessage_TMPR02_t::set_leg_qty_2(::google::protobuf::uint32 value) {
  
  leg_qty_2_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.leg_qty_2)
}

// .protobuf.TMPMsgTime_t org_trans_time = 31;
inline bool MarketDataMessage_TMPR02_t::has_org_trans_time() const {
  return this != internal_default_instance() && org_trans_time_ != NULL;
}
inline void MarketDataMessage_TMPR02_t::clear_org_trans_time() {
  if (GetArenaNoVirtual() == NULL && org_trans_time_ != NULL) delete org_trans_time_;
  org_trans_time_ = NULL;
}
inline const ::protobuf::TMPMsgTime_t& MarketDataMessage_TMPR02_t::org_trans_time() const {
  const ::protobuf::TMPMsgTime_t* p = org_trans_time_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPMsgTime_t*>(
      &::protobuf::_TMPMsgTime_t_default_instance_);
}
inline ::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::mutable_org_trans_time() {
  
  if (org_trans_time_ == NULL) {
    org_trans_time_ = new ::protobuf::TMPMsgTime_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
  return org_trans_time_;
}
inline ::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::release_org_trans_time() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
  
  ::protobuf::TMPMsgTime_t* temp = org_trans_time_;
  org_trans_time_ = NULL;
  return temp;
}
inline void MarketDataMessage_TMPR02_t::set_allocated_org_trans_time(::protobuf::TMPMsgTime_t* org_trans_time) {
  delete org_trans_time_;
  org_trans_time_ = org_trans_time;
  if (org_trans_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.org_trans_time)
}

// .protobuf.TMPMsgTime_t TransactTime = 32;
inline bool MarketDataMessage_TMPR02_t::has_transacttime() const {
  return this != internal_default_instance() && transacttime_ != NULL;
}
inline void MarketDataMessage_TMPR02_t::clear_transacttime() {
  if (GetArenaNoVirtual() == NULL && transacttime_ != NULL) delete transacttime_;
  transacttime_ = NULL;
}
inline const ::protobuf::TMPMsgTime_t& MarketDataMessage_TMPR02_t::transacttime() const {
  const ::protobuf::TMPMsgTime_t* p = transacttime_;
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
  return p != NULL ? *p : *reinterpret_cast<const ::protobuf::TMPMsgTime_t*>(
      &::protobuf::_TMPMsgTime_t_default_instance_);
}
inline ::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::mutable_transacttime() {
  
  if (transacttime_ == NULL) {
    transacttime_ = new ::protobuf::TMPMsgTime_t;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
  return transacttime_;
}
inline ::protobuf::TMPMsgTime_t* MarketDataMessage_TMPR02_t::release_transacttime() {
  // @@protoc_insertion_point(field_release:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
  
  ::protobuf::TMPMsgTime_t* temp = transacttime_;
  transacttime_ = NULL;
  return temp;
}
inline void MarketDataMessage_TMPR02_t::set_allocated_transacttime(::protobuf::TMPMsgTime_t* transacttime) {
  delete transacttime_;
  transacttime_ = transacttime;
  if (transacttime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.MarketDataMessage_TMPR02_t.TransactTime)
}

// uint32 target_id = 33;
inline void MarketDataMessage_TMPR02_t::clear_target_id() {
  target_id_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::target_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.target_id)
  return target_id_;
}
inline void MarketDataMessage_TMPR02_t::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.target_id)
}

// uint32 uniq_id = 34;
inline void MarketDataMessage_TMPR02_t::clear_uniq_id() {
  uniq_id_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::uniq_id() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.uniq_id)
  return uniq_id_;
}
inline void MarketDataMessage_TMPR02_t::set_uniq_id(::google::protobuf::uint32 value) {
  
  uniq_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.uniq_id)
}

// uint32 rpt_seq = 35;
inline void MarketDataMessage_TMPR02_t::clear_rpt_seq() {
  rpt_seq_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::rpt_seq() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.rpt_seq)
  return rpt_seq_;
}
inline void MarketDataMessage_TMPR02_t::set_rpt_seq(::google::protobuf::uint32 value) {
  
  rpt_seq_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.rpt_seq)
}

// uint32 protocol_type = 36;
inline void MarketDataMessage_TMPR02_t::clear_protocol_type() {
  protocol_type_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::protocol_type() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.protocol_type)
  return protocol_type_;
}
inline void MarketDataMessage_TMPR02_t::set_protocol_type(::google::protobuf::uint32 value) {
  
  protocol_type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.protocol_type)
}

// uint32 CheckSum = 37;
inline void MarketDataMessage_TMPR02_t::clear_checksum() {
  checksum_ = 0u;
}
inline ::google::protobuf::uint32 MarketDataMessage_TMPR02_t::checksum() const {
  // @@protoc_insertion_point(field_get:protobuf.MarketDataMessage_TMPR02_t.CheckSum)
  return checksum_;
}
inline void MarketDataMessage_TMPR02_t::set_checksum(::google::protobuf::uint32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:protobuf.MarketDataMessage_TMPR02_t.CheckSum)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::protobuf::MarketDataMessage_MarketDataMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::MarketDataMessage_MarketDataMessageType>() {
  return ::protobuf::MarketDataMessage_MarketDataMessageType_descriptor();
}
template <> struct is_proto_enum< ::protobuf::MarketDataMessage_CalculatedFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf::MarketDataMessage_CalculatedFlag>() {
  return ::protobuf::MarketDataMessage_CalculatedFlag_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MarketDataMessage_2eproto__INCLUDED