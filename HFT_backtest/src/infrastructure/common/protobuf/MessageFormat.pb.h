// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageFormat.proto

#ifndef PROTOBUF_MessageFormat_2eproto__INCLUDED
#define PROTOBUF_MessageFormat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace MessageFormat {
class GenericMessage;
class GenericMessageDefaultTypeInternal;
extern GenericMessageDefaultTypeInternal _GenericMessage_default_instance_;
class MatchStruct;
class MatchStructDefaultTypeInternal;
extern MatchStructDefaultTypeInternal _MatchStruct_default_instance_;
class MsgDataStruct;
class MsgDataStructDefaultTypeInternal;
extern MsgDataStructDefaultTypeInternal _MsgDataStruct_default_instance_;
class MsgDataStruct_DoubleMapEntry;
class MsgDataStruct_DoubleMapEntryDefaultTypeInternal;
extern MsgDataStruct_DoubleMapEntryDefaultTypeInternal _MsgDataStruct_DoubleMapEntry_default_instance_;
class MsgDataStruct_Int64MapEntry;
class MsgDataStruct_Int64MapEntryDefaultTypeInternal;
extern MsgDataStruct_Int64MapEntryDefaultTypeInternal _MsgDataStruct_Int64MapEntry_default_instance_;
class MsgDataStruct_StringMapEntry;
class MsgDataStruct_StringMapEntryDefaultTypeInternal;
extern MsgDataStruct_StringMapEntryDefaultTypeInternal _MsgDataStruct_StringMapEntry_default_instance_;
class OrderStruct;
class OrderStructDefaultTypeInternal;
extern OrderStructDefaultTypeInternal _OrderStruct_default_instance_;
class ReportStruct;
class ReportStructDefaultTypeInternal;
extern ReportStructDefaultTypeInternal _ReportStruct_default_instance_;
}  // namespace MessageFormat

namespace MessageFormat {

namespace protobuf_MessageFormat_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MessageFormat_2eproto

enum ENUM_ActionType {
  Broadcast = 0,
  Request = 1,
  ENUM_ActionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ENUM_ActionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ENUM_ActionType_IsValid(int value);
const ENUM_ActionType ENUM_ActionType_MIN = Broadcast;
const ENUM_ActionType ENUM_ActionType_MAX = Request;
const int ENUM_ActionType_ARRAYSIZE = ENUM_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENUM_ActionType_descriptor();
inline const ::std::string& ENUM_ActionType_Name(ENUM_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENUM_ActionType_descriptor(), value);
}
inline bool ENUM_ActionType_Parse(
    const ::std::string& name, ENUM_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENUM_ActionType>(
    ENUM_ActionType_descriptor(), name, value);
}
// ===================================================================

class GenericMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageFormat.GenericMessage) */ {
 public:
  GenericMessage();
  virtual ~GenericMessage();

  GenericMessage(const GenericMessage& from);

  inline GenericMessage& operator=(const GenericMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenericMessage(GenericMessage&& from) noexcept
    : GenericMessage() {
    *this = ::std::move(from);
  }

  inline GenericMessage& operator=(GenericMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericMessage& default_instance();

  enum MessageCase {
    kMsgData = 2,
    kOrderData = 3,
    kReportData = 4,
    kMatchData = 5,
    MESSAGE_NOT_SET = 0,
  };

  static inline const GenericMessage* internal_default_instance() {
    return reinterpret_cast<const GenericMessage*>(
               &_GenericMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GenericMessage* other);
  friend void swap(GenericMessage& a, GenericMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenericMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  GenericMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenericMessage& from);
  void MergeFrom(const GenericMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenericMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .MessageFormat.ENUM_ActionType ActionType = 1;
  void clear_actiontype();
  static const int kActionTypeFieldNumber = 1;
  ::MessageFormat::ENUM_ActionType actiontype() const;
  void set_actiontype(::MessageFormat::ENUM_ActionType value);

  // .MessageFormat.MsgDataStruct MsgData = 2;
  bool has_msgdata() const;
  void clear_msgdata();
  static const int kMsgDataFieldNumber = 2;
  const ::MessageFormat::MsgDataStruct& msgdata() const;
  ::MessageFormat::MsgDataStruct* mutable_msgdata();
  ::MessageFormat::MsgDataStruct* release_msgdata();
  void set_allocated_msgdata(::MessageFormat::MsgDataStruct* msgdata);

  // .MessageFormat.OrderStruct OrderData = 3;
  bool has_orderdata() const;
  void clear_orderdata();
  static const int kOrderDataFieldNumber = 3;
  const ::MessageFormat::OrderStruct& orderdata() const;
  ::MessageFormat::OrderStruct* mutable_orderdata();
  ::MessageFormat::OrderStruct* release_orderdata();
  void set_allocated_orderdata(::MessageFormat::OrderStruct* orderdata);

  // .MessageFormat.ReportStruct ReportData = 4;
  bool has_reportdata() const;
  void clear_reportdata();
  static const int kReportDataFieldNumber = 4;
  const ::MessageFormat::ReportStruct& reportdata() const;
  ::MessageFormat::ReportStruct* mutable_reportdata();
  ::MessageFormat::ReportStruct* release_reportdata();
  void set_allocated_reportdata(::MessageFormat::ReportStruct* reportdata);

  // .MessageFormat.MatchStruct MatchData = 5;
  bool has_matchdata() const;
  void clear_matchdata();
  static const int kMatchDataFieldNumber = 5;
  const ::MessageFormat::MatchStruct& matchdata() const;
  ::MessageFormat::MatchStruct* mutable_matchdata();
  ::MessageFormat::MatchStruct* release_matchdata();
  void set_allocated_matchdata(::MessageFormat::MatchStruct* matchdata);

  MessageCase message_case() const;
  // @@protoc_insertion_point(class_scope:MessageFormat.GenericMessage)
 private:
  void set_has_msgdata();
  void set_has_orderdata();
  void set_has_reportdata();
  void set_has_matchdata();

  inline bool has_message() const;
  void clear_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int actiontype_;
  union MessageUnion {
    MessageUnion() {}
    ::MessageFormat::MsgDataStruct* msgdata_;
    ::MessageFormat::OrderStruct* orderdata_;
    ::MessageFormat::ReportStruct* reportdata_;
    ::MessageFormat::MatchStruct* matchdata_;
  } message_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_MessageFormat_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MsgDataStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageFormat.MsgDataStruct) */ {
 public:
  MsgDataStruct();
  virtual ~MsgDataStruct();

  MsgDataStruct(const MsgDataStruct& from);

  inline MsgDataStruct& operator=(const MsgDataStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDataStruct(MsgDataStruct&& from) noexcept
    : MsgDataStruct() {
    *this = ::std::move(from);
  }

  inline MsgDataStruct& operator=(MsgDataStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDataStruct& default_instance();

  static inline const MsgDataStruct* internal_default_instance() {
    return reinterpret_cast<const MsgDataStruct*>(
               &_MsgDataStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MsgDataStruct* other);
  friend void swap(MsgDataStruct& a, MsgDataStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDataStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgDataStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgDataStruct& from);
  void MergeFrom(const MsgDataStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgDataStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> StringMap = 2;
  int stringmap_size() const;
  void clear_stringmap();
  static const int kStringMapFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      stringmap() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_stringmap();

  // map<string, int64> Int64Map = 3;
  int int64map_size() const;
  void clear_int64map();
  static const int kInt64MapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      int64map() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_int64map();

  // map<string, double> DoubleMap = 4;
  int doublemap_size() const;
  void clear_doublemap();
  static const int kDoubleMapFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, double >&
      doublemap() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_doublemap();

  // string Action = 1;
  void clear_action();
  static const int kActionFieldNumber = 1;
  const ::std::string& action() const;
  void set_action(const ::std::string& value);
  #if LANG_CXX11
  void set_action(::std::string&& value);
  #endif
  void set_action(const char* value);
  void set_action(const char* value, size_t size);
  ::std::string* mutable_action();
  ::std::string* release_action();
  void set_allocated_action(::std::string* action);

  // @@protoc_insertion_point(class_scope:MessageFormat.MsgDataStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class MsgDataStruct_StringMapEntry : public ::google::protobuf::internal::MapEntry<MsgDataStruct_StringMapEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MsgDataStruct_StringMapEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    MsgDataStruct_StringMapEntry();
    MsgDataStruct_StringMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MsgDataStruct_StringMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MsgDataStruct_StringMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MsgDataStruct_StringMapEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > stringmap_;
  private:
  public:
  class MsgDataStruct_Int64MapEntry : public ::google::protobuf::internal::MapEntry<MsgDataStruct_Int64MapEntry, 
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MsgDataStruct_Int64MapEntry, 
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > SuperType;
    MsgDataStruct_Int64MapEntry();
    MsgDataStruct_Int64MapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MsgDataStruct_Int64MapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MsgDataStruct_Int64MapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MsgDataStruct_Int64MapEntry,
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > int64map_;
  private:
  public:
  class MsgDataStruct_DoubleMapEntry : public ::google::protobuf::internal::MapEntry<MsgDataStruct_DoubleMapEntry, 
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MsgDataStruct_DoubleMapEntry, 
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > SuperType;
    MsgDataStruct_DoubleMapEntry();
    MsgDataStruct_DoubleMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MsgDataStruct_DoubleMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MsgDataStruct_DoubleMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MsgDataStruct_DoubleMapEntry,
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > doublemap_;
  private:
  ::google::protobuf::internal::ArenaStringPtr action_;
  mutable int _cached_size_;
  friend struct protobuf_MessageFormat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageFormat.ReportStruct) */ {
 public:
  ReportStruct();
  virtual ~ReportStruct();

  ReportStruct(const ReportStruct& from);

  inline ReportStruct& operator=(const ReportStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportStruct(ReportStruct&& from) noexcept
    : ReportStruct() {
    *this = ::std::move(from);
  }

  inline ReportStruct& operator=(ReportStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportStruct& default_instance();

  static inline const ReportStruct* internal_default_instance() {
    return reinterpret_cast<const ReportStruct*>(
               &_ReportStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ReportStruct* other);
  friend void swap(ReportStruct& a, ReportStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportStruct& from);
  void MergeFrom(const ReportStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UniID = 1;
  void clear_uniid();
  static const int kUniIDFieldNumber = 1;
  const ::std::string& uniid() const;
  void set_uniid(const ::std::string& value);
  #if LANG_CXX11
  void set_uniid(::std::string&& value);
  #endif
  void set_uniid(const char* value);
  void set_uniid(const char* value, size_t size);
  ::std::string* mutable_uniid();
  ::std::string* release_uniid();
  void set_allocated_uniid(::std::string* uniid);

  // string ClOrdID = 2;
  void clear_clordid();
  static const int kClOrdIDFieldNumber = 2;
  const ::std::string& clordid() const;
  void set_clordid(const ::std::string& value);
  #if LANG_CXX11
  void set_clordid(::std::string&& value);
  #endif
  void set_clordid(const char* value);
  void set_clordid(const char* value, size_t size);
  ::std::string* mutable_clordid();
  ::std::string* release_clordid();
  void set_allocated_clordid(::std::string* clordid);

  // string SrcIP = 3;
  void clear_srcip();
  static const int kSrcIPFieldNumber = 3;
  const ::std::string& srcip() const;
  void set_srcip(const ::std::string& value);
  #if LANG_CXX11
  void set_srcip(::std::string&& value);
  #endif
  void set_srcip(const char* value);
  void set_srcip(const char* value, size_t size);
  ::std::string* mutable_srcip();
  ::std::string* release_srcip();
  void set_allocated_srcip(::std::string* srcip);

  // string UserDef = 4;
  void clear_userdef();
  static const int kUserDefFieldNumber = 4;
  const ::std::string& userdef() const;
  void set_userdef(const ::std::string& value);
  #if LANG_CXX11
  void set_userdef(::std::string&& value);
  #endif
  void set_userdef(const char* value);
  void set_userdef(const char* value, size_t size);
  ::std::string* mutable_userdef();
  ::std::string* release_userdef();
  void set_allocated_userdef(::std::string* userdef);

  // string BrokerID = 5;
  void clear_brokerid();
  static const int kBrokerIDFieldNumber = 5;
  const ::std::string& brokerid() const;
  void set_brokerid(const ::std::string& value);
  #if LANG_CXX11
  void set_brokerid(::std::string&& value);
  #endif
  void set_brokerid(const char* value);
  void set_brokerid(const char* value, size_t size);
  ::std::string* mutable_brokerid();
  ::std::string* release_brokerid();
  void set_allocated_brokerid(::std::string* brokerid);

  // string Account = 6;
  void clear_account();
  static const int kAccountFieldNumber = 6;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string SubAcc = 7;
  void clear_subacc();
  static const int kSubAccFieldNumber = 7;
  const ::std::string& subacc() const;
  void set_subacc(const ::std::string& value);
  #if LANG_CXX11
  void set_subacc(::std::string&& value);
  #endif
  void set_subacc(const char* value);
  void set_subacc(const char* value, size_t size);
  ::std::string* mutable_subacc();
  ::std::string* release_subacc();
  void set_allocated_subacc(::std::string* subacc);

  // string Side = 8;
  void clear_side();
  static const int kSideFieldNumber = 8;
  const ::std::string& side() const;
  void set_side(const ::std::string& value);
  #if LANG_CXX11
  void set_side(::std::string&& value);
  #endif
  void set_side(const char* value);
  void set_side(const char* value, size_t size);
  ::std::string* mutable_side();
  ::std::string* release_side();
  void set_allocated_side(::std::string* side);

  // string SecurityType = 9;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 9;
  const ::std::string& securitytype() const;
  void set_securitytype(const ::std::string& value);
  #if LANG_CXX11
  void set_securitytype(::std::string&& value);
  #endif
  void set_securitytype(const char* value);
  void set_securitytype(const char* value, size_t size);
  ::std::string* mutable_securitytype();
  ::std::string* release_securitytype();
  void set_allocated_securitytype(::std::string* securitytype);

  // string Fcode = 10;
  void clear_fcode();
  static const int kFcodeFieldNumber = 10;
  const ::std::string& fcode() const;
  void set_fcode(const ::std::string& value);
  #if LANG_CXX11
  void set_fcode(::std::string&& value);
  #endif
  void set_fcode(const char* value);
  void set_fcode(const char* value, size_t size);
  ::std::string* mutable_fcode();
  ::std::string* release_fcode();
  void set_allocated_fcode(::std::string* fcode);

  // string Symbol = 11;
  void clear_symbol();
  static const int kSymbolFieldNumber = 11;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string SegMkt = 12;
  void clear_segmkt();
  static const int kSegMktFieldNumber = 12;
  const ::std::string& segmkt() const;
  void set_segmkt(const ::std::string& value);
  #if LANG_CXX11
  void set_segmkt(::std::string&& value);
  #endif
  void set_segmkt(const char* value);
  void set_segmkt(const char* value, size_t size);
  ::std::string* mutable_segmkt();
  ::std::string* release_segmkt();
  void set_allocated_segmkt(::std::string* segmkt);

  // string OrgPrice1 = 13;
  void clear_orgprice1();
  static const int kOrgPrice1FieldNumber = 13;
  const ::std::string& orgprice1() const;
  void set_orgprice1(const ::std::string& value);
  #if LANG_CXX11
  void set_orgprice1(::std::string&& value);
  #endif
  void set_orgprice1(const char* value);
  void set_orgprice1(const char* value, size_t size);
  ::std::string* mutable_orgprice1();
  ::std::string* release_orgprice1();
  void set_allocated_orgprice1(::std::string* orgprice1);

  // string OrgPrice2 = 14;
  void clear_orgprice2();
  static const int kOrgPrice2FieldNumber = 14;
  const ::std::string& orgprice2() const;
  void set_orgprice2(const ::std::string& value);
  #if LANG_CXX11
  void set_orgprice2(::std::string&& value);
  #endif
  void set_orgprice2(const char* value);
  void set_orgprice2(const char* value, size_t size);
  ::std::string* mutable_orgprice2();
  ::std::string* release_orgprice2();
  void set_allocated_orgprice2(::std::string* orgprice2);

  // string OrgQty1 = 15;
  void clear_orgqty1();
  static const int kOrgQty1FieldNumber = 15;
  const ::std::string& orgqty1() const;
  void set_orgqty1(const ::std::string& value);
  #if LANG_CXX11
  void set_orgqty1(::std::string&& value);
  #endif
  void set_orgqty1(const char* value);
  void set_orgqty1(const char* value, size_t size);
  ::std::string* mutable_orgqty1();
  ::std::string* release_orgqty1();
  void set_allocated_orgqty1(::std::string* orgqty1);

  // string OrgQty2 = 16;
  void clear_orgqty2();
  static const int kOrgQty2FieldNumber = 16;
  const ::std::string& orgqty2() const;
  void set_orgqty2(const ::std::string& value);
  #if LANG_CXX11
  void set_orgqty2(::std::string&& value);
  #endif
  void set_orgqty2(const char* value);
  void set_orgqty2(const char* value, size_t size);
  ::std::string* mutable_orgqty2();
  ::std::string* release_orgqty2();
  void set_allocated_orgqty2(::std::string* orgqty2);

  // string OrdNo = 17;
  void clear_ordno();
  static const int kOrdNoFieldNumber = 17;
  const ::std::string& ordno() const;
  void set_ordno(const ::std::string& value);
  #if LANG_CXX11
  void set_ordno(::std::string&& value);
  #endif
  void set_ordno(const char* value);
  void set_ordno(const char* value, size_t size);
  ::std::string* mutable_ordno();
  ::std::string* release_ordno();
  void set_allocated_ordno(::std::string* ordno);

  // string Price1 = 18;
  void clear_price1();
  static const int kPrice1FieldNumber = 18;
  const ::std::string& price1() const;
  void set_price1(const ::std::string& value);
  #if LANG_CXX11
  void set_price1(::std::string&& value);
  #endif
  void set_price1(const char* value);
  void set_price1(const char* value, size_t size);
  ::std::string* mutable_price1();
  ::std::string* release_price1();
  void set_allocated_price1(::std::string* price1);

  // string OrdType = 19;
  void clear_ordtype();
  static const int kOrdTypeFieldNumber = 19;
  const ::std::string& ordtype() const;
  void set_ordtype(const ::std::string& value);
  #if LANG_CXX11
  void set_ordtype(::std::string&& value);
  #endif
  void set_ordtype(const char* value);
  void set_ordtype(const char* value, size_t size);
  ::std::string* mutable_ordtype();
  ::std::string* release_ordtype();
  void set_allocated_ordtype(::std::string* ordtype);

  // string TimeInForce = 20;
  void clear_timeinforce();
  static const int kTimeInForceFieldNumber = 20;
  const ::std::string& timeinforce() const;
  void set_timeinforce(const ::std::string& value);
  #if LANG_CXX11
  void set_timeinforce(::std::string&& value);
  #endif
  void set_timeinforce(const char* value);
  void set_timeinforce(const char* value, size_t size);
  ::std::string* mutable_timeinforce();
  ::std::string* release_timeinforce();
  void set_allocated_timeinforce(::std::string* timeinforce);

  // string OpenOff = 21;
  void clear_openoff();
  static const int kOpenOffFieldNumber = 21;
  const ::std::string& openoff() const;
  void set_openoff(const ::std::string& value);
  #if LANG_CXX11
  void set_openoff(::std::string&& value);
  #endif
  void set_openoff(const char* value);
  void set_openoff(const char* value, size_t size);
  ::std::string* mutable_openoff();
  ::std::string* release_openoff();
  void set_allocated_openoff(::std::string* openoff);

  // string LeavesQty1 = 22;
  void clear_leavesqty1();
  static const int kLeavesQty1FieldNumber = 22;
  const ::std::string& leavesqty1() const;
  void set_leavesqty1(const ::std::string& value);
  #if LANG_CXX11
  void set_leavesqty1(::std::string&& value);
  #endif
  void set_leavesqty1(const char* value);
  void set_leavesqty1(const char* value, size_t size);
  ::std::string* mutable_leavesqty1();
  ::std::string* release_leavesqty1();
  void set_allocated_leavesqty1(::std::string* leavesqty1);

  // string LeavesQty2 = 23;
  void clear_leavesqty2();
  static const int kLeavesQty2FieldNumber = 23;
  const ::std::string& leavesqty2() const;
  void set_leavesqty2(const ::std::string& value);
  #if LANG_CXX11
  void set_leavesqty2(::std::string&& value);
  #endif
  void set_leavesqty2(const char* value);
  void set_leavesqty2(const char* value, size_t size);
  ::std::string* mutable_leavesqty2();
  ::std::string* release_leavesqty2();
  void set_allocated_leavesqty2(::std::string* leavesqty2);

  // string CumQty1 = 24;
  void clear_cumqty1();
  static const int kCumQty1FieldNumber = 24;
  const ::std::string& cumqty1() const;
  void set_cumqty1(const ::std::string& value);
  #if LANG_CXX11
  void set_cumqty1(::std::string&& value);
  #endif
  void set_cumqty1(const char* value);
  void set_cumqty1(const char* value, size_t size);
  ::std::string* mutable_cumqty1();
  ::std::string* release_cumqty1();
  void set_allocated_cumqty1(::std::string* cumqty1);

  // string CumQty2 = 25;
  void clear_cumqty2();
  static const int kCumQty2FieldNumber = 25;
  const ::std::string& cumqty2() const;
  void set_cumqty2(const ::std::string& value);
  #if LANG_CXX11
  void set_cumqty2(::std::string&& value);
  #endif
  void set_cumqty2(const char* value);
  void set_cumqty2(const char* value, size_t size);
  ::std::string* mutable_cumqty2();
  ::std::string* release_cumqty2();
  void set_allocated_cumqty2(::std::string* cumqty2);

  // string TradeDate = 26;
  void clear_tradedate();
  static const int kTradeDateFieldNumber = 26;
  const ::std::string& tradedate() const;
  void set_tradedate(const ::std::string& value);
  #if LANG_CXX11
  void set_tradedate(::std::string&& value);
  #endif
  void set_tradedate(const char* value);
  void set_tradedate(const char* value, size_t size);
  ::std::string* mutable_tradedate();
  ::std::string* release_tradedate();
  void set_allocated_tradedate(::std::string* tradedate);

  // string TransactTime = 27;
  void clear_transacttime();
  static const int kTransactTimeFieldNumber = 27;
  const ::std::string& transacttime() const;
  void set_transacttime(const ::std::string& value);
  #if LANG_CXX11
  void set_transacttime(::std::string&& value);
  #endif
  void set_transacttime(const char* value);
  void set_transacttime(const char* value, size_t size);
  ::std::string* mutable_transacttime();
  ::std::string* release_transacttime();
  void set_allocated_transacttime(::std::string* transacttime);

  // string OrdStatus = 28;
  void clear_ordstatus();
  static const int kOrdStatusFieldNumber = 28;
  const ::std::string& ordstatus() const;
  void set_ordstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_ordstatus(::std::string&& value);
  #endif
  void set_ordstatus(const char* value);
  void set_ordstatus(const char* value, size_t size);
  ::std::string* mutable_ordstatus();
  ::std::string* release_ordstatus();
  void set_allocated_ordstatus(::std::string* ordstatus);

  // string Msg = 29;
  void clear_msg();
  static const int kMsgFieldNumber = 29;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string IsRecovered = 30;
  void clear_isrecovered();
  static const int kIsRecoveredFieldNumber = 30;
  const ::std::string& isrecovered() const;
  void set_isrecovered(const ::std::string& value);
  #if LANG_CXX11
  void set_isrecovered(::std::string&& value);
  #endif
  void set_isrecovered(const char* value);
  void set_isrecovered(const char* value, size_t size);
  ::std::string* mutable_isrecovered();
  ::std::string* release_isrecovered();
  void set_allocated_isrecovered(::std::string* isrecovered);

  // string FcmID_SessionID = 31;
  void clear_fcmid_sessionid();
  static const int kFcmIDSessionIDFieldNumber = 31;
  const ::std::string& fcmid_sessionid() const;
  void set_fcmid_sessionid(const ::std::string& value);
  #if LANG_CXX11
  void set_fcmid_sessionid(::std::string&& value);
  #endif
  void set_fcmid_sessionid(const char* value);
  void set_fcmid_sessionid(const char* value, size_t size);
  ::std::string* mutable_fcmid_sessionid();
  ::std::string* release_fcmid_sessionid();
  void set_allocated_fcmid_sessionid(::std::string* fcmid_sessionid);

  // string ScForce = 32;
  void clear_scforce();
  static const int kScForceFieldNumber = 32;
  const ::std::string& scforce() const;
  void set_scforce(const ::std::string& value);
  #if LANG_CXX11
  void set_scforce(::std::string&& value);
  #endif
  void set_scforce(const char* value);
  void set_scforce(const char* value, size_t size);
  ::std::string* mutable_scforce();
  ::std::string* release_scforce();
  void set_allocated_scforce(::std::string* scforce);

  // string ExchangeCode = 33;
  void clear_exchangecode();
  static const int kExchangeCodeFieldNumber = 33;
  const ::std::string& exchangecode() const;
  void set_exchangecode(const ::std::string& value);
  #if LANG_CXX11
  void set_exchangecode(::std::string&& value);
  #endif
  void set_exchangecode(const char* value);
  void set_exchangecode(const char* value, size_t size);
  ::std::string* mutable_exchangecode();
  ::std::string* release_exchangecode();
  void set_allocated_exchangecode(::std::string* exchangecode);

  // string OrderChannel = 34;
  void clear_orderchannel();
  static const int kOrderChannelFieldNumber = 34;
  const ::std::string& orderchannel() const;
  void set_orderchannel(const ::std::string& value);
  #if LANG_CXX11
  void set_orderchannel(::std::string&& value);
  #endif
  void set_orderchannel(const char* value);
  void set_orderchannel(const char* value, size_t size);
  ::std::string* mutable_orderchannel();
  ::std::string* release_orderchannel();
  void set_allocated_orderchannel(::std::string* orderchannel);

  // string OrdTime = 35;
  void clear_ordtime();
  static const int kOrdTimeFieldNumber = 35;
  const ::std::string& ordtime() const;
  void set_ordtime(const ::std::string& value);
  #if LANG_CXX11
  void set_ordtime(::std::string&& value);
  #endif
  void set_ordtime(const char* value);
  void set_ordtime(const char* value, size_t size);
  ::std::string* mutable_ordtime();
  ::std::string* release_ordtime();
  void set_allocated_ordtime(::std::string* ordtime);

  // @@protoc_insertion_point(class_scope:MessageFormat.ReportStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uniid_;
  ::google::protobuf::internal::ArenaStringPtr clordid_;
  ::google::protobuf::internal::ArenaStringPtr srcip_;
  ::google::protobuf::internal::ArenaStringPtr userdef_;
  ::google::protobuf::internal::ArenaStringPtr brokerid_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr subacc_;
  ::google::protobuf::internal::ArenaStringPtr side_;
  ::google::protobuf::internal::ArenaStringPtr securitytype_;
  ::google::protobuf::internal::ArenaStringPtr fcode_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr segmkt_;
  ::google::protobuf::internal::ArenaStringPtr orgprice1_;
  ::google::protobuf::internal::ArenaStringPtr orgprice2_;
  ::google::protobuf::internal::ArenaStringPtr orgqty1_;
  ::google::protobuf::internal::ArenaStringPtr orgqty2_;
  ::google::protobuf::internal::ArenaStringPtr ordno_;
  ::google::protobuf::internal::ArenaStringPtr price1_;
  ::google::protobuf::internal::ArenaStringPtr ordtype_;
  ::google::protobuf::internal::ArenaStringPtr timeinforce_;
  ::google::protobuf::internal::ArenaStringPtr openoff_;
  ::google::protobuf::internal::ArenaStringPtr leavesqty1_;
  ::google::protobuf::internal::ArenaStringPtr leavesqty2_;
  ::google::protobuf::internal::ArenaStringPtr cumqty1_;
  ::google::protobuf::internal::ArenaStringPtr cumqty2_;
  ::google::protobuf::internal::ArenaStringPtr tradedate_;
  ::google::protobuf::internal::ArenaStringPtr transacttime_;
  ::google::protobuf::internal::ArenaStringPtr ordstatus_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr isrecovered_;
  ::google::protobuf::internal::ArenaStringPtr fcmid_sessionid_;
  ::google::protobuf::internal::ArenaStringPtr scforce_;
  ::google::protobuf::internal::ArenaStringPtr exchangecode_;
  ::google::protobuf::internal::ArenaStringPtr orderchannel_;
  ::google::protobuf::internal::ArenaStringPtr ordtime_;
  mutable int _cached_size_;
  friend struct protobuf_MessageFormat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageFormat.MatchStruct) */ {
 public:
  MatchStruct();
  virtual ~MatchStruct();

  MatchStruct(const MatchStruct& from);

  inline MatchStruct& operator=(const MatchStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchStruct(MatchStruct&& from) noexcept
    : MatchStruct() {
    *this = ::std::move(from);
  }

  inline MatchStruct& operator=(MatchStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchStruct& default_instance();

  static inline const MatchStruct* internal_default_instance() {
    return reinterpret_cast<const MatchStruct*>(
               &_MatchStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MatchStruct* other);
  friend void swap(MatchStruct& a, MatchStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchStruct& from);
  void MergeFrom(const MatchStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UniID = 1;
  void clear_uniid();
  static const int kUniIDFieldNumber = 1;
  const ::std::string& uniid() const;
  void set_uniid(const ::std::string& value);
  #if LANG_CXX11
  void set_uniid(::std::string&& value);
  #endif
  void set_uniid(const char* value);
  void set_uniid(const char* value, size_t size);
  ::std::string* mutable_uniid();
  ::std::string* release_uniid();
  void set_allocated_uniid(::std::string* uniid);

  // string ClOrdID = 2;
  void clear_clordid();
  static const int kClOrdIDFieldNumber = 2;
  const ::std::string& clordid() const;
  void set_clordid(const ::std::string& value);
  #if LANG_CXX11
  void set_clordid(::std::string&& value);
  #endif
  void set_clordid(const char* value);
  void set_clordid(const char* value, size_t size);
  ::std::string* mutable_clordid();
  ::std::string* release_clordid();
  void set_allocated_clordid(::std::string* clordid);

  // string SrcIP = 3;
  void clear_srcip();
  static const int kSrcIPFieldNumber = 3;
  const ::std::string& srcip() const;
  void set_srcip(const ::std::string& value);
  #if LANG_CXX11
  void set_srcip(::std::string&& value);
  #endif
  void set_srcip(const char* value);
  void set_srcip(const char* value, size_t size);
  ::std::string* mutable_srcip();
  ::std::string* release_srcip();
  void set_allocated_srcip(::std::string* srcip);

  // string UserDef = 4;
  void clear_userdef();
  static const int kUserDefFieldNumber = 4;
  const ::std::string& userdef() const;
  void set_userdef(const ::std::string& value);
  #if LANG_CXX11
  void set_userdef(::std::string&& value);
  #endif
  void set_userdef(const char* value);
  void set_userdef(const char* value, size_t size);
  ::std::string* mutable_userdef();
  ::std::string* release_userdef();
  void set_allocated_userdef(::std::string* userdef);

  // string BrokerID = 5;
  void clear_brokerid();
  static const int kBrokerIDFieldNumber = 5;
  const ::std::string& brokerid() const;
  void set_brokerid(const ::std::string& value);
  #if LANG_CXX11
  void set_brokerid(::std::string&& value);
  #endif
  void set_brokerid(const char* value);
  void set_brokerid(const char* value, size_t size);
  ::std::string* mutable_brokerid();
  ::std::string* release_brokerid();
  void set_allocated_brokerid(::std::string* brokerid);

  // string Account = 6;
  void clear_account();
  static const int kAccountFieldNumber = 6;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string SubAcc = 7;
  void clear_subacc();
  static const int kSubAccFieldNumber = 7;
  const ::std::string& subacc() const;
  void set_subacc(const ::std::string& value);
  #if LANG_CXX11
  void set_subacc(::std::string&& value);
  #endif
  void set_subacc(const char* value);
  void set_subacc(const char* value, size_t size);
  ::std::string* mutable_subacc();
  ::std::string* release_subacc();
  void set_allocated_subacc(::std::string* subacc);

  // string Side = 8;
  void clear_side();
  static const int kSideFieldNumber = 8;
  const ::std::string& side() const;
  void set_side(const ::std::string& value);
  #if LANG_CXX11
  void set_side(::std::string&& value);
  #endif
  void set_side(const char* value);
  void set_side(const char* value, size_t size);
  ::std::string* mutable_side();
  ::std::string* release_side();
  void set_allocated_side(::std::string* side);

  // string SecurityType = 9;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 9;
  const ::std::string& securitytype() const;
  void set_securitytype(const ::std::string& value);
  #if LANG_CXX11
  void set_securitytype(::std::string&& value);
  #endif
  void set_securitytype(const char* value);
  void set_securitytype(const char* value, size_t size);
  ::std::string* mutable_securitytype();
  ::std::string* release_securitytype();
  void set_allocated_securitytype(::std::string* securitytype);

  // string Symbol = 10;
  void clear_symbol();
  static const int kSymbolFieldNumber = 10;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string SegMkt = 11;
  void clear_segmkt();
  static const int kSegMktFieldNumber = 11;
  const ::std::string& segmkt() const;
  void set_segmkt(const ::std::string& value);
  #if LANG_CXX11
  void set_segmkt(::std::string&& value);
  #endif
  void set_segmkt(const char* value);
  void set_segmkt(const char* value, size_t size);
  ::std::string* mutable_segmkt();
  ::std::string* release_segmkt();
  void set_allocated_segmkt(::std::string* segmkt);

  // string OrgPrice = 12;
  void clear_orgprice();
  static const int kOrgPriceFieldNumber = 12;
  const ::std::string& orgprice() const;
  void set_orgprice(const ::std::string& value);
  #if LANG_CXX11
  void set_orgprice(::std::string&& value);
  #endif
  void set_orgprice(const char* value);
  void set_orgprice(const char* value, size_t size);
  ::std::string* mutable_orgprice();
  ::std::string* release_orgprice();
  void set_allocated_orgprice(::std::string* orgprice);

  // string OrgQty = 13;
  void clear_orgqty();
  static const int kOrgQtyFieldNumber = 13;
  const ::std::string& orgqty() const;
  void set_orgqty(const ::std::string& value);
  #if LANG_CXX11
  void set_orgqty(::std::string&& value);
  #endif
  void set_orgqty(const char* value);
  void set_orgqty(const char* value, size_t size);
  ::std::string* mutable_orgqty();
  ::std::string* release_orgqty();
  void set_allocated_orgqty(::std::string* orgqty);

  // string OrdNo = 14;
  void clear_ordno();
  static const int kOrdNoFieldNumber = 14;
  const ::std::string& ordno() const;
  void set_ordno(const ::std::string& value);
  #if LANG_CXX11
  void set_ordno(::std::string&& value);
  #endif
  void set_ordno(const char* value);
  void set_ordno(const char* value, size_t size);
  ::std::string* mutable_ordno();
  ::std::string* release_ordno();
  void set_allocated_ordno(::std::string* ordno);

  // string OrdType = 15;
  void clear_ordtype();
  static const int kOrdTypeFieldNumber = 15;
  const ::std::string& ordtype() const;
  void set_ordtype(const ::std::string& value);
  #if LANG_CXX11
  void set_ordtype(::std::string&& value);
  #endif
  void set_ordtype(const char* value);
  void set_ordtype(const char* value, size_t size);
  ::std::string* mutable_ordtype();
  ::std::string* release_ordtype();
  void set_allocated_ordtype(::std::string* ordtype);

  // string TimeInForce = 16;
  void clear_timeinforce();
  static const int kTimeInForceFieldNumber = 16;
  const ::std::string& timeinforce() const;
  void set_timeinforce(const ::std::string& value);
  #if LANG_CXX11
  void set_timeinforce(::std::string&& value);
  #endif
  void set_timeinforce(const char* value);
  void set_timeinforce(const char* value, size_t size);
  ::std::string* mutable_timeinforce();
  ::std::string* release_timeinforce();
  void set_allocated_timeinforce(::std::string* timeinforce);

  // string OpenOff = 17;
  void clear_openoff();
  static const int kOpenOffFieldNumber = 17;
  const ::std::string& openoff() const;
  void set_openoff(const ::std::string& value);
  #if LANG_CXX11
  void set_openoff(::std::string&& value);
  #endif
  void set_openoff(const char* value);
  void set_openoff(const char* value, size_t size);
  ::std::string* mutable_openoff();
  ::std::string* release_openoff();
  void set_allocated_openoff(::std::string* openoff);

  // string LeavesQty = 18;
  void clear_leavesqty();
  static const int kLeavesQtyFieldNumber = 18;
  const ::std::string& leavesqty() const;
  void set_leavesqty(const ::std::string& value);
  #if LANG_CXX11
  void set_leavesqty(::std::string&& value);
  #endif
  void set_leavesqty(const char* value);
  void set_leavesqty(const char* value, size_t size);
  ::std::string* mutable_leavesqty();
  ::std::string* release_leavesqty();
  void set_allocated_leavesqty(::std::string* leavesqty);

  // string CumQty1 = 19;
  void clear_cumqty1();
  static const int kCumQty1FieldNumber = 19;
  const ::std::string& cumqty1() const;
  void set_cumqty1(const ::std::string& value);
  #if LANG_CXX11
  void set_cumqty1(::std::string&& value);
  #endif
  void set_cumqty1(const char* value);
  void set_cumqty1(const char* value, size_t size);
  ::std::string* mutable_cumqty1();
  ::std::string* release_cumqty1();
  void set_allocated_cumqty1(::std::string* cumqty1);

  // string CumQty2 = 20;
  void clear_cumqty2();
  static const int kCumQty2FieldNumber = 20;
  const ::std::string& cumqty2() const;
  void set_cumqty2(const ::std::string& value);
  #if LANG_CXX11
  void set_cumqty2(::std::string&& value);
  #endif
  void set_cumqty2(const char* value);
  void set_cumqty2(const char* value, size_t size);
  ::std::string* mutable_cumqty2();
  ::std::string* release_cumqty2();
  void set_allocated_cumqty2(::std::string* cumqty2);

  // string TradeDate = 21;
  void clear_tradedate();
  static const int kTradeDateFieldNumber = 21;
  const ::std::string& tradedate() const;
  void set_tradedate(const ::std::string& value);
  #if LANG_CXX11
  void set_tradedate(::std::string&& value);
  #endif
  void set_tradedate(const char* value);
  void set_tradedate(const char* value, size_t size);
  ::std::string* mutable_tradedate();
  ::std::string* release_tradedate();
  void set_allocated_tradedate(::std::string* tradedate);

  // string TransactTime = 22;
  void clear_transacttime();
  static const int kTransactTimeFieldNumber = 22;
  const ::std::string& transacttime() const;
  void set_transacttime(const ::std::string& value);
  #if LANG_CXX11
  void set_transacttime(::std::string&& value);
  #endif
  void set_transacttime(const char* value);
  void set_transacttime(const char* value, size_t size);
  ::std::string* mutable_transacttime();
  ::std::string* release_transacttime();
  void set_allocated_transacttime(::std::string* transacttime);

  // string OrdStatus = 23;
  void clear_ordstatus();
  static const int kOrdStatusFieldNumber = 23;
  const ::std::string& ordstatus() const;
  void set_ordstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_ordstatus(::std::string&& value);
  #endif
  void set_ordstatus(const char* value);
  void set_ordstatus(const char* value, size_t size);
  ::std::string* mutable_ordstatus();
  ::std::string* release_ordstatus();
  void set_allocated_ordstatus(::std::string* ordstatus);

  // string Msg = 24;
  void clear_msg();
  static const int kMsgFieldNumber = 24;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string IsRecovered = 25;
  void clear_isrecovered();
  static const int kIsRecoveredFieldNumber = 25;
  const ::std::string& isrecovered() const;
  void set_isrecovered(const ::std::string& value);
  #if LANG_CXX11
  void set_isrecovered(::std::string&& value);
  #endif
  void set_isrecovered(const char* value);
  void set_isrecovered(const char* value, size_t size);
  ::std::string* mutable_isrecovered();
  ::std::string* release_isrecovered();
  void set_allocated_isrecovered(::std::string* isrecovered);

  // string FcmID_SessionID = 26;
  void clear_fcmid_sessionid();
  static const int kFcmIDSessionIDFieldNumber = 26;
  const ::std::string& fcmid_sessionid() const;
  void set_fcmid_sessionid(const ::std::string& value);
  #if LANG_CXX11
  void set_fcmid_sessionid(::std::string&& value);
  #endif
  void set_fcmid_sessionid(const char* value);
  void set_fcmid_sessionid(const char* value, size_t size);
  ::std::string* mutable_fcmid_sessionid();
  ::std::string* release_fcmid_sessionid();
  void set_allocated_fcmid_sessionid(::std::string* fcmid_sessionid);

  // string DealUniKey = 27;
  void clear_dealunikey();
  static const int kDealUniKeyFieldNumber = 27;
  const ::std::string& dealunikey() const;
  void set_dealunikey(const ::std::string& value);
  #if LANG_CXX11
  void set_dealunikey(::std::string&& value);
  #endif
  void set_dealunikey(const char* value);
  void set_dealunikey(const char* value, size_t size);
  ::std::string* mutable_dealunikey();
  ::std::string* release_dealunikey();
  void set_allocated_dealunikey(::std::string* dealunikey);

  // string DealPrice = 28;
  void clear_dealprice();
  static const int kDealPriceFieldNumber = 28;
  const ::std::string& dealprice() const;
  void set_dealprice(const ::std::string& value);
  #if LANG_CXX11
  void set_dealprice(::std::string&& value);
  #endif
  void set_dealprice(const char* value);
  void set_dealprice(const char* value, size_t size);
  ::std::string* mutable_dealprice();
  ::std::string* release_dealprice();
  void set_allocated_dealprice(::std::string* dealprice);

  // string DealQty = 29;
  void clear_dealqty();
  static const int kDealQtyFieldNumber = 29;
  const ::std::string& dealqty() const;
  void set_dealqty(const ::std::string& value);
  #if LANG_CXX11
  void set_dealqty(::std::string&& value);
  #endif
  void set_dealqty(const char* value);
  void set_dealqty(const char* value, size_t size);
  ::std::string* mutable_dealqty();
  ::std::string* release_dealqty();
  void set_allocated_dealqty(::std::string* dealqty);

  // string DealPriceLeg1 = 30;
  void clear_dealpriceleg1();
  static const int kDealPriceLeg1FieldNumber = 30;
  const ::std::string& dealpriceleg1() const;
  void set_dealpriceleg1(const ::std::string& value);
  #if LANG_CXX11
  void set_dealpriceleg1(::std::string&& value);
  #endif
  void set_dealpriceleg1(const char* value);
  void set_dealpriceleg1(const char* value, size_t size);
  ::std::string* mutable_dealpriceleg1();
  ::std::string* release_dealpriceleg1();
  void set_allocated_dealpriceleg1(::std::string* dealpriceleg1);

  // string DealPriceLeg2 = 31;
  void clear_dealpriceleg2();
  static const int kDealPriceLeg2FieldNumber = 31;
  const ::std::string& dealpriceleg2() const;
  void set_dealpriceleg2(const ::std::string& value);
  #if LANG_CXX11
  void set_dealpriceleg2(::std::string&& value);
  #endif
  void set_dealpriceleg2(const char* value);
  void set_dealpriceleg2(const char* value, size_t size);
  ::std::string* mutable_dealpriceleg2();
  ::std::string* release_dealpriceleg2();
  void set_allocated_dealpriceleg2(::std::string* dealpriceleg2);

  // string ScForce = 32;
  void clear_scforce();
  static const int kScForceFieldNumber = 32;
  const ::std::string& scforce() const;
  void set_scforce(const ::std::string& value);
  #if LANG_CXX11
  void set_scforce(::std::string&& value);
  #endif
  void set_scforce(const char* value);
  void set_scforce(const char* value, size_t size);
  ::std::string* mutable_scforce();
  ::std::string* release_scforce();
  void set_allocated_scforce(::std::string* scforce);

  // string ExchangeCode = 33;
  void clear_exchangecode();
  static const int kExchangeCodeFieldNumber = 33;
  const ::std::string& exchangecode() const;
  void set_exchangecode(const ::std::string& value);
  #if LANG_CXX11
  void set_exchangecode(::std::string&& value);
  #endif
  void set_exchangecode(const char* value);
  void set_exchangecode(const char* value, size_t size);
  ::std::string* mutable_exchangecode();
  ::std::string* release_exchangecode();
  void set_allocated_exchangecode(::std::string* exchangecode);

  // string OrderChannel = 34;
  void clear_orderchannel();
  static const int kOrderChannelFieldNumber = 34;
  const ::std::string& orderchannel() const;
  void set_orderchannel(const ::std::string& value);
  #if LANG_CXX11
  void set_orderchannel(::std::string&& value);
  #endif
  void set_orderchannel(const char* value);
  void set_orderchannel(const char* value, size_t size);
  ::std::string* mutable_orderchannel();
  ::std::string* release_orderchannel();
  void set_allocated_orderchannel(::std::string* orderchannel);

  // string OrdTime = 35;
  void clear_ordtime();
  static const int kOrdTimeFieldNumber = 35;
  const ::std::string& ordtime() const;
  void set_ordtime(const ::std::string& value);
  #if LANG_CXX11
  void set_ordtime(::std::string&& value);
  #endif
  void set_ordtime(const char* value);
  void set_ordtime(const char* value, size_t size);
  ::std::string* mutable_ordtime();
  ::std::string* release_ordtime();
  void set_allocated_ordtime(::std::string* ordtime);

  // @@protoc_insertion_point(class_scope:MessageFormat.MatchStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uniid_;
  ::google::protobuf::internal::ArenaStringPtr clordid_;
  ::google::protobuf::internal::ArenaStringPtr srcip_;
  ::google::protobuf::internal::ArenaStringPtr userdef_;
  ::google::protobuf::internal::ArenaStringPtr brokerid_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr subacc_;
  ::google::protobuf::internal::ArenaStringPtr side_;
  ::google::protobuf::internal::ArenaStringPtr securitytype_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr segmkt_;
  ::google::protobuf::internal::ArenaStringPtr orgprice_;
  ::google::protobuf::internal::ArenaStringPtr orgqty_;
  ::google::protobuf::internal::ArenaStringPtr ordno_;
  ::google::protobuf::internal::ArenaStringPtr ordtype_;
  ::google::protobuf::internal::ArenaStringPtr timeinforce_;
  ::google::protobuf::internal::ArenaStringPtr openoff_;
  ::google::protobuf::internal::ArenaStringPtr leavesqty_;
  ::google::protobuf::internal::ArenaStringPtr cumqty1_;
  ::google::protobuf::internal::ArenaStringPtr cumqty2_;
  ::google::protobuf::internal::ArenaStringPtr tradedate_;
  ::google::protobuf::internal::ArenaStringPtr transacttime_;
  ::google::protobuf::internal::ArenaStringPtr ordstatus_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr isrecovered_;
  ::google::protobuf::internal::ArenaStringPtr fcmid_sessionid_;
  ::google::protobuf::internal::ArenaStringPtr dealunikey_;
  ::google::protobuf::internal::ArenaStringPtr dealprice_;
  ::google::protobuf::internal::ArenaStringPtr dealqty_;
  ::google::protobuf::internal::ArenaStringPtr dealpriceleg1_;
  ::google::protobuf::internal::ArenaStringPtr dealpriceleg2_;
  ::google::protobuf::internal::ArenaStringPtr scforce_;
  ::google::protobuf::internal::ArenaStringPtr exchangecode_;
  ::google::protobuf::internal::ArenaStringPtr orderchannel_;
  ::google::protobuf::internal::ArenaStringPtr ordtime_;
  mutable int _cached_size_;
  friend struct protobuf_MessageFormat_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MessageFormat.OrderStruct) */ {
 public:
  OrderStruct();
  virtual ~OrderStruct();

  OrderStruct(const OrderStruct& from);

  inline OrderStruct& operator=(const OrderStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderStruct(OrderStruct&& from) noexcept
    : OrderStruct() {
    *this = ::std::move(from);
  }

  inline OrderStruct& operator=(OrderStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderStruct& default_instance();

  static inline const OrderStruct* internal_default_instance() {
    return reinterpret_cast<const OrderStruct*>(
               &_OrderStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(OrderStruct* other);
  friend void swap(OrderStruct& a, OrderStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderStruct& from);
  void MergeFrom(const OrderStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UniID = 1;
  void clear_uniid();
  static const int kUniIDFieldNumber = 1;
  const ::std::string& uniid() const;
  void set_uniid(const ::std::string& value);
  #if LANG_CXX11
  void set_uniid(::std::string&& value);
  #endif
  void set_uniid(const char* value);
  void set_uniid(const char* value, size_t size);
  ::std::string* mutable_uniid();
  ::std::string* release_uniid();
  void set_allocated_uniid(::std::string* uniid);

  // string ClOrdID = 2;
  void clear_clordid();
  static const int kClOrdIDFieldNumber = 2;
  const ::std::string& clordid() const;
  void set_clordid(const ::std::string& value);
  #if LANG_CXX11
  void set_clordid(::std::string&& value);
  #endif
  void set_clordid(const char* value);
  void set_clordid(const char* value, size_t size);
  ::std::string* mutable_clordid();
  ::std::string* release_clordid();
  void set_allocated_clordid(::std::string* clordid);

  // string UserDef = 3;
  void clear_userdef();
  static const int kUserDefFieldNumber = 3;
  const ::std::string& userdef() const;
  void set_userdef(const ::std::string& value);
  #if LANG_CXX11
  void set_userdef(::std::string&& value);
  #endif
  void set_userdef(const char* value);
  void set_userdef(const char* value, size_t size);
  ::std::string* mutable_userdef();
  ::std::string* release_userdef();
  void set_allocated_userdef(::std::string* userdef);

  // string BrokerID = 4;
  void clear_brokerid();
  static const int kBrokerIDFieldNumber = 4;
  const ::std::string& brokerid() const;
  void set_brokerid(const ::std::string& value);
  #if LANG_CXX11
  void set_brokerid(::std::string&& value);
  #endif
  void set_brokerid(const char* value);
  void set_brokerid(const char* value, size_t size);
  ::std::string* mutable_brokerid();
  ::std::string* release_brokerid();
  void set_allocated_brokerid(::std::string* brokerid);

  // string Account = 5;
  void clear_account();
  static const int kAccountFieldNumber = 5;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string SubAcc = 6;
  void clear_subacc();
  static const int kSubAccFieldNumber = 6;
  const ::std::string& subacc() const;
  void set_subacc(const ::std::string& value);
  #if LANG_CXX11
  void set_subacc(::std::string&& value);
  #endif
  void set_subacc(const char* value);
  void set_subacc(const char* value, size_t size);
  ::std::string* mutable_subacc();
  ::std::string* release_subacc();
  void set_allocated_subacc(::std::string* subacc);

  // string Side = 7;
  void clear_side();
  static const int kSideFieldNumber = 7;
  const ::std::string& side() const;
  void set_side(const ::std::string& value);
  #if LANG_CXX11
  void set_side(::std::string&& value);
  #endif
  void set_side(const char* value);
  void set_side(const char* value, size_t size);
  ::std::string* mutable_side();
  ::std::string* release_side();
  void set_allocated_side(::std::string* side);

  // string SecurityType = 8;
  void clear_securitytype();
  static const int kSecurityTypeFieldNumber = 8;
  const ::std::string& securitytype() const;
  void set_securitytype(const ::std::string& value);
  #if LANG_CXX11
  void set_securitytype(::std::string&& value);
  #endif
  void set_securitytype(const char* value);
  void set_securitytype(const char* value, size_t size);
  ::std::string* mutable_securitytype();
  ::std::string* release_securitytype();
  void set_allocated_securitytype(::std::string* securitytype);

  // string Fcode = 9;
  void clear_fcode();
  static const int kFcodeFieldNumber = 9;
  const ::std::string& fcode() const;
  void set_fcode(const ::std::string& value);
  #if LANG_CXX11
  void set_fcode(::std::string&& value);
  #endif
  void set_fcode(const char* value);
  void set_fcode(const char* value, size_t size);
  ::std::string* mutable_fcode();
  ::std::string* release_fcode();
  void set_allocated_fcode(::std::string* fcode);

  // string Symbol = 10;
  void clear_symbol();
  static const int kSymbolFieldNumber = 10;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // string SegMkt = 11;
  void clear_segmkt();
  static const int kSegMktFieldNumber = 11;
  const ::std::string& segmkt() const;
  void set_segmkt(const ::std::string& value);
  #if LANG_CXX11
  void set_segmkt(::std::string&& value);
  #endif
  void set_segmkt(const char* value);
  void set_segmkt(const char* value, size_t size);
  ::std::string* mutable_segmkt();
  ::std::string* release_segmkt();
  void set_allocated_segmkt(::std::string* segmkt);

  // string Price1 = 12;
  void clear_price1();
  static const int kPrice1FieldNumber = 12;
  const ::std::string& price1() const;
  void set_price1(const ::std::string& value);
  #if LANG_CXX11
  void set_price1(::std::string&& value);
  #endif
  void set_price1(const char* value);
  void set_price1(const char* value, size_t size);
  ::std::string* mutable_price1();
  ::std::string* release_price1();
  void set_allocated_price1(::std::string* price1);

  // string Price2 = 13;
  void clear_price2();
  static const int kPrice2FieldNumber = 13;
  const ::std::string& price2() const;
  void set_price2(const ::std::string& value);
  #if LANG_CXX11
  void set_price2(::std::string&& value);
  #endif
  void set_price2(const char* value);
  void set_price2(const char* value, size_t size);
  ::std::string* mutable_price2();
  ::std::string* release_price2();
  void set_allocated_price2(::std::string* price2);

  // string Qty1 = 14;
  void clear_qty1();
  static const int kQty1FieldNumber = 14;
  const ::std::string& qty1() const;
  void set_qty1(const ::std::string& value);
  #if LANG_CXX11
  void set_qty1(::std::string&& value);
  #endif
  void set_qty1(const char* value);
  void set_qty1(const char* value, size_t size);
  ::std::string* mutable_qty1();
  ::std::string* release_qty1();
  void set_allocated_qty1(::std::string* qty1);

  // string Qty2 = 15;
  void clear_qty2();
  static const int kQty2FieldNumber = 15;
  const ::std::string& qty2() const;
  void set_qty2(const ::std::string& value);
  #if LANG_CXX11
  void set_qty2(::std::string&& value);
  #endif
  void set_qty2(const char* value);
  void set_qty2(const char* value, size_t size);
  ::std::string* mutable_qty2();
  ::std::string* release_qty2();
  void set_allocated_qty2(::std::string* qty2);

  // string OrdNo = 16;
  void clear_ordno();
  static const int kOrdNoFieldNumber = 16;
  const ::std::string& ordno() const;
  void set_ordno(const ::std::string& value);
  #if LANG_CXX11
  void set_ordno(::std::string&& value);
  #endif
  void set_ordno(const char* value);
  void set_ordno(const char* value, size_t size);
  ::std::string* mutable_ordno();
  ::std::string* release_ordno();
  void set_allocated_ordno(::std::string* ordno);

  // string OrdType = 17;
  void clear_ordtype();
  static const int kOrdTypeFieldNumber = 17;
  const ::std::string& ordtype() const;
  void set_ordtype(const ::std::string& value);
  #if LANG_CXX11
  void set_ordtype(::std::string&& value);
  #endif
  void set_ordtype(const char* value);
  void set_ordtype(const char* value, size_t size);
  ::std::string* mutable_ordtype();
  ::std::string* release_ordtype();
  void set_allocated_ordtype(::std::string* ordtype);

  // string TimeInForce = 18;
  void clear_timeinforce();
  static const int kTimeInForceFieldNumber = 18;
  const ::std::string& timeinforce() const;
  void set_timeinforce(const ::std::string& value);
  #if LANG_CXX11
  void set_timeinforce(::std::string&& value);
  #endif
  void set_timeinforce(const char* value);
  void set_timeinforce(const char* value, size_t size);
  ::std::string* mutable_timeinforce();
  ::std::string* release_timeinforce();
  void set_allocated_timeinforce(::std::string* timeinforce);

  // string OpenOff = 19;
  void clear_openoff();
  static const int kOpenOffFieldNumber = 19;
  const ::std::string& openoff() const;
  void set_openoff(const ::std::string& value);
  #if LANG_CXX11
  void set_openoff(::std::string&& value);
  #endif
  void set_openoff(const char* value);
  void set_openoff(const char* value, size_t size);
  ::std::string* mutable_openoff();
  ::std::string* release_openoff();
  void set_allocated_openoff(::std::string* openoff);

  // string ScForce = 20;
  void clear_scforce();
  static const int kScForceFieldNumber = 20;
  const ::std::string& scforce() const;
  void set_scforce(const ::std::string& value);
  #if LANG_CXX11
  void set_scforce(::std::string&& value);
  #endif
  void set_scforce(const char* value);
  void set_scforce(const char* value, size_t size);
  ::std::string* mutable_scforce();
  ::std::string* release_scforce();
  void set_allocated_scforce(::std::string* scforce);

  // string ReserveCondition = 22;
  void clear_reservecondition();
  static const int kReserveConditionFieldNumber = 22;
  const ::std::string& reservecondition() const;
  void set_reservecondition(const ::std::string& value);
  #if LANG_CXX11
  void set_reservecondition(::std::string&& value);
  #endif
  void set_reservecondition(const char* value);
  void set_reservecondition(const char* value, size_t size);
  ::std::string* mutable_reservecondition();
  ::std::string* release_reservecondition();
  void set_allocated_reservecondition(::std::string* reservecondition);

  // int32 IsReserved = 21;
  void clear_isreserved();
  static const int kIsReservedFieldNumber = 21;
  ::google::protobuf::int32 isreserved() const;
  void set_isreserved(::google::protobuf::int32 value);

  // int32 ExchID = 23;
  void clear_exchid();
  static const int kExchIDFieldNumber = 23;
  ::google::protobuf::int32 exchid() const;
  void set_exchid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageFormat.OrderStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uniid_;
  ::google::protobuf::internal::ArenaStringPtr clordid_;
  ::google::protobuf::internal::ArenaStringPtr userdef_;
  ::google::protobuf::internal::ArenaStringPtr brokerid_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr subacc_;
  ::google::protobuf::internal::ArenaStringPtr side_;
  ::google::protobuf::internal::ArenaStringPtr securitytype_;
  ::google::protobuf::internal::ArenaStringPtr fcode_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::internal::ArenaStringPtr segmkt_;
  ::google::protobuf::internal::ArenaStringPtr price1_;
  ::google::protobuf::internal::ArenaStringPtr price2_;
  ::google::protobuf::internal::ArenaStringPtr qty1_;
  ::google::protobuf::internal::ArenaStringPtr qty2_;
  ::google::protobuf::internal::ArenaStringPtr ordno_;
  ::google::protobuf::internal::ArenaStringPtr ordtype_;
  ::google::protobuf::internal::ArenaStringPtr timeinforce_;
  ::google::protobuf::internal::ArenaStringPtr openoff_;
  ::google::protobuf::internal::ArenaStringPtr scforce_;
  ::google::protobuf::internal::ArenaStringPtr reservecondition_;
  ::google::protobuf::int32 isreserved_;
  ::google::protobuf::int32 exchid_;
  mutable int _cached_size_;
  friend struct protobuf_MessageFormat_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenericMessage

// .MessageFormat.ENUM_ActionType ActionType = 1;
inline void GenericMessage::clear_actiontype() {
  actiontype_ = 0;
}
inline ::MessageFormat::ENUM_ActionType GenericMessage::actiontype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.GenericMessage.ActionType)
  return static_cast< ::MessageFormat::ENUM_ActionType >(actiontype_);
}
inline void GenericMessage::set_actiontype(::MessageFormat::ENUM_ActionType value) {
  
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:MessageFormat.GenericMessage.ActionType)
}

// .MessageFormat.MsgDataStruct MsgData = 2;
inline bool GenericMessage::has_msgdata() const {
  return message_case() == kMsgData;
}
inline void GenericMessage::set_has_msgdata() {
  _oneof_case_[0] = kMsgData;
}
inline void GenericMessage::clear_msgdata() {
  if (has_msgdata()) {
    delete message_.msgdata_;
    clear_has_message();
  }
}
inline  const ::MessageFormat::MsgDataStruct& GenericMessage::msgdata() const {
  // @@protoc_insertion_point(field_get:MessageFormat.GenericMessage.MsgData)
  return has_msgdata()
      ? *message_.msgdata_
      : ::MessageFormat::MsgDataStruct::default_instance();
}
inline ::MessageFormat::MsgDataStruct* GenericMessage::mutable_msgdata() {
  if (!has_msgdata()) {
    clear_message();
    set_has_msgdata();
    message_.msgdata_ = new ::MessageFormat::MsgDataStruct;
  }
  // @@protoc_insertion_point(field_mutable:MessageFormat.GenericMessage.MsgData)
  return message_.msgdata_;
}
inline ::MessageFormat::MsgDataStruct* GenericMessage::release_msgdata() {
  // @@protoc_insertion_point(field_release:MessageFormat.GenericMessage.MsgData)
  if (has_msgdata()) {
    clear_has_message();
    ::MessageFormat::MsgDataStruct* temp = message_.msgdata_;
    message_.msgdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GenericMessage::set_allocated_msgdata(::MessageFormat::MsgDataStruct* msgdata) {
  clear_message();
  if (msgdata) {
    set_has_msgdata();
    message_.msgdata_ = msgdata;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.GenericMessage.MsgData)
}

// .MessageFormat.OrderStruct OrderData = 3;
inline bool GenericMessage::has_orderdata() const {
  return message_case() == kOrderData;
}
inline void GenericMessage::set_has_orderdata() {
  _oneof_case_[0] = kOrderData;
}
inline void GenericMessage::clear_orderdata() {
  if (has_orderdata()) {
    delete message_.orderdata_;
    clear_has_message();
  }
}
inline  const ::MessageFormat::OrderStruct& GenericMessage::orderdata() const {
  // @@protoc_insertion_point(field_get:MessageFormat.GenericMessage.OrderData)
  return has_orderdata()
      ? *message_.orderdata_
      : ::MessageFormat::OrderStruct::default_instance();
}
inline ::MessageFormat::OrderStruct* GenericMessage::mutable_orderdata() {
  if (!has_orderdata()) {
    clear_message();
    set_has_orderdata();
    message_.orderdata_ = new ::MessageFormat::OrderStruct;
  }
  // @@protoc_insertion_point(field_mutable:MessageFormat.GenericMessage.OrderData)
  return message_.orderdata_;
}
inline ::MessageFormat::OrderStruct* GenericMessage::release_orderdata() {
  // @@protoc_insertion_point(field_release:MessageFormat.GenericMessage.OrderData)
  if (has_orderdata()) {
    clear_has_message();
    ::MessageFormat::OrderStruct* temp = message_.orderdata_;
    message_.orderdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GenericMessage::set_allocated_orderdata(::MessageFormat::OrderStruct* orderdata) {
  clear_message();
  if (orderdata) {
    set_has_orderdata();
    message_.orderdata_ = orderdata;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.GenericMessage.OrderData)
}

// .MessageFormat.ReportStruct ReportData = 4;
inline bool GenericMessage::has_reportdata() const {
  return message_case() == kReportData;
}
inline void GenericMessage::set_has_reportdata() {
  _oneof_case_[0] = kReportData;
}
inline void GenericMessage::clear_reportdata() {
  if (has_reportdata()) {
    delete message_.reportdata_;
    clear_has_message();
  }
}
inline  const ::MessageFormat::ReportStruct& GenericMessage::reportdata() const {
  // @@protoc_insertion_point(field_get:MessageFormat.GenericMessage.ReportData)
  return has_reportdata()
      ? *message_.reportdata_
      : ::MessageFormat::ReportStruct::default_instance();
}
inline ::MessageFormat::ReportStruct* GenericMessage::mutable_reportdata() {
  if (!has_reportdata()) {
    clear_message();
    set_has_reportdata();
    message_.reportdata_ = new ::MessageFormat::ReportStruct;
  }
  // @@protoc_insertion_point(field_mutable:MessageFormat.GenericMessage.ReportData)
  return message_.reportdata_;
}
inline ::MessageFormat::ReportStruct* GenericMessage::release_reportdata() {
  // @@protoc_insertion_point(field_release:MessageFormat.GenericMessage.ReportData)
  if (has_reportdata()) {
    clear_has_message();
    ::MessageFormat::ReportStruct* temp = message_.reportdata_;
    message_.reportdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GenericMessage::set_allocated_reportdata(::MessageFormat::ReportStruct* reportdata) {
  clear_message();
  if (reportdata) {
    set_has_reportdata();
    message_.reportdata_ = reportdata;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.GenericMessage.ReportData)
}

// .MessageFormat.MatchStruct MatchData = 5;
inline bool GenericMessage::has_matchdata() const {
  return message_case() == kMatchData;
}
inline void GenericMessage::set_has_matchdata() {
  _oneof_case_[0] = kMatchData;
}
inline void GenericMessage::clear_matchdata() {
  if (has_matchdata()) {
    delete message_.matchdata_;
    clear_has_message();
  }
}
inline  const ::MessageFormat::MatchStruct& GenericMessage::matchdata() const {
  // @@protoc_insertion_point(field_get:MessageFormat.GenericMessage.MatchData)
  return has_matchdata()
      ? *message_.matchdata_
      : ::MessageFormat::MatchStruct::default_instance();
}
inline ::MessageFormat::MatchStruct* GenericMessage::mutable_matchdata() {
  if (!has_matchdata()) {
    clear_message();
    set_has_matchdata();
    message_.matchdata_ = new ::MessageFormat::MatchStruct;
  }
  // @@protoc_insertion_point(field_mutable:MessageFormat.GenericMessage.MatchData)
  return message_.matchdata_;
}
inline ::MessageFormat::MatchStruct* GenericMessage::release_matchdata() {
  // @@protoc_insertion_point(field_release:MessageFormat.GenericMessage.MatchData)
  if (has_matchdata()) {
    clear_has_message();
    ::MessageFormat::MatchStruct* temp = message_.matchdata_;
    message_.matchdata_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void GenericMessage::set_allocated_matchdata(::MessageFormat::MatchStruct* matchdata) {
  clear_message();
  if (matchdata) {
    set_has_matchdata();
    message_.matchdata_ = matchdata;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.GenericMessage.MatchData)
}

inline bool GenericMessage::has_message() const {
  return message_case() != MESSAGE_NOT_SET;
}
inline void GenericMessage::clear_has_message() {
  _oneof_case_[0] = MESSAGE_NOT_SET;
}
inline GenericMessage::MessageCase GenericMessage::message_case() const {
  return GenericMessage::MessageCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MsgDataStruct

// string Action = 1;
inline void MsgDataStruct::clear_action() {
  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDataStruct::action() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MsgDataStruct.Action)
  return action_.GetNoArena();
}
inline void MsgDataStruct::set_action(const ::std::string& value) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MsgDataStruct.Action)
}
#if LANG_CXX11
inline void MsgDataStruct::set_action(::std::string&& value) {
  
  action_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MsgDataStruct.Action)
}
#endif
inline void MsgDataStruct::set_action(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MsgDataStruct.Action)
}
inline void MsgDataStruct::set_action(const char* value, size_t size) {
  
  action_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MsgDataStruct.Action)
}
inline ::std::string* MsgDataStruct::mutable_action() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MsgDataStruct.Action)
  return action_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDataStruct::release_action() {
  // @@protoc_insertion_point(field_release:MessageFormat.MsgDataStruct.Action)
  
  return action_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDataStruct::set_allocated_action(::std::string* action) {
  if (action != NULL) {
    
  } else {
    
  }
  action_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MsgDataStruct.Action)
}

// map<string, string> StringMap = 2;
inline int MsgDataStruct::stringmap_size() const {
  return stringmap_.size();
}
inline void MsgDataStruct::clear_stringmap() {
  stringmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
MsgDataStruct::stringmap() const {
  // @@protoc_insertion_point(field_map:MessageFormat.MsgDataStruct.StringMap)
  return stringmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
MsgDataStruct::mutable_stringmap() {
  // @@protoc_insertion_point(field_mutable_map:MessageFormat.MsgDataStruct.StringMap)
  return stringmap_.MutableMap();
}

// map<string, int64> Int64Map = 3;
inline int MsgDataStruct::int64map_size() const {
  return int64map_.size();
}
inline void MsgDataStruct::clear_int64map() {
  int64map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
MsgDataStruct::int64map() const {
  // @@protoc_insertion_point(field_map:MessageFormat.MsgDataStruct.Int64Map)
  return int64map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
MsgDataStruct::mutable_int64map() {
  // @@protoc_insertion_point(field_mutable_map:MessageFormat.MsgDataStruct.Int64Map)
  return int64map_.MutableMap();
}

// map<string, double> DoubleMap = 4;
inline int MsgDataStruct::doublemap_size() const {
  return doublemap_.size();
}
inline void MsgDataStruct::clear_doublemap() {
  doublemap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
MsgDataStruct::doublemap() const {
  // @@protoc_insertion_point(field_map:MessageFormat.MsgDataStruct.DoubleMap)
  return doublemap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
MsgDataStruct::mutable_doublemap() {
  // @@protoc_insertion_point(field_mutable_map:MessageFormat.MsgDataStruct.DoubleMap)
  return doublemap_.MutableMap();
}

// -------------------------------------------------------------------

// ReportStruct

// string UniID = 1;
inline void ReportStruct::clear_uniid() {
  uniid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::uniid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.UniID)
  return uniid_.GetNoArena();
}
inline void ReportStruct::set_uniid(const ::std::string& value) {
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.UniID)
}
#if LANG_CXX11
inline void ReportStruct::set_uniid(::std::string&& value) {
  
  uniid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.UniID)
}
#endif
inline void ReportStruct::set_uniid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.UniID)
}
inline void ReportStruct::set_uniid(const char* value, size_t size) {
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.UniID)
}
inline ::std::string* ReportStruct::mutable_uniid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.UniID)
  return uniid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_uniid() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.UniID)
  
  return uniid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_uniid(::std::string* uniid) {
  if (uniid != NULL) {
    
  } else {
    
  }
  uniid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uniid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.UniID)
}

// string ClOrdID = 2;
inline void ReportStruct::clear_clordid() {
  clordid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::clordid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.ClOrdID)
  return clordid_.GetNoArena();
}
inline void ReportStruct::set_clordid(const ::std::string& value) {
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.ClOrdID)
}
#if LANG_CXX11
inline void ReportStruct::set_clordid(::std::string&& value) {
  
  clordid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.ClOrdID)
}
#endif
inline void ReportStruct::set_clordid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.ClOrdID)
}
inline void ReportStruct::set_clordid(const char* value, size_t size) {
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.ClOrdID)
}
inline ::std::string* ReportStruct::mutable_clordid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.ClOrdID)
  return clordid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_clordid() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.ClOrdID)
  
  return clordid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_clordid(::std::string* clordid) {
  if (clordid != NULL) {
    
  } else {
    
  }
  clordid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clordid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.ClOrdID)
}

// string SrcIP = 3;
inline void ReportStruct::clear_srcip() {
  srcip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::srcip() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.SrcIP)
  return srcip_.GetNoArena();
}
inline void ReportStruct::set_srcip(const ::std::string& value) {
  
  srcip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.SrcIP)
}
#if LANG_CXX11
inline void ReportStruct::set_srcip(::std::string&& value) {
  
  srcip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.SrcIP)
}
#endif
inline void ReportStruct::set_srcip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  srcip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.SrcIP)
}
inline void ReportStruct::set_srcip(const char* value, size_t size) {
  
  srcip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.SrcIP)
}
inline ::std::string* ReportStruct::mutable_srcip() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.SrcIP)
  return srcip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_srcip() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.SrcIP)
  
  return srcip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_srcip(::std::string* srcip) {
  if (srcip != NULL) {
    
  } else {
    
  }
  srcip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcip);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.SrcIP)
}

// string UserDef = 4;
inline void ReportStruct::clear_userdef() {
  userdef_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::userdef() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.UserDef)
  return userdef_.GetNoArena();
}
inline void ReportStruct::set_userdef(const ::std::string& value) {
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.UserDef)
}
#if LANG_CXX11
inline void ReportStruct::set_userdef(::std::string&& value) {
  
  userdef_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.UserDef)
}
#endif
inline void ReportStruct::set_userdef(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.UserDef)
}
inline void ReportStruct::set_userdef(const char* value, size_t size) {
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.UserDef)
}
inline ::std::string* ReportStruct::mutable_userdef() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.UserDef)
  return userdef_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_userdef() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.UserDef)
  
  return userdef_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_userdef(::std::string* userdef) {
  if (userdef != NULL) {
    
  } else {
    
  }
  userdef_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userdef);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.UserDef)
}

// string BrokerID = 5;
inline void ReportStruct::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::brokerid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.BrokerID)
  return brokerid_.GetNoArena();
}
inline void ReportStruct::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.BrokerID)
}
#if LANG_CXX11
inline void ReportStruct::set_brokerid(::std::string&& value) {
  
  brokerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.BrokerID)
}
#endif
inline void ReportStruct::set_brokerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.BrokerID)
}
inline void ReportStruct::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.BrokerID)
}
inline ::std::string* ReportStruct::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.BrokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_brokerid() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.BrokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.BrokerID)
}

// string Account = 6;
inline void ReportStruct::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::account() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.Account)
  return account_.GetNoArena();
}
inline void ReportStruct::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.Account)
}
#if LANG_CXX11
inline void ReportStruct::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.Account)
}
#endif
inline void ReportStruct::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.Account)
}
inline void ReportStruct::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.Account)
}
inline ::std::string* ReportStruct::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_account() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.Account)
}

// string SubAcc = 7;
inline void ReportStruct::clear_subacc() {
  subacc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::subacc() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.SubAcc)
  return subacc_.GetNoArena();
}
inline void ReportStruct::set_subacc(const ::std::string& value) {
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.SubAcc)
}
#if LANG_CXX11
inline void ReportStruct::set_subacc(::std::string&& value) {
  
  subacc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.SubAcc)
}
#endif
inline void ReportStruct::set_subacc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.SubAcc)
}
inline void ReportStruct::set_subacc(const char* value, size_t size) {
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.SubAcc)
}
inline ::std::string* ReportStruct::mutable_subacc() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.SubAcc)
  return subacc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_subacc() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.SubAcc)
  
  return subacc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_subacc(::std::string* subacc) {
  if (subacc != NULL) {
    
  } else {
    
  }
  subacc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subacc);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.SubAcc)
}

// string Side = 8;
inline void ReportStruct::clear_side() {
  side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::side() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.Side)
  return side_.GetNoArena();
}
inline void ReportStruct::set_side(const ::std::string& value) {
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.Side)
}
#if LANG_CXX11
inline void ReportStruct::set_side(::std::string&& value) {
  
  side_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.Side)
}
#endif
inline void ReportStruct::set_side(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.Side)
}
inline void ReportStruct::set_side(const char* value, size_t size) {
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.Side)
}
inline ::std::string* ReportStruct::mutable_side() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.Side)
  return side_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_side() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.Side)
  
  return side_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_side(::std::string* side) {
  if (side != NULL) {
    
  } else {
    
  }
  side_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), side);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.Side)
}

// string SecurityType = 9;
inline void ReportStruct::clear_securitytype() {
  securitytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::securitytype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.SecurityType)
  return securitytype_.GetNoArena();
}
inline void ReportStruct::set_securitytype(const ::std::string& value) {
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.SecurityType)
}
#if LANG_CXX11
inline void ReportStruct::set_securitytype(::std::string&& value) {
  
  securitytype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.SecurityType)
}
#endif
inline void ReportStruct::set_securitytype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.SecurityType)
}
inline void ReportStruct::set_securitytype(const char* value, size_t size) {
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.SecurityType)
}
inline ::std::string* ReportStruct::mutable_securitytype() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.SecurityType)
  return securitytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_securitytype() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.SecurityType)
  
  return securitytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_securitytype(::std::string* securitytype) {
  if (securitytype != NULL) {
    
  } else {
    
  }
  securitytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytype);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.SecurityType)
}

// string Fcode = 10;
inline void ReportStruct::clear_fcode() {
  fcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::fcode() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.Fcode)
  return fcode_.GetNoArena();
}
inline void ReportStruct::set_fcode(const ::std::string& value) {
  
  fcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.Fcode)
}
#if LANG_CXX11
inline void ReportStruct::set_fcode(::std::string&& value) {
  
  fcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.Fcode)
}
#endif
inline void ReportStruct::set_fcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.Fcode)
}
inline void ReportStruct::set_fcode(const char* value, size_t size) {
  
  fcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.Fcode)
}
inline ::std::string* ReportStruct::mutable_fcode() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.Fcode)
  return fcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_fcode() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.Fcode)
  
  return fcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_fcode(::std::string* fcode) {
  if (fcode != NULL) {
    
  } else {
    
  }
  fcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fcode);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.Fcode)
}

// string Symbol = 11;
inline void ReportStruct::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::symbol() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.Symbol)
  return symbol_.GetNoArena();
}
inline void ReportStruct::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.Symbol)
}
#if LANG_CXX11
inline void ReportStruct::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.Symbol)
}
#endif
inline void ReportStruct::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.Symbol)
}
inline void ReportStruct::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.Symbol)
}
inline ::std::string* ReportStruct::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_symbol() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.Symbol)
}

// string SegMkt = 12;
inline void ReportStruct::clear_segmkt() {
  segmkt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::segmkt() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.SegMkt)
  return segmkt_.GetNoArena();
}
inline void ReportStruct::set_segmkt(const ::std::string& value) {
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.SegMkt)
}
#if LANG_CXX11
inline void ReportStruct::set_segmkt(::std::string&& value) {
  
  segmkt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.SegMkt)
}
#endif
inline void ReportStruct::set_segmkt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.SegMkt)
}
inline void ReportStruct::set_segmkt(const char* value, size_t size) {
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.SegMkt)
}
inline ::std::string* ReportStruct::mutable_segmkt() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.SegMkt)
  return segmkt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_segmkt() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.SegMkt)
  
  return segmkt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_segmkt(::std::string* segmkt) {
  if (segmkt != NULL) {
    
  } else {
    
  }
  segmkt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segmkt);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.SegMkt)
}

// string OrgPrice1 = 13;
inline void ReportStruct::clear_orgprice1() {
  orgprice1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::orgprice1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrgPrice1)
  return orgprice1_.GetNoArena();
}
inline void ReportStruct::set_orgprice1(const ::std::string& value) {
  
  orgprice1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrgPrice1)
}
#if LANG_CXX11
inline void ReportStruct::set_orgprice1(::std::string&& value) {
  
  orgprice1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrgPrice1)
}
#endif
inline void ReportStruct::set_orgprice1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orgprice1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrgPrice1)
}
inline void ReportStruct::set_orgprice1(const char* value, size_t size) {
  
  orgprice1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrgPrice1)
}
inline ::std::string* ReportStruct::mutable_orgprice1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrgPrice1)
  return orgprice1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_orgprice1() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrgPrice1)
  
  return orgprice1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_orgprice1(::std::string* orgprice1) {
  if (orgprice1 != NULL) {
    
  } else {
    
  }
  orgprice1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgprice1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrgPrice1)
}

// string OrgPrice2 = 14;
inline void ReportStruct::clear_orgprice2() {
  orgprice2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::orgprice2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrgPrice2)
  return orgprice2_.GetNoArena();
}
inline void ReportStruct::set_orgprice2(const ::std::string& value) {
  
  orgprice2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrgPrice2)
}
#if LANG_CXX11
inline void ReportStruct::set_orgprice2(::std::string&& value) {
  
  orgprice2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrgPrice2)
}
#endif
inline void ReportStruct::set_orgprice2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orgprice2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrgPrice2)
}
inline void ReportStruct::set_orgprice2(const char* value, size_t size) {
  
  orgprice2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrgPrice2)
}
inline ::std::string* ReportStruct::mutable_orgprice2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrgPrice2)
  return orgprice2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_orgprice2() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrgPrice2)
  
  return orgprice2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_orgprice2(::std::string* orgprice2) {
  if (orgprice2 != NULL) {
    
  } else {
    
  }
  orgprice2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgprice2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrgPrice2)
}

// string OrgQty1 = 15;
inline void ReportStruct::clear_orgqty1() {
  orgqty1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::orgqty1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrgQty1)
  return orgqty1_.GetNoArena();
}
inline void ReportStruct::set_orgqty1(const ::std::string& value) {
  
  orgqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrgQty1)
}
#if LANG_CXX11
inline void ReportStruct::set_orgqty1(::std::string&& value) {
  
  orgqty1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrgQty1)
}
#endif
inline void ReportStruct::set_orgqty1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orgqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrgQty1)
}
inline void ReportStruct::set_orgqty1(const char* value, size_t size) {
  
  orgqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrgQty1)
}
inline ::std::string* ReportStruct::mutable_orgqty1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrgQty1)
  return orgqty1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_orgqty1() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrgQty1)
  
  return orgqty1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_orgqty1(::std::string* orgqty1) {
  if (orgqty1 != NULL) {
    
  } else {
    
  }
  orgqty1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgqty1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrgQty1)
}

// string OrgQty2 = 16;
inline void ReportStruct::clear_orgqty2() {
  orgqty2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::orgqty2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrgQty2)
  return orgqty2_.GetNoArena();
}
inline void ReportStruct::set_orgqty2(const ::std::string& value) {
  
  orgqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrgQty2)
}
#if LANG_CXX11
inline void ReportStruct::set_orgqty2(::std::string&& value) {
  
  orgqty2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrgQty2)
}
#endif
inline void ReportStruct::set_orgqty2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orgqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrgQty2)
}
inline void ReportStruct::set_orgqty2(const char* value, size_t size) {
  
  orgqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrgQty2)
}
inline ::std::string* ReportStruct::mutable_orgqty2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrgQty2)
  return orgqty2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_orgqty2() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrgQty2)
  
  return orgqty2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_orgqty2(::std::string* orgqty2) {
  if (orgqty2 != NULL) {
    
  } else {
    
  }
  orgqty2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgqty2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrgQty2)
}

// string OrdNo = 17;
inline void ReportStruct::clear_ordno() {
  ordno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::ordno() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrdNo)
  return ordno_.GetNoArena();
}
inline void ReportStruct::set_ordno(const ::std::string& value) {
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrdNo)
}
#if LANG_CXX11
inline void ReportStruct::set_ordno(::std::string&& value) {
  
  ordno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrdNo)
}
#endif
inline void ReportStruct::set_ordno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrdNo)
}
inline void ReportStruct::set_ordno(const char* value, size_t size) {
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrdNo)
}
inline ::std::string* ReportStruct::mutable_ordno() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrdNo)
  return ordno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_ordno() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrdNo)
  
  return ordno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_ordno(::std::string* ordno) {
  if (ordno != NULL) {
    
  } else {
    
  }
  ordno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordno);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrdNo)
}

// string Price1 = 18;
inline void ReportStruct::clear_price1() {
  price1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::price1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.Price1)
  return price1_.GetNoArena();
}
inline void ReportStruct::set_price1(const ::std::string& value) {
  
  price1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.Price1)
}
#if LANG_CXX11
inline void ReportStruct::set_price1(::std::string&& value) {
  
  price1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.Price1)
}
#endif
inline void ReportStruct::set_price1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.Price1)
}
inline void ReportStruct::set_price1(const char* value, size_t size) {
  
  price1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.Price1)
}
inline ::std::string* ReportStruct::mutable_price1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.Price1)
  return price1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_price1() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.Price1)
  
  return price1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_price1(::std::string* price1) {
  if (price1 != NULL) {
    
  } else {
    
  }
  price1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.Price1)
}

// string OrdType = 19;
inline void ReportStruct::clear_ordtype() {
  ordtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::ordtype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrdType)
  return ordtype_.GetNoArena();
}
inline void ReportStruct::set_ordtype(const ::std::string& value) {
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrdType)
}
#if LANG_CXX11
inline void ReportStruct::set_ordtype(::std::string&& value) {
  
  ordtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrdType)
}
#endif
inline void ReportStruct::set_ordtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrdType)
}
inline void ReportStruct::set_ordtype(const char* value, size_t size) {
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrdType)
}
inline ::std::string* ReportStruct::mutable_ordtype() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrdType)
  return ordtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_ordtype() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrdType)
  
  return ordtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_ordtype(::std::string* ordtype) {
  if (ordtype != NULL) {
    
  } else {
    
  }
  ordtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordtype);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrdType)
}

// string TimeInForce = 20;
inline void ReportStruct::clear_timeinforce() {
  timeinforce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::timeinforce() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.TimeInForce)
  return timeinforce_.GetNoArena();
}
inline void ReportStruct::set_timeinforce(const ::std::string& value) {
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.TimeInForce)
}
#if LANG_CXX11
inline void ReportStruct::set_timeinforce(::std::string&& value) {
  
  timeinforce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.TimeInForce)
}
#endif
inline void ReportStruct::set_timeinforce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.TimeInForce)
}
inline void ReportStruct::set_timeinforce(const char* value, size_t size) {
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.TimeInForce)
}
inline ::std::string* ReportStruct::mutable_timeinforce() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.TimeInForce)
  return timeinforce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_timeinforce() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.TimeInForce)
  
  return timeinforce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_timeinforce(::std::string* timeinforce) {
  if (timeinforce != NULL) {
    
  } else {
    
  }
  timeinforce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeinforce);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.TimeInForce)
}

// string OpenOff = 21;
inline void ReportStruct::clear_openoff() {
  openoff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::openoff() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OpenOff)
  return openoff_.GetNoArena();
}
inline void ReportStruct::set_openoff(const ::std::string& value) {
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OpenOff)
}
#if LANG_CXX11
inline void ReportStruct::set_openoff(::std::string&& value) {
  
  openoff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OpenOff)
}
#endif
inline void ReportStruct::set_openoff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OpenOff)
}
inline void ReportStruct::set_openoff(const char* value, size_t size) {
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OpenOff)
}
inline ::std::string* ReportStruct::mutable_openoff() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OpenOff)
  return openoff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_openoff() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OpenOff)
  
  return openoff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_openoff(::std::string* openoff) {
  if (openoff != NULL) {
    
  } else {
    
  }
  openoff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openoff);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OpenOff)
}

// string LeavesQty1 = 22;
inline void ReportStruct::clear_leavesqty1() {
  leavesqty1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::leavesqty1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.LeavesQty1)
  return leavesqty1_.GetNoArena();
}
inline void ReportStruct::set_leavesqty1(const ::std::string& value) {
  
  leavesqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.LeavesQty1)
}
#if LANG_CXX11
inline void ReportStruct::set_leavesqty1(::std::string&& value) {
  
  leavesqty1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.LeavesQty1)
}
#endif
inline void ReportStruct::set_leavesqty1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leavesqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.LeavesQty1)
}
inline void ReportStruct::set_leavesqty1(const char* value, size_t size) {
  
  leavesqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.LeavesQty1)
}
inline ::std::string* ReportStruct::mutable_leavesqty1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.LeavesQty1)
  return leavesqty1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_leavesqty1() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.LeavesQty1)
  
  return leavesqty1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_leavesqty1(::std::string* leavesqty1) {
  if (leavesqty1 != NULL) {
    
  } else {
    
  }
  leavesqty1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leavesqty1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.LeavesQty1)
}

// string LeavesQty2 = 23;
inline void ReportStruct::clear_leavesqty2() {
  leavesqty2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::leavesqty2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.LeavesQty2)
  return leavesqty2_.GetNoArena();
}
inline void ReportStruct::set_leavesqty2(const ::std::string& value) {
  
  leavesqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.LeavesQty2)
}
#if LANG_CXX11
inline void ReportStruct::set_leavesqty2(::std::string&& value) {
  
  leavesqty2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.LeavesQty2)
}
#endif
inline void ReportStruct::set_leavesqty2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leavesqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.LeavesQty2)
}
inline void ReportStruct::set_leavesqty2(const char* value, size_t size) {
  
  leavesqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.LeavesQty2)
}
inline ::std::string* ReportStruct::mutable_leavesqty2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.LeavesQty2)
  return leavesqty2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_leavesqty2() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.LeavesQty2)
  
  return leavesqty2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_leavesqty2(::std::string* leavesqty2) {
  if (leavesqty2 != NULL) {
    
  } else {
    
  }
  leavesqty2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leavesqty2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.LeavesQty2)
}

// string CumQty1 = 24;
inline void ReportStruct::clear_cumqty1() {
  cumqty1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::cumqty1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.CumQty1)
  return cumqty1_.GetNoArena();
}
inline void ReportStruct::set_cumqty1(const ::std::string& value) {
  
  cumqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.CumQty1)
}
#if LANG_CXX11
inline void ReportStruct::set_cumqty1(::std::string&& value) {
  
  cumqty1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.CumQty1)
}
#endif
inline void ReportStruct::set_cumqty1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cumqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.CumQty1)
}
inline void ReportStruct::set_cumqty1(const char* value, size_t size) {
  
  cumqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.CumQty1)
}
inline ::std::string* ReportStruct::mutable_cumqty1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.CumQty1)
  return cumqty1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_cumqty1() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.CumQty1)
  
  return cumqty1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_cumqty1(::std::string* cumqty1) {
  if (cumqty1 != NULL) {
    
  } else {
    
  }
  cumqty1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cumqty1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.CumQty1)
}

// string CumQty2 = 25;
inline void ReportStruct::clear_cumqty2() {
  cumqty2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::cumqty2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.CumQty2)
  return cumqty2_.GetNoArena();
}
inline void ReportStruct::set_cumqty2(const ::std::string& value) {
  
  cumqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.CumQty2)
}
#if LANG_CXX11
inline void ReportStruct::set_cumqty2(::std::string&& value) {
  
  cumqty2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.CumQty2)
}
#endif
inline void ReportStruct::set_cumqty2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cumqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.CumQty2)
}
inline void ReportStruct::set_cumqty2(const char* value, size_t size) {
  
  cumqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.CumQty2)
}
inline ::std::string* ReportStruct::mutable_cumqty2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.CumQty2)
  return cumqty2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_cumqty2() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.CumQty2)
  
  return cumqty2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_cumqty2(::std::string* cumqty2) {
  if (cumqty2 != NULL) {
    
  } else {
    
  }
  cumqty2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cumqty2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.CumQty2)
}

// string TradeDate = 26;
inline void ReportStruct::clear_tradedate() {
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::tradedate() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.TradeDate)
  return tradedate_.GetNoArena();
}
inline void ReportStruct::set_tradedate(const ::std::string& value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.TradeDate)
}
#if LANG_CXX11
inline void ReportStruct::set_tradedate(::std::string&& value) {
  
  tradedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.TradeDate)
}
#endif
inline void ReportStruct::set_tradedate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.TradeDate)
}
inline void ReportStruct::set_tradedate(const char* value, size_t size) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.TradeDate)
}
inline ::std::string* ReportStruct::mutable_tradedate() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.TradeDate)
  return tradedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_tradedate() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.TradeDate)
  
  return tradedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_tradedate(::std::string* tradedate) {
  if (tradedate != NULL) {
    
  } else {
    
  }
  tradedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradedate);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.TradeDate)
}

// string TransactTime = 27;
inline void ReportStruct::clear_transacttime() {
  transacttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::transacttime() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.TransactTime)
  return transacttime_.GetNoArena();
}
inline void ReportStruct::set_transacttime(const ::std::string& value) {
  
  transacttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.TransactTime)
}
#if LANG_CXX11
inline void ReportStruct::set_transacttime(::std::string&& value) {
  
  transacttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.TransactTime)
}
#endif
inline void ReportStruct::set_transacttime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transacttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.TransactTime)
}
inline void ReportStruct::set_transacttime(const char* value, size_t size) {
  
  transacttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.TransactTime)
}
inline ::std::string* ReportStruct::mutable_transacttime() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.TransactTime)
  return transacttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_transacttime() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.TransactTime)
  
  return transacttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_transacttime(::std::string* transacttime) {
  if (transacttime != NULL) {
    
  } else {
    
  }
  transacttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transacttime);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.TransactTime)
}

// string OrdStatus = 28;
inline void ReportStruct::clear_ordstatus() {
  ordstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::ordstatus() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrdStatus)
  return ordstatus_.GetNoArena();
}
inline void ReportStruct::set_ordstatus(const ::std::string& value) {
  
  ordstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrdStatus)
}
#if LANG_CXX11
inline void ReportStruct::set_ordstatus(::std::string&& value) {
  
  ordstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrdStatus)
}
#endif
inline void ReportStruct::set_ordstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrdStatus)
}
inline void ReportStruct::set_ordstatus(const char* value, size_t size) {
  
  ordstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrdStatus)
}
inline ::std::string* ReportStruct::mutable_ordstatus() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrdStatus)
  return ordstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_ordstatus() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrdStatus)
  
  return ordstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_ordstatus(::std::string* ordstatus) {
  if (ordstatus != NULL) {
    
  } else {
    
  }
  ordstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordstatus);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrdStatus)
}

// string Msg = 29;
inline void ReportStruct::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::msg() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.Msg)
  return msg_.GetNoArena();
}
inline void ReportStruct::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.Msg)
}
#if LANG_CXX11
inline void ReportStruct::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.Msg)
}
#endif
inline void ReportStruct::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.Msg)
}
inline void ReportStruct::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.Msg)
}
inline ::std::string* ReportStruct::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_msg() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.Msg)
}

// string IsRecovered = 30;
inline void ReportStruct::clear_isrecovered() {
  isrecovered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::isrecovered() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.IsRecovered)
  return isrecovered_.GetNoArena();
}
inline void ReportStruct::set_isrecovered(const ::std::string& value) {
  
  isrecovered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.IsRecovered)
}
#if LANG_CXX11
inline void ReportStruct::set_isrecovered(::std::string&& value) {
  
  isrecovered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.IsRecovered)
}
#endif
inline void ReportStruct::set_isrecovered(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  isrecovered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.IsRecovered)
}
inline void ReportStruct::set_isrecovered(const char* value, size_t size) {
  
  isrecovered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.IsRecovered)
}
inline ::std::string* ReportStruct::mutable_isrecovered() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.IsRecovered)
  return isrecovered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_isrecovered() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.IsRecovered)
  
  return isrecovered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_isrecovered(::std::string* isrecovered) {
  if (isrecovered != NULL) {
    
  } else {
    
  }
  isrecovered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), isrecovered);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.IsRecovered)
}

// string FcmID_SessionID = 31;
inline void ReportStruct::clear_fcmid_sessionid() {
  fcmid_sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::fcmid_sessionid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.FcmID_SessionID)
  return fcmid_sessionid_.GetNoArena();
}
inline void ReportStruct::set_fcmid_sessionid(const ::std::string& value) {
  
  fcmid_sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.FcmID_SessionID)
}
#if LANG_CXX11
inline void ReportStruct::set_fcmid_sessionid(::std::string&& value) {
  
  fcmid_sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.FcmID_SessionID)
}
#endif
inline void ReportStruct::set_fcmid_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fcmid_sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.FcmID_SessionID)
}
inline void ReportStruct::set_fcmid_sessionid(const char* value, size_t size) {
  
  fcmid_sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.FcmID_SessionID)
}
inline ::std::string* ReportStruct::mutable_fcmid_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.FcmID_SessionID)
  return fcmid_sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_fcmid_sessionid() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.FcmID_SessionID)
  
  return fcmid_sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_fcmid_sessionid(::std::string* fcmid_sessionid) {
  if (fcmid_sessionid != NULL) {
    
  } else {
    
  }
  fcmid_sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fcmid_sessionid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.FcmID_SessionID)
}

// string ScForce = 32;
inline void ReportStruct::clear_scforce() {
  scforce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::scforce() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.ScForce)
  return scforce_.GetNoArena();
}
inline void ReportStruct::set_scforce(const ::std::string& value) {
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.ScForce)
}
#if LANG_CXX11
inline void ReportStruct::set_scforce(::std::string&& value) {
  
  scforce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.ScForce)
}
#endif
inline void ReportStruct::set_scforce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.ScForce)
}
inline void ReportStruct::set_scforce(const char* value, size_t size) {
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.ScForce)
}
inline ::std::string* ReportStruct::mutable_scforce() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.ScForce)
  return scforce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_scforce() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.ScForce)
  
  return scforce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_scforce(::std::string* scforce) {
  if (scforce != NULL) {
    
  } else {
    
  }
  scforce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scforce);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.ScForce)
}

// string ExchangeCode = 33;
inline void ReportStruct::clear_exchangecode() {
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::exchangecode() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.ExchangeCode)
  return exchangecode_.GetNoArena();
}
inline void ReportStruct::set_exchangecode(const ::std::string& value) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.ExchangeCode)
}
#if LANG_CXX11
inline void ReportStruct::set_exchangecode(::std::string&& value) {
  
  exchangecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.ExchangeCode)
}
#endif
inline void ReportStruct::set_exchangecode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.ExchangeCode)
}
inline void ReportStruct::set_exchangecode(const char* value, size_t size) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.ExchangeCode)
}
inline ::std::string* ReportStruct::mutable_exchangecode() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.ExchangeCode)
  return exchangecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_exchangecode() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.ExchangeCode)
  
  return exchangecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_exchangecode(::std::string* exchangecode) {
  if (exchangecode != NULL) {
    
  } else {
    
  }
  exchangecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangecode);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.ExchangeCode)
}

// string OrderChannel = 34;
inline void ReportStruct::clear_orderchannel() {
  orderchannel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::orderchannel() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrderChannel)
  return orderchannel_.GetNoArena();
}
inline void ReportStruct::set_orderchannel(const ::std::string& value) {
  
  orderchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrderChannel)
}
#if LANG_CXX11
inline void ReportStruct::set_orderchannel(::std::string&& value) {
  
  orderchannel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrderChannel)
}
#endif
inline void ReportStruct::set_orderchannel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orderchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrderChannel)
}
inline void ReportStruct::set_orderchannel(const char* value, size_t size) {
  
  orderchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrderChannel)
}
inline ::std::string* ReportStruct::mutable_orderchannel() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrderChannel)
  return orderchannel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_orderchannel() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrderChannel)
  
  return orderchannel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_orderchannel(::std::string* orderchannel) {
  if (orderchannel != NULL) {
    
  } else {
    
  }
  orderchannel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderchannel);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrderChannel)
}

// string OrdTime = 35;
inline void ReportStruct::clear_ordtime() {
  ordtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportStruct::ordtime() const {
  // @@protoc_insertion_point(field_get:MessageFormat.ReportStruct.OrdTime)
  return ordtime_.GetNoArena();
}
inline void ReportStruct::set_ordtime(const ::std::string& value) {
  
  ordtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.ReportStruct.OrdTime)
}
#if LANG_CXX11
inline void ReportStruct::set_ordtime(::std::string&& value) {
  
  ordtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.ReportStruct.OrdTime)
}
#endif
inline void ReportStruct::set_ordtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.ReportStruct.OrdTime)
}
inline void ReportStruct::set_ordtime(const char* value, size_t size) {
  
  ordtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.ReportStruct.OrdTime)
}
inline ::std::string* ReportStruct::mutable_ordtime() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.ReportStruct.OrdTime)
  return ordtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportStruct::release_ordtime() {
  // @@protoc_insertion_point(field_release:MessageFormat.ReportStruct.OrdTime)
  
  return ordtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportStruct::set_allocated_ordtime(::std::string* ordtime) {
  if (ordtime != NULL) {
    
  } else {
    
  }
  ordtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordtime);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.ReportStruct.OrdTime)
}

// -------------------------------------------------------------------

// MatchStruct

// string UniID = 1;
inline void MatchStruct::clear_uniid() {
  uniid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::uniid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.UniID)
  return uniid_.GetNoArena();
}
inline void MatchStruct::set_uniid(const ::std::string& value) {
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.UniID)
}
#if LANG_CXX11
inline void MatchStruct::set_uniid(::std::string&& value) {
  
  uniid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.UniID)
}
#endif
inline void MatchStruct::set_uniid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.UniID)
}
inline void MatchStruct::set_uniid(const char* value, size_t size) {
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.UniID)
}
inline ::std::string* MatchStruct::mutable_uniid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.UniID)
  return uniid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_uniid() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.UniID)
  
  return uniid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_uniid(::std::string* uniid) {
  if (uniid != NULL) {
    
  } else {
    
  }
  uniid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uniid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.UniID)
}

// string ClOrdID = 2;
inline void MatchStruct::clear_clordid() {
  clordid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::clordid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.ClOrdID)
  return clordid_.GetNoArena();
}
inline void MatchStruct::set_clordid(const ::std::string& value) {
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.ClOrdID)
}
#if LANG_CXX11
inline void MatchStruct::set_clordid(::std::string&& value) {
  
  clordid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.ClOrdID)
}
#endif
inline void MatchStruct::set_clordid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.ClOrdID)
}
inline void MatchStruct::set_clordid(const char* value, size_t size) {
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.ClOrdID)
}
inline ::std::string* MatchStruct::mutable_clordid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.ClOrdID)
  return clordid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_clordid() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.ClOrdID)
  
  return clordid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_clordid(::std::string* clordid) {
  if (clordid != NULL) {
    
  } else {
    
  }
  clordid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clordid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.ClOrdID)
}

// string SrcIP = 3;
inline void MatchStruct::clear_srcip() {
  srcip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::srcip() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.SrcIP)
  return srcip_.GetNoArena();
}
inline void MatchStruct::set_srcip(const ::std::string& value) {
  
  srcip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.SrcIP)
}
#if LANG_CXX11
inline void MatchStruct::set_srcip(::std::string&& value) {
  
  srcip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.SrcIP)
}
#endif
inline void MatchStruct::set_srcip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  srcip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.SrcIP)
}
inline void MatchStruct::set_srcip(const char* value, size_t size) {
  
  srcip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.SrcIP)
}
inline ::std::string* MatchStruct::mutable_srcip() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.SrcIP)
  return srcip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_srcip() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.SrcIP)
  
  return srcip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_srcip(::std::string* srcip) {
  if (srcip != NULL) {
    
  } else {
    
  }
  srcip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcip);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.SrcIP)
}

// string UserDef = 4;
inline void MatchStruct::clear_userdef() {
  userdef_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::userdef() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.UserDef)
  return userdef_.GetNoArena();
}
inline void MatchStruct::set_userdef(const ::std::string& value) {
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.UserDef)
}
#if LANG_CXX11
inline void MatchStruct::set_userdef(::std::string&& value) {
  
  userdef_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.UserDef)
}
#endif
inline void MatchStruct::set_userdef(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.UserDef)
}
inline void MatchStruct::set_userdef(const char* value, size_t size) {
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.UserDef)
}
inline ::std::string* MatchStruct::mutable_userdef() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.UserDef)
  return userdef_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_userdef() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.UserDef)
  
  return userdef_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_userdef(::std::string* userdef) {
  if (userdef != NULL) {
    
  } else {
    
  }
  userdef_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userdef);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.UserDef)
}

// string BrokerID = 5;
inline void MatchStruct::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::brokerid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.BrokerID)
  return brokerid_.GetNoArena();
}
inline void MatchStruct::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.BrokerID)
}
#if LANG_CXX11
inline void MatchStruct::set_brokerid(::std::string&& value) {
  
  brokerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.BrokerID)
}
#endif
inline void MatchStruct::set_brokerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.BrokerID)
}
inline void MatchStruct::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.BrokerID)
}
inline ::std::string* MatchStruct::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.BrokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_brokerid() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.BrokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.BrokerID)
}

// string Account = 6;
inline void MatchStruct::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::account() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.Account)
  return account_.GetNoArena();
}
inline void MatchStruct::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.Account)
}
#if LANG_CXX11
inline void MatchStruct::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.Account)
}
#endif
inline void MatchStruct::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.Account)
}
inline void MatchStruct::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.Account)
}
inline ::std::string* MatchStruct::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_account() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.Account)
}

// string SubAcc = 7;
inline void MatchStruct::clear_subacc() {
  subacc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::subacc() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.SubAcc)
  return subacc_.GetNoArena();
}
inline void MatchStruct::set_subacc(const ::std::string& value) {
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.SubAcc)
}
#if LANG_CXX11
inline void MatchStruct::set_subacc(::std::string&& value) {
  
  subacc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.SubAcc)
}
#endif
inline void MatchStruct::set_subacc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.SubAcc)
}
inline void MatchStruct::set_subacc(const char* value, size_t size) {
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.SubAcc)
}
inline ::std::string* MatchStruct::mutable_subacc() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.SubAcc)
  return subacc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_subacc() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.SubAcc)
  
  return subacc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_subacc(::std::string* subacc) {
  if (subacc != NULL) {
    
  } else {
    
  }
  subacc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subacc);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.SubAcc)
}

// string Side = 8;
inline void MatchStruct::clear_side() {
  side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::side() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.Side)
  return side_.GetNoArena();
}
inline void MatchStruct::set_side(const ::std::string& value) {
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.Side)
}
#if LANG_CXX11
inline void MatchStruct::set_side(::std::string&& value) {
  
  side_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.Side)
}
#endif
inline void MatchStruct::set_side(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.Side)
}
inline void MatchStruct::set_side(const char* value, size_t size) {
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.Side)
}
inline ::std::string* MatchStruct::mutable_side() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.Side)
  return side_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_side() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.Side)
  
  return side_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_side(::std::string* side) {
  if (side != NULL) {
    
  } else {
    
  }
  side_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), side);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.Side)
}

// string SecurityType = 9;
inline void MatchStruct::clear_securitytype() {
  securitytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::securitytype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.SecurityType)
  return securitytype_.GetNoArena();
}
inline void MatchStruct::set_securitytype(const ::std::string& value) {
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.SecurityType)
}
#if LANG_CXX11
inline void MatchStruct::set_securitytype(::std::string&& value) {
  
  securitytype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.SecurityType)
}
#endif
inline void MatchStruct::set_securitytype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.SecurityType)
}
inline void MatchStruct::set_securitytype(const char* value, size_t size) {
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.SecurityType)
}
inline ::std::string* MatchStruct::mutable_securitytype() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.SecurityType)
  return securitytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_securitytype() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.SecurityType)
  
  return securitytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_securitytype(::std::string* securitytype) {
  if (securitytype != NULL) {
    
  } else {
    
  }
  securitytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytype);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.SecurityType)
}

// string Symbol = 10;
inline void MatchStruct::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::symbol() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.Symbol)
  return symbol_.GetNoArena();
}
inline void MatchStruct::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.Symbol)
}
#if LANG_CXX11
inline void MatchStruct::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.Symbol)
}
#endif
inline void MatchStruct::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.Symbol)
}
inline void MatchStruct::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.Symbol)
}
inline ::std::string* MatchStruct::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_symbol() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.Symbol)
}

// string SegMkt = 11;
inline void MatchStruct::clear_segmkt() {
  segmkt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::segmkt() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.SegMkt)
  return segmkt_.GetNoArena();
}
inline void MatchStruct::set_segmkt(const ::std::string& value) {
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.SegMkt)
}
#if LANG_CXX11
inline void MatchStruct::set_segmkt(::std::string&& value) {
  
  segmkt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.SegMkt)
}
#endif
inline void MatchStruct::set_segmkt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.SegMkt)
}
inline void MatchStruct::set_segmkt(const char* value, size_t size) {
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.SegMkt)
}
inline ::std::string* MatchStruct::mutable_segmkt() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.SegMkt)
  return segmkt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_segmkt() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.SegMkt)
  
  return segmkt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_segmkt(::std::string* segmkt) {
  if (segmkt != NULL) {
    
  } else {
    
  }
  segmkt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segmkt);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.SegMkt)
}

// string OrgPrice = 12;
inline void MatchStruct::clear_orgprice() {
  orgprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::orgprice() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrgPrice)
  return orgprice_.GetNoArena();
}
inline void MatchStruct::set_orgprice(const ::std::string& value) {
  
  orgprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrgPrice)
}
#if LANG_CXX11
inline void MatchStruct::set_orgprice(::std::string&& value) {
  
  orgprice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrgPrice)
}
#endif
inline void MatchStruct::set_orgprice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orgprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrgPrice)
}
inline void MatchStruct::set_orgprice(const char* value, size_t size) {
  
  orgprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrgPrice)
}
inline ::std::string* MatchStruct::mutable_orgprice() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrgPrice)
  return orgprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_orgprice() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrgPrice)
  
  return orgprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_orgprice(::std::string* orgprice) {
  if (orgprice != NULL) {
    
  } else {
    
  }
  orgprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgprice);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrgPrice)
}

// string OrgQty = 13;
inline void MatchStruct::clear_orgqty() {
  orgqty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::orgqty() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrgQty)
  return orgqty_.GetNoArena();
}
inline void MatchStruct::set_orgqty(const ::std::string& value) {
  
  orgqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrgQty)
}
#if LANG_CXX11
inline void MatchStruct::set_orgqty(::std::string&& value) {
  
  orgqty_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrgQty)
}
#endif
inline void MatchStruct::set_orgqty(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orgqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrgQty)
}
inline void MatchStruct::set_orgqty(const char* value, size_t size) {
  
  orgqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrgQty)
}
inline ::std::string* MatchStruct::mutable_orgqty() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrgQty)
  return orgqty_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_orgqty() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrgQty)
  
  return orgqty_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_orgqty(::std::string* orgqty) {
  if (orgqty != NULL) {
    
  } else {
    
  }
  orgqty_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orgqty);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrgQty)
}

// string OrdNo = 14;
inline void MatchStruct::clear_ordno() {
  ordno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::ordno() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrdNo)
  return ordno_.GetNoArena();
}
inline void MatchStruct::set_ordno(const ::std::string& value) {
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrdNo)
}
#if LANG_CXX11
inline void MatchStruct::set_ordno(::std::string&& value) {
  
  ordno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrdNo)
}
#endif
inline void MatchStruct::set_ordno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrdNo)
}
inline void MatchStruct::set_ordno(const char* value, size_t size) {
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrdNo)
}
inline ::std::string* MatchStruct::mutable_ordno() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrdNo)
  return ordno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_ordno() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrdNo)
  
  return ordno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_ordno(::std::string* ordno) {
  if (ordno != NULL) {
    
  } else {
    
  }
  ordno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordno);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrdNo)
}

// string OrdType = 15;
inline void MatchStruct::clear_ordtype() {
  ordtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::ordtype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrdType)
  return ordtype_.GetNoArena();
}
inline void MatchStruct::set_ordtype(const ::std::string& value) {
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrdType)
}
#if LANG_CXX11
inline void MatchStruct::set_ordtype(::std::string&& value) {
  
  ordtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrdType)
}
#endif
inline void MatchStruct::set_ordtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrdType)
}
inline void MatchStruct::set_ordtype(const char* value, size_t size) {
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrdType)
}
inline ::std::string* MatchStruct::mutable_ordtype() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrdType)
  return ordtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_ordtype() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrdType)
  
  return ordtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_ordtype(::std::string* ordtype) {
  if (ordtype != NULL) {
    
  } else {
    
  }
  ordtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordtype);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrdType)
}

// string TimeInForce = 16;
inline void MatchStruct::clear_timeinforce() {
  timeinforce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::timeinforce() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.TimeInForce)
  return timeinforce_.GetNoArena();
}
inline void MatchStruct::set_timeinforce(const ::std::string& value) {
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.TimeInForce)
}
#if LANG_CXX11
inline void MatchStruct::set_timeinforce(::std::string&& value) {
  
  timeinforce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.TimeInForce)
}
#endif
inline void MatchStruct::set_timeinforce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.TimeInForce)
}
inline void MatchStruct::set_timeinforce(const char* value, size_t size) {
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.TimeInForce)
}
inline ::std::string* MatchStruct::mutable_timeinforce() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.TimeInForce)
  return timeinforce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_timeinforce() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.TimeInForce)
  
  return timeinforce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_timeinforce(::std::string* timeinforce) {
  if (timeinforce != NULL) {
    
  } else {
    
  }
  timeinforce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeinforce);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.TimeInForce)
}

// string OpenOff = 17;
inline void MatchStruct::clear_openoff() {
  openoff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::openoff() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OpenOff)
  return openoff_.GetNoArena();
}
inline void MatchStruct::set_openoff(const ::std::string& value) {
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OpenOff)
}
#if LANG_CXX11
inline void MatchStruct::set_openoff(::std::string&& value) {
  
  openoff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OpenOff)
}
#endif
inline void MatchStruct::set_openoff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OpenOff)
}
inline void MatchStruct::set_openoff(const char* value, size_t size) {
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OpenOff)
}
inline ::std::string* MatchStruct::mutable_openoff() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OpenOff)
  return openoff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_openoff() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OpenOff)
  
  return openoff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_openoff(::std::string* openoff) {
  if (openoff != NULL) {
    
  } else {
    
  }
  openoff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openoff);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OpenOff)
}

// string LeavesQty = 18;
inline void MatchStruct::clear_leavesqty() {
  leavesqty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::leavesqty() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.LeavesQty)
  return leavesqty_.GetNoArena();
}
inline void MatchStruct::set_leavesqty(const ::std::string& value) {
  
  leavesqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.LeavesQty)
}
#if LANG_CXX11
inline void MatchStruct::set_leavesqty(::std::string&& value) {
  
  leavesqty_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.LeavesQty)
}
#endif
inline void MatchStruct::set_leavesqty(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leavesqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.LeavesQty)
}
inline void MatchStruct::set_leavesqty(const char* value, size_t size) {
  
  leavesqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.LeavesQty)
}
inline ::std::string* MatchStruct::mutable_leavesqty() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.LeavesQty)
  return leavesqty_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_leavesqty() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.LeavesQty)
  
  return leavesqty_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_leavesqty(::std::string* leavesqty) {
  if (leavesqty != NULL) {
    
  } else {
    
  }
  leavesqty_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leavesqty);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.LeavesQty)
}

// string CumQty1 = 19;
inline void MatchStruct::clear_cumqty1() {
  cumqty1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::cumqty1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.CumQty1)
  return cumqty1_.GetNoArena();
}
inline void MatchStruct::set_cumqty1(const ::std::string& value) {
  
  cumqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.CumQty1)
}
#if LANG_CXX11
inline void MatchStruct::set_cumqty1(::std::string&& value) {
  
  cumqty1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.CumQty1)
}
#endif
inline void MatchStruct::set_cumqty1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cumqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.CumQty1)
}
inline void MatchStruct::set_cumqty1(const char* value, size_t size) {
  
  cumqty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.CumQty1)
}
inline ::std::string* MatchStruct::mutable_cumqty1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.CumQty1)
  return cumqty1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_cumqty1() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.CumQty1)
  
  return cumqty1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_cumqty1(::std::string* cumqty1) {
  if (cumqty1 != NULL) {
    
  } else {
    
  }
  cumqty1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cumqty1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.CumQty1)
}

// string CumQty2 = 20;
inline void MatchStruct::clear_cumqty2() {
  cumqty2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::cumqty2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.CumQty2)
  return cumqty2_.GetNoArena();
}
inline void MatchStruct::set_cumqty2(const ::std::string& value) {
  
  cumqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.CumQty2)
}
#if LANG_CXX11
inline void MatchStruct::set_cumqty2(::std::string&& value) {
  
  cumqty2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.CumQty2)
}
#endif
inline void MatchStruct::set_cumqty2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cumqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.CumQty2)
}
inline void MatchStruct::set_cumqty2(const char* value, size_t size) {
  
  cumqty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.CumQty2)
}
inline ::std::string* MatchStruct::mutable_cumqty2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.CumQty2)
  return cumqty2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_cumqty2() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.CumQty2)
  
  return cumqty2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_cumqty2(::std::string* cumqty2) {
  if (cumqty2 != NULL) {
    
  } else {
    
  }
  cumqty2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cumqty2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.CumQty2)
}

// string TradeDate = 21;
inline void MatchStruct::clear_tradedate() {
  tradedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::tradedate() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.TradeDate)
  return tradedate_.GetNoArena();
}
inline void MatchStruct::set_tradedate(const ::std::string& value) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.TradeDate)
}
#if LANG_CXX11
inline void MatchStruct::set_tradedate(::std::string&& value) {
  
  tradedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.TradeDate)
}
#endif
inline void MatchStruct::set_tradedate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.TradeDate)
}
inline void MatchStruct::set_tradedate(const char* value, size_t size) {
  
  tradedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.TradeDate)
}
inline ::std::string* MatchStruct::mutable_tradedate() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.TradeDate)
  return tradedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_tradedate() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.TradeDate)
  
  return tradedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_tradedate(::std::string* tradedate) {
  if (tradedate != NULL) {
    
  } else {
    
  }
  tradedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tradedate);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.TradeDate)
}

// string TransactTime = 22;
inline void MatchStruct::clear_transacttime() {
  transacttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::transacttime() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.TransactTime)
  return transacttime_.GetNoArena();
}
inline void MatchStruct::set_transacttime(const ::std::string& value) {
  
  transacttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.TransactTime)
}
#if LANG_CXX11
inline void MatchStruct::set_transacttime(::std::string&& value) {
  
  transacttime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.TransactTime)
}
#endif
inline void MatchStruct::set_transacttime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transacttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.TransactTime)
}
inline void MatchStruct::set_transacttime(const char* value, size_t size) {
  
  transacttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.TransactTime)
}
inline ::std::string* MatchStruct::mutable_transacttime() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.TransactTime)
  return transacttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_transacttime() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.TransactTime)
  
  return transacttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_transacttime(::std::string* transacttime) {
  if (transacttime != NULL) {
    
  } else {
    
  }
  transacttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transacttime);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.TransactTime)
}

// string OrdStatus = 23;
inline void MatchStruct::clear_ordstatus() {
  ordstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::ordstatus() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrdStatus)
  return ordstatus_.GetNoArena();
}
inline void MatchStruct::set_ordstatus(const ::std::string& value) {
  
  ordstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrdStatus)
}
#if LANG_CXX11
inline void MatchStruct::set_ordstatus(::std::string&& value) {
  
  ordstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrdStatus)
}
#endif
inline void MatchStruct::set_ordstatus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrdStatus)
}
inline void MatchStruct::set_ordstatus(const char* value, size_t size) {
  
  ordstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrdStatus)
}
inline ::std::string* MatchStruct::mutable_ordstatus() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrdStatus)
  return ordstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_ordstatus() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrdStatus)
  
  return ordstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_ordstatus(::std::string* ordstatus) {
  if (ordstatus != NULL) {
    
  } else {
    
  }
  ordstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordstatus);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrdStatus)
}

// string Msg = 24;
inline void MatchStruct::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::msg() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.Msg)
  return msg_.GetNoArena();
}
inline void MatchStruct::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.Msg)
}
#if LANG_CXX11
inline void MatchStruct::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.Msg)
}
#endif
inline void MatchStruct::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.Msg)
}
inline void MatchStruct::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.Msg)
}
inline ::std::string* MatchStruct::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_msg() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.Msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.Msg)
}

// string IsRecovered = 25;
inline void MatchStruct::clear_isrecovered() {
  isrecovered_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::isrecovered() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.IsRecovered)
  return isrecovered_.GetNoArena();
}
inline void MatchStruct::set_isrecovered(const ::std::string& value) {
  
  isrecovered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.IsRecovered)
}
#if LANG_CXX11
inline void MatchStruct::set_isrecovered(::std::string&& value) {
  
  isrecovered_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.IsRecovered)
}
#endif
inline void MatchStruct::set_isrecovered(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  isrecovered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.IsRecovered)
}
inline void MatchStruct::set_isrecovered(const char* value, size_t size) {
  
  isrecovered_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.IsRecovered)
}
inline ::std::string* MatchStruct::mutable_isrecovered() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.IsRecovered)
  return isrecovered_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_isrecovered() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.IsRecovered)
  
  return isrecovered_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_isrecovered(::std::string* isrecovered) {
  if (isrecovered != NULL) {
    
  } else {
    
  }
  isrecovered_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), isrecovered);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.IsRecovered)
}

// string FcmID_SessionID = 26;
inline void MatchStruct::clear_fcmid_sessionid() {
  fcmid_sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::fcmid_sessionid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.FcmID_SessionID)
  return fcmid_sessionid_.GetNoArena();
}
inline void MatchStruct::set_fcmid_sessionid(const ::std::string& value) {
  
  fcmid_sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.FcmID_SessionID)
}
#if LANG_CXX11
inline void MatchStruct::set_fcmid_sessionid(::std::string&& value) {
  
  fcmid_sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.FcmID_SessionID)
}
#endif
inline void MatchStruct::set_fcmid_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fcmid_sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.FcmID_SessionID)
}
inline void MatchStruct::set_fcmid_sessionid(const char* value, size_t size) {
  
  fcmid_sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.FcmID_SessionID)
}
inline ::std::string* MatchStruct::mutable_fcmid_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.FcmID_SessionID)
  return fcmid_sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_fcmid_sessionid() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.FcmID_SessionID)
  
  return fcmid_sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_fcmid_sessionid(::std::string* fcmid_sessionid) {
  if (fcmid_sessionid != NULL) {
    
  } else {
    
  }
  fcmid_sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fcmid_sessionid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.FcmID_SessionID)
}

// string DealUniKey = 27;
inline void MatchStruct::clear_dealunikey() {
  dealunikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::dealunikey() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.DealUniKey)
  return dealunikey_.GetNoArena();
}
inline void MatchStruct::set_dealunikey(const ::std::string& value) {
  
  dealunikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.DealUniKey)
}
#if LANG_CXX11
inline void MatchStruct::set_dealunikey(::std::string&& value) {
  
  dealunikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.DealUniKey)
}
#endif
inline void MatchStruct::set_dealunikey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dealunikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.DealUniKey)
}
inline void MatchStruct::set_dealunikey(const char* value, size_t size) {
  
  dealunikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.DealUniKey)
}
inline ::std::string* MatchStruct::mutable_dealunikey() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.DealUniKey)
  return dealunikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_dealunikey() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.DealUniKey)
  
  return dealunikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_dealunikey(::std::string* dealunikey) {
  if (dealunikey != NULL) {
    
  } else {
    
  }
  dealunikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealunikey);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.DealUniKey)
}

// string DealPrice = 28;
inline void MatchStruct::clear_dealprice() {
  dealprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::dealprice() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.DealPrice)
  return dealprice_.GetNoArena();
}
inline void MatchStruct::set_dealprice(const ::std::string& value) {
  
  dealprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.DealPrice)
}
#if LANG_CXX11
inline void MatchStruct::set_dealprice(::std::string&& value) {
  
  dealprice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.DealPrice)
}
#endif
inline void MatchStruct::set_dealprice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dealprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.DealPrice)
}
inline void MatchStruct::set_dealprice(const char* value, size_t size) {
  
  dealprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.DealPrice)
}
inline ::std::string* MatchStruct::mutable_dealprice() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.DealPrice)
  return dealprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_dealprice() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.DealPrice)
  
  return dealprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_dealprice(::std::string* dealprice) {
  if (dealprice != NULL) {
    
  } else {
    
  }
  dealprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealprice);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.DealPrice)
}

// string DealQty = 29;
inline void MatchStruct::clear_dealqty() {
  dealqty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::dealqty() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.DealQty)
  return dealqty_.GetNoArena();
}
inline void MatchStruct::set_dealqty(const ::std::string& value) {
  
  dealqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.DealQty)
}
#if LANG_CXX11
inline void MatchStruct::set_dealqty(::std::string&& value) {
  
  dealqty_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.DealQty)
}
#endif
inline void MatchStruct::set_dealqty(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dealqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.DealQty)
}
inline void MatchStruct::set_dealqty(const char* value, size_t size) {
  
  dealqty_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.DealQty)
}
inline ::std::string* MatchStruct::mutable_dealqty() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.DealQty)
  return dealqty_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_dealqty() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.DealQty)
  
  return dealqty_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_dealqty(::std::string* dealqty) {
  if (dealqty != NULL) {
    
  } else {
    
  }
  dealqty_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealqty);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.DealQty)
}

// string DealPriceLeg1 = 30;
inline void MatchStruct::clear_dealpriceleg1() {
  dealpriceleg1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::dealpriceleg1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.DealPriceLeg1)
  return dealpriceleg1_.GetNoArena();
}
inline void MatchStruct::set_dealpriceleg1(const ::std::string& value) {
  
  dealpriceleg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.DealPriceLeg1)
}
#if LANG_CXX11
inline void MatchStruct::set_dealpriceleg1(::std::string&& value) {
  
  dealpriceleg1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.DealPriceLeg1)
}
#endif
inline void MatchStruct::set_dealpriceleg1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dealpriceleg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.DealPriceLeg1)
}
inline void MatchStruct::set_dealpriceleg1(const char* value, size_t size) {
  
  dealpriceleg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.DealPriceLeg1)
}
inline ::std::string* MatchStruct::mutable_dealpriceleg1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.DealPriceLeg1)
  return dealpriceleg1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_dealpriceleg1() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.DealPriceLeg1)
  
  return dealpriceleg1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_dealpriceleg1(::std::string* dealpriceleg1) {
  if (dealpriceleg1 != NULL) {
    
  } else {
    
  }
  dealpriceleg1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealpriceleg1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.DealPriceLeg1)
}

// string DealPriceLeg2 = 31;
inline void MatchStruct::clear_dealpriceleg2() {
  dealpriceleg2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::dealpriceleg2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.DealPriceLeg2)
  return dealpriceleg2_.GetNoArena();
}
inline void MatchStruct::set_dealpriceleg2(const ::std::string& value) {
  
  dealpriceleg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.DealPriceLeg2)
}
#if LANG_CXX11
inline void MatchStruct::set_dealpriceleg2(::std::string&& value) {
  
  dealpriceleg2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.DealPriceLeg2)
}
#endif
inline void MatchStruct::set_dealpriceleg2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dealpriceleg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.DealPriceLeg2)
}
inline void MatchStruct::set_dealpriceleg2(const char* value, size_t size) {
  
  dealpriceleg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.DealPriceLeg2)
}
inline ::std::string* MatchStruct::mutable_dealpriceleg2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.DealPriceLeg2)
  return dealpriceleg2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_dealpriceleg2() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.DealPriceLeg2)
  
  return dealpriceleg2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_dealpriceleg2(::std::string* dealpriceleg2) {
  if (dealpriceleg2 != NULL) {
    
  } else {
    
  }
  dealpriceleg2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dealpriceleg2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.DealPriceLeg2)
}

// string ScForce = 32;
inline void MatchStruct::clear_scforce() {
  scforce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::scforce() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.ScForce)
  return scforce_.GetNoArena();
}
inline void MatchStruct::set_scforce(const ::std::string& value) {
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.ScForce)
}
#if LANG_CXX11
inline void MatchStruct::set_scforce(::std::string&& value) {
  
  scforce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.ScForce)
}
#endif
inline void MatchStruct::set_scforce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.ScForce)
}
inline void MatchStruct::set_scforce(const char* value, size_t size) {
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.ScForce)
}
inline ::std::string* MatchStruct::mutable_scforce() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.ScForce)
  return scforce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_scforce() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.ScForce)
  
  return scforce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_scforce(::std::string* scforce) {
  if (scforce != NULL) {
    
  } else {
    
  }
  scforce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scforce);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.ScForce)
}

// string ExchangeCode = 33;
inline void MatchStruct::clear_exchangecode() {
  exchangecode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::exchangecode() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.ExchangeCode)
  return exchangecode_.GetNoArena();
}
inline void MatchStruct::set_exchangecode(const ::std::string& value) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.ExchangeCode)
}
#if LANG_CXX11
inline void MatchStruct::set_exchangecode(::std::string&& value) {
  
  exchangecode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.ExchangeCode)
}
#endif
inline void MatchStruct::set_exchangecode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.ExchangeCode)
}
inline void MatchStruct::set_exchangecode(const char* value, size_t size) {
  
  exchangecode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.ExchangeCode)
}
inline ::std::string* MatchStruct::mutable_exchangecode() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.ExchangeCode)
  return exchangecode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_exchangecode() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.ExchangeCode)
  
  return exchangecode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_exchangecode(::std::string* exchangecode) {
  if (exchangecode != NULL) {
    
  } else {
    
  }
  exchangecode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exchangecode);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.ExchangeCode)
}

// string OrderChannel = 34;
inline void MatchStruct::clear_orderchannel() {
  orderchannel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::orderchannel() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrderChannel)
  return orderchannel_.GetNoArena();
}
inline void MatchStruct::set_orderchannel(const ::std::string& value) {
  
  orderchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrderChannel)
}
#if LANG_CXX11
inline void MatchStruct::set_orderchannel(::std::string&& value) {
  
  orderchannel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrderChannel)
}
#endif
inline void MatchStruct::set_orderchannel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  orderchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrderChannel)
}
inline void MatchStruct::set_orderchannel(const char* value, size_t size) {
  
  orderchannel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrderChannel)
}
inline ::std::string* MatchStruct::mutable_orderchannel() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrderChannel)
  return orderchannel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_orderchannel() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrderChannel)
  
  return orderchannel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_orderchannel(::std::string* orderchannel) {
  if (orderchannel != NULL) {
    
  } else {
    
  }
  orderchannel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderchannel);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrderChannel)
}

// string OrdTime = 35;
inline void MatchStruct::clear_ordtime() {
  ordtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchStruct::ordtime() const {
  // @@protoc_insertion_point(field_get:MessageFormat.MatchStruct.OrdTime)
  return ordtime_.GetNoArena();
}
inline void MatchStruct::set_ordtime(const ::std::string& value) {
  
  ordtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.MatchStruct.OrdTime)
}
#if LANG_CXX11
inline void MatchStruct::set_ordtime(::std::string&& value) {
  
  ordtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.MatchStruct.OrdTime)
}
#endif
inline void MatchStruct::set_ordtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.MatchStruct.OrdTime)
}
inline void MatchStruct::set_ordtime(const char* value, size_t size) {
  
  ordtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.MatchStruct.OrdTime)
}
inline ::std::string* MatchStruct::mutable_ordtime() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.MatchStruct.OrdTime)
  return ordtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchStruct::release_ordtime() {
  // @@protoc_insertion_point(field_release:MessageFormat.MatchStruct.OrdTime)
  
  return ordtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchStruct::set_allocated_ordtime(::std::string* ordtime) {
  if (ordtime != NULL) {
    
  } else {
    
  }
  ordtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordtime);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.MatchStruct.OrdTime)
}

// -------------------------------------------------------------------

// OrderStruct

// string UniID = 1;
inline void OrderStruct::clear_uniid() {
  uniid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::uniid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.UniID)
  return uniid_.GetNoArena();
}
inline void OrderStruct::set_uniid(const ::std::string& value) {
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.UniID)
}
#if LANG_CXX11
inline void OrderStruct::set_uniid(::std::string&& value) {
  
  uniid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.UniID)
}
#endif
inline void OrderStruct::set_uniid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.UniID)
}
inline void OrderStruct::set_uniid(const char* value, size_t size) {
  
  uniid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.UniID)
}
inline ::std::string* OrderStruct::mutable_uniid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.UniID)
  return uniid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_uniid() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.UniID)
  
  return uniid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_uniid(::std::string* uniid) {
  if (uniid != NULL) {
    
  } else {
    
  }
  uniid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uniid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.UniID)
}

// string ClOrdID = 2;
inline void OrderStruct::clear_clordid() {
  clordid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::clordid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.ClOrdID)
  return clordid_.GetNoArena();
}
inline void OrderStruct::set_clordid(const ::std::string& value) {
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.ClOrdID)
}
#if LANG_CXX11
inline void OrderStruct::set_clordid(::std::string&& value) {
  
  clordid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.ClOrdID)
}
#endif
inline void OrderStruct::set_clordid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.ClOrdID)
}
inline void OrderStruct::set_clordid(const char* value, size_t size) {
  
  clordid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.ClOrdID)
}
inline ::std::string* OrderStruct::mutable_clordid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.ClOrdID)
  return clordid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_clordid() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.ClOrdID)
  
  return clordid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_clordid(::std::string* clordid) {
  if (clordid != NULL) {
    
  } else {
    
  }
  clordid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clordid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.ClOrdID)
}

// string UserDef = 3;
inline void OrderStruct::clear_userdef() {
  userdef_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::userdef() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.UserDef)
  return userdef_.GetNoArena();
}
inline void OrderStruct::set_userdef(const ::std::string& value) {
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.UserDef)
}
#if LANG_CXX11
inline void OrderStruct::set_userdef(::std::string&& value) {
  
  userdef_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.UserDef)
}
#endif
inline void OrderStruct::set_userdef(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.UserDef)
}
inline void OrderStruct::set_userdef(const char* value, size_t size) {
  
  userdef_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.UserDef)
}
inline ::std::string* OrderStruct::mutable_userdef() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.UserDef)
  return userdef_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_userdef() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.UserDef)
  
  return userdef_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_userdef(::std::string* userdef) {
  if (userdef != NULL) {
    
  } else {
    
  }
  userdef_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userdef);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.UserDef)
}

// string BrokerID = 4;
inline void OrderStruct::clear_brokerid() {
  brokerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::brokerid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.BrokerID)
  return brokerid_.GetNoArena();
}
inline void OrderStruct::set_brokerid(const ::std::string& value) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.BrokerID)
}
#if LANG_CXX11
inline void OrderStruct::set_brokerid(::std::string&& value) {
  
  brokerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.BrokerID)
}
#endif
inline void OrderStruct::set_brokerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.BrokerID)
}
inline void OrderStruct::set_brokerid(const char* value, size_t size) {
  
  brokerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.BrokerID)
}
inline ::std::string* OrderStruct::mutable_brokerid() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.BrokerID)
  return brokerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_brokerid() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.BrokerID)
  
  return brokerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_brokerid(::std::string* brokerid) {
  if (brokerid != NULL) {
    
  } else {
    
  }
  brokerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brokerid);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.BrokerID)
}

// string Account = 5;
inline void OrderStruct::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::account() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Account)
  return account_.GetNoArena();
}
inline void OrderStruct::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Account)
}
#if LANG_CXX11
inline void OrderStruct::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Account)
}
#endif
inline void OrderStruct::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Account)
}
inline void OrderStruct::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Account)
}
inline ::std::string* OrderStruct::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_account() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Account)
}

// string SubAcc = 6;
inline void OrderStruct::clear_subacc() {
  subacc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::subacc() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.SubAcc)
  return subacc_.GetNoArena();
}
inline void OrderStruct::set_subacc(const ::std::string& value) {
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.SubAcc)
}
#if LANG_CXX11
inline void OrderStruct::set_subacc(::std::string&& value) {
  
  subacc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.SubAcc)
}
#endif
inline void OrderStruct::set_subacc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.SubAcc)
}
inline void OrderStruct::set_subacc(const char* value, size_t size) {
  
  subacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.SubAcc)
}
inline ::std::string* OrderStruct::mutable_subacc() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.SubAcc)
  return subacc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_subacc() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.SubAcc)
  
  return subacc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_subacc(::std::string* subacc) {
  if (subacc != NULL) {
    
  } else {
    
  }
  subacc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subacc);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.SubAcc)
}

// string Side = 7;
inline void OrderStruct::clear_side() {
  side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::side() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Side)
  return side_.GetNoArena();
}
inline void OrderStruct::set_side(const ::std::string& value) {
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Side)
}
#if LANG_CXX11
inline void OrderStruct::set_side(::std::string&& value) {
  
  side_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Side)
}
#endif
inline void OrderStruct::set_side(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Side)
}
inline void OrderStruct::set_side(const char* value, size_t size) {
  
  side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Side)
}
inline ::std::string* OrderStruct::mutable_side() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Side)
  return side_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_side() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Side)
  
  return side_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_side(::std::string* side) {
  if (side != NULL) {
    
  } else {
    
  }
  side_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), side);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Side)
}

// string SecurityType = 8;
inline void OrderStruct::clear_securitytype() {
  securitytype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::securitytype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.SecurityType)
  return securitytype_.GetNoArena();
}
inline void OrderStruct::set_securitytype(const ::std::string& value) {
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.SecurityType)
}
#if LANG_CXX11
inline void OrderStruct::set_securitytype(::std::string&& value) {
  
  securitytype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.SecurityType)
}
#endif
inline void OrderStruct::set_securitytype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.SecurityType)
}
inline void OrderStruct::set_securitytype(const char* value, size_t size) {
  
  securitytype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.SecurityType)
}
inline ::std::string* OrderStruct::mutable_securitytype() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.SecurityType)
  return securitytype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_securitytype() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.SecurityType)
  
  return securitytype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_securitytype(::std::string* securitytype) {
  if (securitytype != NULL) {
    
  } else {
    
  }
  securitytype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), securitytype);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.SecurityType)
}

// string Fcode = 9;
inline void OrderStruct::clear_fcode() {
  fcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::fcode() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Fcode)
  return fcode_.GetNoArena();
}
inline void OrderStruct::set_fcode(const ::std::string& value) {
  
  fcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Fcode)
}
#if LANG_CXX11
inline void OrderStruct::set_fcode(::std::string&& value) {
  
  fcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Fcode)
}
#endif
inline void OrderStruct::set_fcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Fcode)
}
inline void OrderStruct::set_fcode(const char* value, size_t size) {
  
  fcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Fcode)
}
inline ::std::string* OrderStruct::mutable_fcode() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Fcode)
  return fcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_fcode() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Fcode)
  
  return fcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_fcode(::std::string* fcode) {
  if (fcode != NULL) {
    
  } else {
    
  }
  fcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fcode);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Fcode)
}

// string Symbol = 10;
inline void OrderStruct::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::symbol() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Symbol)
  return symbol_.GetNoArena();
}
inline void OrderStruct::set_symbol(const ::std::string& value) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Symbol)
}
#if LANG_CXX11
inline void OrderStruct::set_symbol(::std::string&& value) {
  
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Symbol)
}
#endif
inline void OrderStruct::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Symbol)
}
inline void OrderStruct::set_symbol(const char* value, size_t size) {
  
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Symbol)
}
inline ::std::string* OrderStruct::mutable_symbol() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_symbol() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Symbol)
  
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    
  } else {
    
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Symbol)
}

// string SegMkt = 11;
inline void OrderStruct::clear_segmkt() {
  segmkt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::segmkt() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.SegMkt)
  return segmkt_.GetNoArena();
}
inline void OrderStruct::set_segmkt(const ::std::string& value) {
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.SegMkt)
}
#if LANG_CXX11
inline void OrderStruct::set_segmkt(::std::string&& value) {
  
  segmkt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.SegMkt)
}
#endif
inline void OrderStruct::set_segmkt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.SegMkt)
}
inline void OrderStruct::set_segmkt(const char* value, size_t size) {
  
  segmkt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.SegMkt)
}
inline ::std::string* OrderStruct::mutable_segmkt() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.SegMkt)
  return segmkt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_segmkt() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.SegMkt)
  
  return segmkt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_segmkt(::std::string* segmkt) {
  if (segmkt != NULL) {
    
  } else {
    
  }
  segmkt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), segmkt);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.SegMkt)
}

// string Price1 = 12;
inline void OrderStruct::clear_price1() {
  price1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::price1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Price1)
  return price1_.GetNoArena();
}
inline void OrderStruct::set_price1(const ::std::string& value) {
  
  price1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Price1)
}
#if LANG_CXX11
inline void OrderStruct::set_price1(::std::string&& value) {
  
  price1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Price1)
}
#endif
inline void OrderStruct::set_price1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Price1)
}
inline void OrderStruct::set_price1(const char* value, size_t size) {
  
  price1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Price1)
}
inline ::std::string* OrderStruct::mutable_price1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Price1)
  return price1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_price1() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Price1)
  
  return price1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_price1(::std::string* price1) {
  if (price1 != NULL) {
    
  } else {
    
  }
  price1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Price1)
}

// string Price2 = 13;
inline void OrderStruct::clear_price2() {
  price2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::price2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Price2)
  return price2_.GetNoArena();
}
inline void OrderStruct::set_price2(const ::std::string& value) {
  
  price2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Price2)
}
#if LANG_CXX11
inline void OrderStruct::set_price2(::std::string&& value) {
  
  price2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Price2)
}
#endif
inline void OrderStruct::set_price2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Price2)
}
inline void OrderStruct::set_price2(const char* value, size_t size) {
  
  price2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Price2)
}
inline ::std::string* OrderStruct::mutable_price2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Price2)
  return price2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_price2() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Price2)
  
  return price2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_price2(::std::string* price2) {
  if (price2 != NULL) {
    
  } else {
    
  }
  price2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Price2)
}

// string Qty1 = 14;
inline void OrderStruct::clear_qty1() {
  qty1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::qty1() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Qty1)
  return qty1_.GetNoArena();
}
inline void OrderStruct::set_qty1(const ::std::string& value) {
  
  qty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Qty1)
}
#if LANG_CXX11
inline void OrderStruct::set_qty1(::std::string&& value) {
  
  qty1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Qty1)
}
#endif
inline void OrderStruct::set_qty1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Qty1)
}
inline void OrderStruct::set_qty1(const char* value, size_t size) {
  
  qty1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Qty1)
}
inline ::std::string* OrderStruct::mutable_qty1() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Qty1)
  return qty1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_qty1() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Qty1)
  
  return qty1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_qty1(::std::string* qty1) {
  if (qty1 != NULL) {
    
  } else {
    
  }
  qty1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qty1);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Qty1)
}

// string Qty2 = 15;
inline void OrderStruct::clear_qty2() {
  qty2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::qty2() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.Qty2)
  return qty2_.GetNoArena();
}
inline void OrderStruct::set_qty2(const ::std::string& value) {
  
  qty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.Qty2)
}
#if LANG_CXX11
inline void OrderStruct::set_qty2(::std::string&& value) {
  
  qty2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.Qty2)
}
#endif
inline void OrderStruct::set_qty2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  qty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.Qty2)
}
inline void OrderStruct::set_qty2(const char* value, size_t size) {
  
  qty2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.Qty2)
}
inline ::std::string* OrderStruct::mutable_qty2() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.Qty2)
  return qty2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_qty2() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.Qty2)
  
  return qty2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_qty2(::std::string* qty2) {
  if (qty2 != NULL) {
    
  } else {
    
  }
  qty2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qty2);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.Qty2)
}

// string OrdNo = 16;
inline void OrderStruct::clear_ordno() {
  ordno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::ordno() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.OrdNo)
  return ordno_.GetNoArena();
}
inline void OrderStruct::set_ordno(const ::std::string& value) {
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.OrdNo)
}
#if LANG_CXX11
inline void OrderStruct::set_ordno(::std::string&& value) {
  
  ordno_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.OrdNo)
}
#endif
inline void OrderStruct::set_ordno(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.OrdNo)
}
inline void OrderStruct::set_ordno(const char* value, size_t size) {
  
  ordno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.OrdNo)
}
inline ::std::string* OrderStruct::mutable_ordno() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.OrdNo)
  return ordno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_ordno() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.OrdNo)
  
  return ordno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_ordno(::std::string* ordno) {
  if (ordno != NULL) {
    
  } else {
    
  }
  ordno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordno);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.OrdNo)
}

// string OrdType = 17;
inline void OrderStruct::clear_ordtype() {
  ordtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::ordtype() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.OrdType)
  return ordtype_.GetNoArena();
}
inline void OrderStruct::set_ordtype(const ::std::string& value) {
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.OrdType)
}
#if LANG_CXX11
inline void OrderStruct::set_ordtype(::std::string&& value) {
  
  ordtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.OrdType)
}
#endif
inline void OrderStruct::set_ordtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.OrdType)
}
inline void OrderStruct::set_ordtype(const char* value, size_t size) {
  
  ordtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.OrdType)
}
inline ::std::string* OrderStruct::mutable_ordtype() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.OrdType)
  return ordtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_ordtype() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.OrdType)
  
  return ordtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_ordtype(::std::string* ordtype) {
  if (ordtype != NULL) {
    
  } else {
    
  }
  ordtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordtype);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.OrdType)
}

// string TimeInForce = 18;
inline void OrderStruct::clear_timeinforce() {
  timeinforce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::timeinforce() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.TimeInForce)
  return timeinforce_.GetNoArena();
}
inline void OrderStruct::set_timeinforce(const ::std::string& value) {
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.TimeInForce)
}
#if LANG_CXX11
inline void OrderStruct::set_timeinforce(::std::string&& value) {
  
  timeinforce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.TimeInForce)
}
#endif
inline void OrderStruct::set_timeinforce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.TimeInForce)
}
inline void OrderStruct::set_timeinforce(const char* value, size_t size) {
  
  timeinforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.TimeInForce)
}
inline ::std::string* OrderStruct::mutable_timeinforce() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.TimeInForce)
  return timeinforce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_timeinforce() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.TimeInForce)
  
  return timeinforce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_timeinforce(::std::string* timeinforce) {
  if (timeinforce != NULL) {
    
  } else {
    
  }
  timeinforce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeinforce);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.TimeInForce)
}

// string OpenOff = 19;
inline void OrderStruct::clear_openoff() {
  openoff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::openoff() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.OpenOff)
  return openoff_.GetNoArena();
}
inline void OrderStruct::set_openoff(const ::std::string& value) {
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.OpenOff)
}
#if LANG_CXX11
inline void OrderStruct::set_openoff(::std::string&& value) {
  
  openoff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.OpenOff)
}
#endif
inline void OrderStruct::set_openoff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.OpenOff)
}
inline void OrderStruct::set_openoff(const char* value, size_t size) {
  
  openoff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.OpenOff)
}
inline ::std::string* OrderStruct::mutable_openoff() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.OpenOff)
  return openoff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_openoff() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.OpenOff)
  
  return openoff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_openoff(::std::string* openoff) {
  if (openoff != NULL) {
    
  } else {
    
  }
  openoff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openoff);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.OpenOff)
}

// string ScForce = 20;
inline void OrderStruct::clear_scforce() {
  scforce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::scforce() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.ScForce)
  return scforce_.GetNoArena();
}
inline void OrderStruct::set_scforce(const ::std::string& value) {
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.ScForce)
}
#if LANG_CXX11
inline void OrderStruct::set_scforce(::std::string&& value) {
  
  scforce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.ScForce)
}
#endif
inline void OrderStruct::set_scforce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.ScForce)
}
inline void OrderStruct::set_scforce(const char* value, size_t size) {
  
  scforce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.ScForce)
}
inline ::std::string* OrderStruct::mutable_scforce() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.ScForce)
  return scforce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_scforce() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.ScForce)
  
  return scforce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_scforce(::std::string* scforce) {
  if (scforce != NULL) {
    
  } else {
    
  }
  scforce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scforce);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.ScForce)
}

// int32 IsReserved = 21;
inline void OrderStruct::clear_isreserved() {
  isreserved_ = 0;
}
inline ::google::protobuf::int32 OrderStruct::isreserved() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.IsReserved)
  return isreserved_;
}
inline void OrderStruct::set_isreserved(::google::protobuf::int32 value) {
  
  isreserved_ = value;
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.IsReserved)
}

// string ReserveCondition = 22;
inline void OrderStruct::clear_reservecondition() {
  reservecondition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderStruct::reservecondition() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.ReserveCondition)
  return reservecondition_.GetNoArena();
}
inline void OrderStruct::set_reservecondition(const ::std::string& value) {
  
  reservecondition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.ReserveCondition)
}
#if LANG_CXX11
inline void OrderStruct::set_reservecondition(::std::string&& value) {
  
  reservecondition_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageFormat.OrderStruct.ReserveCondition)
}
#endif
inline void OrderStruct::set_reservecondition(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reservecondition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageFormat.OrderStruct.ReserveCondition)
}
inline void OrderStruct::set_reservecondition(const char* value, size_t size) {
  
  reservecondition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageFormat.OrderStruct.ReserveCondition)
}
inline ::std::string* OrderStruct::mutable_reservecondition() {
  
  // @@protoc_insertion_point(field_mutable:MessageFormat.OrderStruct.ReserveCondition)
  return reservecondition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderStruct::release_reservecondition() {
  // @@protoc_insertion_point(field_release:MessageFormat.OrderStruct.ReserveCondition)
  
  return reservecondition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderStruct::set_allocated_reservecondition(::std::string* reservecondition) {
  if (reservecondition != NULL) {
    
  } else {
    
  }
  reservecondition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reservecondition);
  // @@protoc_insertion_point(field_set_allocated:MessageFormat.OrderStruct.ReserveCondition)
}

// int32 ExchID = 23;
inline void OrderStruct::clear_exchid() {
  exchid_ = 0;
}
inline ::google::protobuf::int32 OrderStruct::exchid() const {
  // @@protoc_insertion_point(field_get:MessageFormat.OrderStruct.ExchID)
  return exchid_;
}
inline void OrderStruct::set_exchid(::google::protobuf::int32 value) {
  
  exchid_ = value;
  // @@protoc_insertion_point(field_set:MessageFormat.OrderStruct.ExchID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace MessageFormat

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageFormat::ENUM_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageFormat::ENUM_ActionType>() {
  return ::MessageFormat::ENUM_ActionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageFormat_2eproto__INCLUDED