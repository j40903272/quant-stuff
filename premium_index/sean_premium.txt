// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© seanhung07

//@version=5
// indicator('Premium Index', overlay=false)
strategy('SEAN_Premium', overlay=false, initial_capital=1000, currency='USD', pyramiding=1, default_qty_type=strategy.cash, default_qty_value=1000, commission_value=0.04)
string ticker = input.string("ETH")

ETHBINGX = request.security('BINGX:' + ticker +'USDT.PS', timeframe.period, close) 
ETHPERP  = request.security('BINANCE:' + ticker + 'USDT.P', timeframe.period, close)

// ETHBINGX = request.security('BINGX:ETHUSDT.PS', timeframe.period, close)
// ETHPERP = request.security('BINANCE:ETHUSDT.P', timeframe.period, close)
ETHPREM = 100 * (ETHPERP / ta.vwap(ETHBINGX) - 1)
ETHPREM_ema = ta.ema(ETHPREM, input.int(154)) // 150 - 200 // 154
ETHPREM_vwap= ta.ema(ETHPREM, input.int(48)) // 30 - 60 // 45

//ATR of ETHPREM
length = input.int(title="Length", defval=14, minval=1)
diff = math.abs(ETHPREM-ETHPREM[1])
rma_diff = ta.rma(diff,length)
rsi_p = ta.rsi(ETHPREM_vwap,input.int(16))
plot(rsi_p, title = "ATR_PREM", color=color.new(#B71C1C, 0)) 
hline(20)
hline(50)
hline(70)
//lwma
lwma_length = input(15)
weighted_close = (open + high + close + close)/4
get_lwma(src,period, weight) =>
    price = src
    sub = (weight/period)-1
    float p = na
    float d = na
    float sum = 0
    float divider = 0
    for i = 0 to period-1
        p := price[i] * ((weight-i)-sub)
        d := (weight-i)-sub
        sum := sum + p
        divider := divider + d
    sum / divider

atr_percentage = input(0.3)
lwma = get_lwma(weighted_close, lwma_length, 1)
high_ma = ta.sma(high,lwma_length) - atr_percentage * ta.atr(7)
low_ma = ta.sma(low, lwma_length) + atr_percentage * ta.atr(7)
hist = (lwma - high_ma)
hist_color = lwma > high_ma and lwma > low_ma ? color.red : (lwma < high_ma and lwma < low_ma ? color.green : na)
hist_y = hist_color == color.green ? math.min(hist, 0) : math.max(hist, 0)
hist_y := -hist_y

buy = ta.crossover(rsi_p, input.int(42))
sell = ta.crossunder(ETHPREM_vwap, ETHPREM_ema) and ETHPREM < 0 and hist_y!=0 and rma_diff < input.float(0.6)
plotshape(buy, style=shape.labelup, location = location.bottom, color = color.green, size = size.small)
plotshape(sell, style=shape.labeldown, location = location.top, color=color.red, size = size.small)
// plot(ETHPREM, title='ETH Premium', color=color.new(color.orange, 0), style=plot.style_line)
// plot(ETHPREM_vwap, title='ETH Premium', color=color.new(#0000ff, 0), style=plot.style_line)
// plot(ETHPREM_ema, title='ETH Premium EMA', color=color.green, style=plot.style_line, color=ETHPREM_ema >= 0 ? color.gray : color.green)
// plot(ETHPREM)
stopPer = input.float(2, title='Stop Loss %' , step = 0.01) / 100 //2.5
takePer = input.float(12, title='Take Profit %', step = 0.01) / 100 //12
longStop = strategy.position_avg_price * (1 - stopPer)
shortStop = strategy.position_avg_price * (1 + stopPer)
shortTake = strategy.position_avg_price * (1 - takePer)
longTake = strategy.position_avg_price * (1 + takePer)
// plot(strategy.position_size > 0 ? longStop : na, style=plot.style_linebr, color=color.red, linewidth=1, title="Long Fixed SL")
// plot(strategy.position_size < 0 ? shortStop : na, style=plot.style_linebr, color=color.red, linewidth=1, title="Short Fixed SL")
strategy.entry('Long', strategy.long, when=buy)
strategy.entry('Short', strategy.short, when=sell)
if strategy.position_size > 0 
    strategy.exit(id="Close Long", stop=longStop, limit = longTake)
if strategy.position_size < 0 
    strategy.exit(id="Close Short", stop=shortStop, limit = shortTake)
